id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/11751:92,safety,updat,updated,92,"[hist] Fix computation of statistics in TH2::Fill(nameX, nameY); The Sum in x and y was not updated when the X and Y axis are not extendable or are not alphanumerics. . This PR fixes ROOT #11746.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11751
https://github.com/root-project/root/pull/11751:92,security,updat,updated,92,"[hist] Fix computation of statistics in TH2::Fill(nameX, nameY); The Sum in x and y was not updated when the X and Y axis are not extendable or are not alphanumerics. . This PR fixes ROOT #11746.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11751
https://github.com/root-project/root/pull/11752:336,deployability,depend,dependencies,336,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:829,deployability,updat,updated,829,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:277,integrability,configur,configure,277,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:317,integrability,configur,configure,317,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:336,integrability,depend,dependencies,336,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:397,integrability,configur,configure,397,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:425,integrability,configur,configure,425,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:605,integrability,configur,configure,605,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:277,modifiability,configur,configure,277,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:317,modifiability,configur,configure,317,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:336,modifiability,depend,dependencies,336,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:397,modifiability,configur,configure,397,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:425,modifiability,configur,configure,425,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:605,modifiability,configur,configure,605,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:40,performance,time,timestamps,40,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:81,performance,time,timestamps,81,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:128,performance,time,timestamp,128,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:627,performance,time,timestamp,627,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:336,safety,depend,dependencies,336,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:364,safety,input,input,364,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:799,safety,test,tested,799,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:829,safety,updat,updated,829,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:206,security,polic,policy,206,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:226,security,polic,policy,226,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:277,security,configur,configure,277,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:317,security,configur,configure,317,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:397,security,configur,configure,397,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:425,security,configur,configure,425,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:605,security,configur,configure,605,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:829,security,updat,updated,829,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:336,testability,depend,dependencies,336,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:799,testability,test,tested,799,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:194,usability,help,help,194,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11752:364,usability,input,input,364,"[cmake] Tell CMake >= 3.24 to use tared timestamps:; Newer CMake uses extraction timestamps for extracted files, instead of the timestamp as stored in the tar file, see. https://cmake.org/cmake/help/latest/policy/CMP0135.html#policy:CMP0135 This causes (massive) problems with configure/Makefile tar files, where the configure/Makefile dependencies (e.g. autoconf input files) might be newer than configure/Makefile, causing configure/Makefile to wanting to regenerate themselves because they are supposedly out of date. This is https://gitlab.kitware.com/cmake/cmake/-/issues/24003. For anything with ""./configure"", force the timestamp as stored in the tar file. (cherry picked from commit e79ef2e76ea8e20c9e4edc28844b97f82122033f). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11752
https://github.com/root-project/root/pull/11753:83,deployability,contain,contain,83,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:164,deployability,contain,contains,164,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:363,deployability,depend,dependencies,363,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:405,deployability,depend,depend,405,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:327,energy efficiency,core,core,327,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:96,integrability,transform,transformation,96,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:363,integrability,depend,dependencies,363,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:405,integrability,depend,depend,405,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:25,interoperability,standard,standard,25,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:59,interoperability,standard,standard,59,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:96,interoperability,transform,transformation,96,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:177,interoperability,stub,stub,177,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:363,modifiability,depend,dependencies,363,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:405,modifiability,depend,depend,405,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:363,safety,depend,dependencies,363,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:405,safety,depend,depend,405,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:177,testability,stub,stub,177,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:363,testability,depend,dependencies,363,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:405,testability,depend,depend,405,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:126,usability,tool,tools,126,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:274,usability,visual,visualization,274,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11753:302,usability,tool,tools,302,"[ntuple] Add RNTupleUtil standard library; The RNTupleUtil standard library should contain data transformation and inspection tools for RNTuples. To start with, it contains the stub class RNTupleImporter that will convert TTrees to RNTuple. In the future, we may add, e.g., visualization and debugging tools. While the RNTuple core library should remain light on dependencies, the RNTupleUtil library may depend on Tree, graphics, RDF and the rest of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11753
https://github.com/root-project/root/pull/11754:25,availability,operat,operator,25,[TMVA][SOFIE] Add Gather operator; ## This Pull request:. Development of the Gather operator for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11754
https://github.com/root-project/root/pull/11754:84,availability,operat,operator,84,[TMVA][SOFIE] Add Gather operator; ## This Pull request:. Development of the Gather operator for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11754
https://github.com/root-project/root/pull/11754:160,deployability,updat,updated,160,[TMVA][SOFIE] Add Gather operator; ## This Pull request:. Development of the Gather operator for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11754
https://github.com/root-project/root/pull/11754:130,safety,test,tested,130,[TMVA][SOFIE] Add Gather operator; ## This Pull request:. Development of the Gather operator for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11754
https://github.com/root-project/root/pull/11754:160,safety,updat,updated,160,[TMVA][SOFIE] Add Gather operator; ## This Pull request:. Development of the Gather operator for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11754
https://github.com/root-project/root/pull/11754:160,security,updat,updated,160,[TMVA][SOFIE] Add Gather operator; ## This Pull request:. Development of the Gather operator for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11754
https://github.com/root-project/root/pull/11754:130,testability,test,tested,130,[TMVA][SOFIE] Add Gather operator; ## This Pull request:. Development of the Gather operator for TMVA/SOFIE. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11754
https://github.com/root-project/root/pull/11755:208,security,modif,modified,208,"[math][minuit2] Add support for using an external Hessian; This PR add support for using an external Hesse (and optionally also second diagonal derivatives, G2 ) in Minuit2. The SeedGenerator and MnHesse are modified to use the external Hessian or G2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11755
https://github.com/root-project/root/pull/11755:20,usability,support,support,20,"[math][minuit2] Add support for using an external Hessian; This PR add support for using an external Hesse (and optionally also second diagonal derivatives, G2 ) in Minuit2. The SeedGenerator and MnHesse are modified to use the external Hessian or G2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11755
https://github.com/root-project/root/pull/11755:71,usability,support,support,71,"[math][minuit2] Add support for using an external Hessian; This PR add support for using an external Hesse (and optionally also second diagonal derivatives, G2 ) in Minuit2. The SeedGenerator and MnHesse are modified to use the external Hessian or G2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11755
https://github.com/root-project/root/pull/11756:841,deployability,Updat,Update,841,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1277,deployability,updat,updated,1277,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:318,energy efficiency,current,currently,318,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:404,modifiability,exten,extend,404,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:603,modifiability,scal,scalar,603,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:328,reliability,doe,does,328,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:841,safety,Updat,Update,841,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1127,safety,compl,complete,1127,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1219,safety,test,tests,1219,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1247,safety,test,tested,1247,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1277,safety,updat,updated,1277,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:841,security,Updat,Update,841,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1127,security,compl,complete,1127,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1277,security,updat,updated,1277,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1214,testability,unit,unit,1214,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1219,testability,test,tests,1219,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1247,testability,test,tested,1247,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:30,usability,support,support,30,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:75,usability,support,support,75,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:337,usability,support,support,337,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:445,usability,support,support,445,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/pull/11756:1015,usability,support,support,1015,"[ntuple] C-style array RField support; This pull request introduces RField support for C style arrays. In particular, it provides a `RField<T[N]>` template specialization and allows for parsing of types of the form `T[n][m]...` in `RFieldBase::Create()`. Actual RField implementation is provided by RArrayField, which currently does not support multi-dimensional arrays, although it should be trivial to extend it (if need be in a future PR) to support row-major (C order) multi-dimension arrays. Additionally, prior to this PR, class members whose type was an array of the form `T[n]` were stored as a scalar. This is considered a bug (see #11732 for all the details). The implementation provided here also fixes issue #11732. . ## Changes or fixes:. - Add `RField<ItemT[N]>` template specialization that matches single-dimension arrays. - Update `RFieldBase::Create()` to parse types of the form `T[n][m]...`. As of this PR, it returns `R__FAIL()` for multi-dimensional arrays, though it should be trivial to add support for row-major multi-dimension arrays. . - RClassField: for class members whose type is a C style array, complete the type name with the size for each dimension, e.g. `int[4][2]`. - Add array unit tests. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). This PR fixes #11732.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11756
https://github.com/root-project/root/issues/11757:1103,availability,Operat,Operating,1103,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:1178,availability,down,download,1178,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:1027,deployability,build,build,1027,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:1091,deployability,version,version,1091,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:1160,deployability,instal,install,1160,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:390,energy efficiency,profil,profile,390,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:1091,integrability,version,version,1091,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:176,interoperability,standard,standard,176,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:682,interoperability,share,share,682,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:1091,modifiability,version,version,1091,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:390,performance,profil,profile,390,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:635,safety,prevent,prevent,635,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:989,safety,input,input,989,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:635,security,preven,prevent,635,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:1232,testability,context,context,1232,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:1261,testability,context,context,1261,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:5,usability,Document,Documentation,5,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:468,usability,document,documentation,468,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:609,usability,document,documentation,609,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:844,usability,behavi,behavior,844,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11757:989,usability,input,input,989,"[RF] Documentation for the RooVoigtian; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. The RooVoigtian uses the standard deviation sigma as the width of the gaussian part. However it uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is rather unusual as many sources define the Breit-Wigner profile with the HWHM (half width half maximum). This is not explained in the documentation which can easily lead to mistakes as people use the RooVoigtian with the HWHM. It would be nice, if this could be added to the documentation in order to prevent mistakes. Thanks,. Emil. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11757
https://github.com/root-project/root/issues/11758:411,deployability,depend,dependent,411,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:548,deployability,updat,updated,548,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:411,integrability,depend,dependent,411,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:539,integrability,rout,routines,539,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:133,interoperability,format,format,133,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:140,interoperability,specif,specification,140,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:223,interoperability,specif,specifications,223,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:411,modifiability,depend,dependent,411,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:356,performance,disk,disk,356,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:611,performance,throughput,throughput,611,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:411,safety,depend,dependent,411,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:548,safety,updat,updated,548,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:548,security,updat,updated,548,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/issues/11758:411,testability,depend,dependent,411,"[ntuple] Improve the definition and use of `RNTupleLocator`s; ### Explain what you would like to see improved. As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key. Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11758
https://github.com/root-project/root/pull/11759:186,deployability,observ,observable,186,[RF] RooLagrangianMorphing improvements; # This Pull request:. Adds small improvements to RooLagrangianMorphing and RooPolyFunc. ## Changes or fixes:. - RooLagrangianMorphing now allows observable names to be controlled more explicitly. - RooLagrangianMorphing now correctly handles normalization sets. - RooPolyFunc now provides a method to obtain the function as a string. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11759
https://github.com/root-project/root/pull/11759:426,deployability,updat,updated,426,[RF] RooLagrangianMorphing improvements; # This Pull request:. Adds small improvements to RooLagrangianMorphing and RooPolyFunc. ## Changes or fixes:. - RooLagrangianMorphing now allows observable names to be controlled more explicitly. - RooLagrangianMorphing now correctly handles normalization sets. - RooPolyFunc now provides a method to obtain the function as a string. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11759
https://github.com/root-project/root/pull/11759:396,safety,test,tested,396,[RF] RooLagrangianMorphing improvements; # This Pull request:. Adds small improvements to RooLagrangianMorphing and RooPolyFunc. ## Changes or fixes:. - RooLagrangianMorphing now allows observable names to be controlled more explicitly. - RooLagrangianMorphing now correctly handles normalization sets. - RooPolyFunc now provides a method to obtain the function as a string. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11759
https://github.com/root-project/root/pull/11759:426,safety,updat,updated,426,[RF] RooLagrangianMorphing improvements; # This Pull request:. Adds small improvements to RooLagrangianMorphing and RooPolyFunc. ## Changes or fixes:. - RooLagrangianMorphing now allows observable names to be controlled more explicitly. - RooLagrangianMorphing now correctly handles normalization sets. - RooPolyFunc now provides a method to obtain the function as a string. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11759
https://github.com/root-project/root/pull/11759:209,security,control,controlled,209,[RF] RooLagrangianMorphing improvements; # This Pull request:. Adds small improvements to RooLagrangianMorphing and RooPolyFunc. ## Changes or fixes:. - RooLagrangianMorphing now allows observable names to be controlled more explicitly. - RooLagrangianMorphing now correctly handles normalization sets. - RooPolyFunc now provides a method to obtain the function as a string. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11759
https://github.com/root-project/root/pull/11759:426,security,updat,updated,426,[RF] RooLagrangianMorphing improvements; # This Pull request:. Adds small improvements to RooLagrangianMorphing and RooPolyFunc. ## Changes or fixes:. - RooLagrangianMorphing now allows observable names to be controlled more explicitly. - RooLagrangianMorphing now correctly handles normalization sets. - RooPolyFunc now provides a method to obtain the function as a string. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11759
https://github.com/root-project/root/pull/11759:186,testability,observ,observable,186,[RF] RooLagrangianMorphing improvements; # This Pull request:. Adds small improvements to RooLagrangianMorphing and RooPolyFunc. ## Changes or fixes:. - RooLagrangianMorphing now allows observable names to be controlled more explicitly. - RooLagrangianMorphing now correctly handles normalization sets. - RooPolyFunc now provides a method to obtain the function as a string. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11759
https://github.com/root-project/root/pull/11759:209,testability,control,controlled,209,[RF] RooLagrangianMorphing improvements; # This Pull request:. Adds small improvements to RooLagrangianMorphing and RooPolyFunc. ## Changes or fixes:. - RooLagrangianMorphing now allows observable names to be controlled more explicitly. - RooLagrangianMorphing now correctly handles normalization sets. - RooPolyFunc now provides a method to obtain the function as a string. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11759
https://github.com/root-project/root/pull/11759:396,testability,test,tested,396,[RF] RooLagrangianMorphing improvements; # This Pull request:. Adds small improvements to RooLagrangianMorphing and RooPolyFunc. ## Changes or fixes:. - RooLagrangianMorphing now allows observable names to be controlled more explicitly. - RooLagrangianMorphing now correctly handles normalization sets. - RooPolyFunc now provides a method to obtain the function as a string. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11759
https://github.com/root-project/root/issues/11760:414,availability,error,errors,414,"[RF] RooFormulaVar not working in Root 6.26; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I tried to shift a RooHistPdf by using RooFormulaVar. This lead to the following problems:. RooFit cannot normalize the RooHistPdf correctly (always some random heights). RooFit cannot fit the RooHistPdf to a RooArgSet or RooDataHist and a lot of evaluation errors occur. As soon as I let my code run on root 6.24 there is no problem anymore and both things work. Therefor I suspect a problem with Root 6.26. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The combination of RooFormulaVar and RooHistPdf seems to bring up problems. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```C++. using namespace RooFit;. void test2(). {. RooRealVar x(""x"",""x"",800,1800);. RooPlot *frame = x.frame();. RooRealVar mean(""mean"",""mean"",1200,1000,1400);. RooRealVar sigma(""sigma"",""sigma"",80,50,90);. RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);. RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);. RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);. RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3186,availability,Operat,Operating,3186,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3261,availability,down,download,3261,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3334,availability,Operat,Operating,3334,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:1000,deployability,build,build,1000,"] RooFormulaVar not working in Root 6.26; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I tried to shift a RooHistPdf by using RooFormulaVar. This lead to the following problems:. RooFit cannot normalize the RooHistPdf correctly (always some random heights). RooFit cannot fit the RooHistPdf to a RooArgSet or RooDataHist and a lot of evaluation errors occur. As soon as I let my code run on root 6.24 there is no problem anymore and both things work. Therefor I suspect a problem with Root 6.26. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The combination of RooFormulaVar and RooHistPdf seems to bring up problems. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```C++. using namespace RooFit;. void test2(). {. RooRealVar x(""x"",""x"",800,1800);. RooPlot *frame = x.frame();. RooRealVar mean(""mean"",""mean"",1200,1000,1400);. RooRealVar sigma(""sigma"",""sigma"",80,50,90);. RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);. RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);. RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);. RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3174,deployability,version,version,3174,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3243,deployability,instal,install,3243,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3305,deployability,Version,Version,3305,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3553,deployability,instal,install,3553,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:2162,energy efficiency,Model,Model,2162,"n(""mean"",""mean"",1200,1000,1400);. RooRealVar sigma(""sigma"",""sigma"",80,50,90);. RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);. RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);. RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);. RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3069,energy efficiency,Draw,Draw,3069,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3174,integrability,version,version,3174,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3305,integrability,Version,Version,3305,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:579,interoperability,share,share,579,"[RF] RooFormulaVar not working in Root 6.26; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I tried to shift a RooHistPdf by using RooFormulaVar. This lead to the following problems:. RooFit cannot normalize the RooHistPdf correctly (always some random heights). RooFit cannot fit the RooHistPdf to a RooArgSet or RooDataHist and a lot of evaluation errors occur. As soon as I let my code run on root 6.24 there is no problem anymore and both things work. Therefor I suspect a problem with Root 6.26. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The combination of RooFormulaVar and RooHistPdf seems to bring up problems. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```C++. using namespace RooFit;. void test2(). {. RooRealVar x(""x"",""x"",800,1800);. RooPlot *frame = x.frame();. RooRealVar mean(""mean"",""mean"",1200,1000,1400);. RooRealVar sigma(""sigma"",""sigma"",80,50,90);. RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);. RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);. RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);. RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3174,modifiability,version,version,3174,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3305,modifiability,Version,Version,3305,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:414,performance,error,errors,414,"[RF] RooFormulaVar not working in Root 6.26; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I tried to shift a RooHistPdf by using RooFormulaVar. This lead to the following problems:. RooFit cannot normalize the RooHistPdf correctly (always some random heights). RooFit cannot fit the RooHistPdf to a RooArgSet or RooDataHist and a lot of evaluation errors occur. As soon as I let my code run on root 6.24 there is no problem anymore and both things work. Therefor I suspect a problem with Root 6.26. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The combination of RooFormulaVar and RooHistPdf seems to bring up problems. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```C++. using namespace RooFit;. void test2(). {. RooRealVar x(""x"",""x"",800,1800);. RooPlot *frame = x.frame();. RooRealVar mean(""mean"",""mean"",1200,1000,1400);. RooRealVar sigma(""sigma"",""sigma"",80,50,90);. RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);. RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);. RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);. RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3504,reliability,doe,does,3504,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:414,safety,error,errors,414,"[RF] RooFormulaVar not working in Root 6.26; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I tried to shift a RooHistPdf by using RooFormulaVar. This lead to the following problems:. RooFit cannot normalize the RooHistPdf correctly (always some random heights). RooFit cannot fit the RooHistPdf to a RooArgSet or RooDataHist and a lot of evaluation errors occur. As soon as I let my code run on root 6.24 there is no problem anymore and both things work. Therefor I suspect a problem with Root 6.26. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The combination of RooFormulaVar and RooHistPdf seems to bring up problems. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```C++. using namespace RooFit;. void test2(). {. RooRealVar x(""x"",""x"",800,1800);. RooPlot *frame = x.frame();. RooRealVar mean(""mean"",""mean"",1200,1000,1400);. RooRealVar sigma(""sigma"",""sigma"",80,50,90);. RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);. RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);. RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);. RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:962,safety,input,input,962,"[RF] RooFormulaVar not working in Root 6.26; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I tried to shift a RooHistPdf by using RooFormulaVar. This lead to the following problems:. RooFit cannot normalize the RooHistPdf correctly (always some random heights). RooFit cannot fit the RooHistPdf to a RooArgSet or RooDataHist and a lot of evaluation errors occur. As soon as I let my code run on root 6.24 there is no problem anymore and both things work. Therefor I suspect a problem with Root 6.26. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The combination of RooFormulaVar and RooHistPdf seems to bring up problems. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```C++. using namespace RooFit;. void test2(). {. RooRealVar x(""x"",""x"",800,1800);. RooPlot *frame = x.frame();. RooRealVar mean(""mean"",""mean"",1200,1000,1400);. RooRealVar sigma(""sigma"",""sigma"",80,50,90);. RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);. RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);. RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);. RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:2162,security,Model,Model,2162,"n(""mean"",""mean"",1200,1000,1400);. RooRealVar sigma(""sigma"",""sigma"",80,50,90);. RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);. RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);. RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);. RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3429,testability,context,context,3429,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:3458,testability,context,context,3458,"1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,90);. RooGaussian Gauss4(""Gauss4"",""Gauss4"",x,mean4,sigma4);. RooDataSet *Model1 = Gauss2.generate(x,1000000);. RooDataSet *Model2 = Gauss4.generate(x,1000000);. //Model->plotOn(frame, LineColor(kGreen), MarkerColor(kGreen));. RooRealVar Shift(""Shift"",""Shift"",0,-10,10);. RooFormulaVar xShifted(""xShifted"",""x + Shift"",RooArgSet(x,Shift));. RooRealVar Shift2(""Shift2"",""Shift2"",0,-10,10);. RooFormulaVar xShifted2(""xShifted2"",""x + Shift2"",RooArgSet(x,Shift2));. RooDataHist Sim(""Sim"",""Sim"",x,*Model1);. RooDataHist Sim2(""Sim2"",""Sim2"",x,*Model2);. RooHistPdf Func(""Func"",""func"",xShifted,x,Sim);. RooHistPdf Func2(""Func2"",""func2"",xShifted2,x,Sim2);. RooRealVar Amount(""A"",""A"",10000,0,2000000);. RooRealVar Amount2(""A2"",""A2"",10000,0,2000000);. RooAddPdf Func1(""f"",""f"",RooArgList(Func,Func2),RooArgList(Amount,Amount2));. Func1.plotOn(frame, LineColor(kRed));. std::cout<<Func.getNorm()<<std::endl;. Func1.fitTo(*Data, Range(1000,1600));. Func1.plotOn(frame);. std::cout<<Func.getNorm()<<std::endl;. //Normalization(2500000,RooAbsReal::NumEvent). Func1.paramOn(frame);. frame->Draw();. }. ```. Sorry, its ugly code, but I am not really good at programming. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Root Version 6.26/06 and 6.24/06. Operating System: MacOS Monterey and Linux respectively. Obtained via homebrew. ### Additional context. <!--. Add any other context about the problem here. -->. homebrew does not yet include root 6.28 and thus I cannot install it to check if the mistake appeared there to.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:414,usability,error,errors,414,"[RF] RooFormulaVar not working in Root 6.26; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I tried to shift a RooHistPdf by using RooFormulaVar. This lead to the following problems:. RooFit cannot normalize the RooHistPdf correctly (always some random heights). RooFit cannot fit the RooHistPdf to a RooArgSet or RooDataHist and a lot of evaluation errors occur. As soon as I let my code run on root 6.24 there is no problem anymore and both things work. Therefor I suspect a problem with Root 6.26. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The combination of RooFormulaVar and RooHistPdf seems to bring up problems. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```C++. using namespace RooFit;. void test2(). {. RooRealVar x(""x"",""x"",800,1800);. RooPlot *frame = x.frame();. RooRealVar mean(""mean"",""mean"",1200,1000,1400);. RooRealVar sigma(""sigma"",""sigma"",80,50,90);. RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);. RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);. RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);. RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:817,usability,behavi,behavior,817,"[RF] RooFormulaVar not working in Root 6.26; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I tried to shift a RooHistPdf by using RooFormulaVar. This lead to the following problems:. RooFit cannot normalize the RooHistPdf correctly (always some random heights). RooFit cannot fit the RooHistPdf to a RooArgSet or RooDataHist and a lot of evaluation errors occur. As soon as I let my code run on root 6.24 there is no problem anymore and both things work. Therefor I suspect a problem with Root 6.26. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The combination of RooFormulaVar and RooHistPdf seems to bring up problems. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```C++. using namespace RooFit;. void test2(). {. RooRealVar x(""x"",""x"",800,1800);. RooPlot *frame = x.frame();. RooRealVar mean(""mean"",""mean"",1200,1000,1400);. RooRealVar sigma(""sigma"",""sigma"",80,50,90);. RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);. RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);. RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);. RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/issues/11760:962,usability,input,input,962,"[RF] RooFormulaVar not working in Root 6.26; ### Explain what you would like to see improved. <!--. Explain what isn't as good as it could be and why. -->. I tried to shift a RooHistPdf by using RooFormulaVar. This lead to the following problems:. RooFit cannot normalize the RooHistPdf correctly (always some random heights). RooFit cannot fit the RooHistPdf to a RooArgSet or RooDataHist and a lot of evaluation errors occur. As soon as I let my code run on root 6.24 there is no problem anymore and both things work. Therefor I suspect a problem with Root 6.26. ### Optional: share how it could be improved. <!--. If you already have an idea what we could improve, then please tell us. -->. The combination of RooFormulaVar and RooHistPdf seems to bring up problems. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code: build it / `root myMacro.C` / ... -->. ```C++. using namespace RooFit;. void test2(). {. RooRealVar x(""x"",""x"",800,1800);. RooPlot *frame = x.frame();. RooRealVar mean(""mean"",""mean"",1200,1000,1400);. RooRealVar sigma(""sigma"",""sigma"",80,50,90);. RooGaussian Gauss(""Gauss"",""Gauss"",x,mean,sigma);. RooRealVar mean3(""mean3"",""mean3"",1400,1200,1600);. RooRealVar sigma3(""sigma3"",""sigma3"",80,50,90);. RooGaussian Gauss3(""Gauss3"",""Gauss3"",x,mean3,sigma3);. RooRealVar part1(""p1"",""p1"",1000.,0.,1000.);. RooRealVar part2(""p2"",""p2"",1000,0,1000);. RooAddPdf Data_Model(""DM"",""DM"",RooArgList(Gauss,Gauss3),RooArgList(part1,part2));. RooDataSet *Data = Data_Model.generate(x,10000);. Data_Model.plotOn(frame, LineColor(kBlack));. Data->plotOn(frame, MarkerColor(kRed));. RooRealVar mean2(""mean2"",""mean"",1210,1200,1220);. RooRealVar sigma2(""sigma2"",""sigma"",80,50,90);. RooGaussian Gauss2(""Gauss2"",""Gauss"",x,mean2,sigma2);. RooRealVar mean4(""mean4"",""mean4"",1410,1200,1600);. RooRealVar sigma4(""sigma4"",""sigma4"",80,50,9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11760
https://github.com/root-project/root/pull/11761:31,integrability,filter,filter,31,"There were several warnings in filter.cxx; several functions have a return value that was not used/checked. This generated waring with the recent compilers. Also, `sprintf` is deprecated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11761
https://github.com/root-project/root/pull/11762:118,energy efficiency,draw,draw,118,"[webcanvas] special handling of THStack, TMultiGraph, TGraph classes; All these classes using additional histogram to draw axes, therefore one need to create and access such . histogram before drawing object in web canvas. web canvas can address these histograms for context menu or when axis attributes are changed. Special handling of zoomed axis implemented. When necessary, `fMinimum`/`fMaximum` members are changed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11762
https://github.com/root-project/root/pull/11762:193,energy efficiency,draw,drawing,193,"[webcanvas] special handling of THStack, TMultiGraph, TGraph classes; All these classes using additional histogram to draw axes, therefore one need to create and access such . histogram before drawing object in web canvas. web canvas can address these histograms for context menu or when axis attributes are changed. Special handling of zoomed axis implemented. When necessary, `fMinimum`/`fMaximum` members are changed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11762
https://github.com/root-project/root/pull/11762:162,security,access,access,162,"[webcanvas] special handling of THStack, TMultiGraph, TGraph classes; All these classes using additional histogram to draw axes, therefore one need to create and access such . histogram before drawing object in web canvas. web canvas can address these histograms for context menu or when axis attributes are changed. Special handling of zoomed axis implemented. When necessary, `fMinimum`/`fMaximum` members are changed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11762
https://github.com/root-project/root/pull/11762:267,testability,context,context,267,"[webcanvas] special handling of THStack, TMultiGraph, TGraph classes; All these classes using additional histogram to draw axes, therefore one need to create and access such . histogram before drawing object in web canvas. web canvas can address these histograms for context menu or when axis attributes are changed. Special handling of zoomed axis implemented. When necessary, `fMinimum`/`fMaximum` members are changed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11762
https://github.com/root-project/root/pull/11762:275,usability,menu,menu,275,"[webcanvas] special handling of THStack, TMultiGraph, TGraph classes; All these classes using additional histogram to draw axes, therefore one need to create and access such . histogram before drawing object in web canvas. web canvas can address these histograms for context menu or when axis attributes are changed. Special handling of zoomed axis implemented. When necessary, `fMinimum`/`fMaximum` members are changed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11762
https://github.com/root-project/root/pull/11763:399,deployability,fail,failing,399,"Avoid TPad::fFrame double delete when read from file; This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:. ```. if (fPrimitives). fPrimitives->Clear();. if (fView) {. if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;. fView = nullptr;. }. if (fFrame) {. if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;. fFrame = nullptr;. }. ```. is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11763
https://github.com/root-project/root/pull/11763:399,reliability,fail,failing,399,"Avoid TPad::fFrame double delete when read from file; This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:. ```. if (fPrimitives). fPrimitives->Clear();. if (fView) {. if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;. fView = nullptr;. }. if (fFrame) {. if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;. fFrame = nullptr;. }. ```. is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11763
https://github.com/root-project/root/pull/11763:948,reliability,doe,does,948,"Avoid TPad::fFrame double delete when read from file; This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:. ```. if (fPrimitives). fPrimitives->Clear();. if (fView) {. if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;. fView = nullptr;. }. if (fFrame) {. if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;. fFrame = nullptr;. }. ```. is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11763
https://github.com/root-project/root/pull/11763:0,safety,Avoid,Avoid,0,"Avoid TPad::fFrame double delete when read from file; This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:. ```. if (fPrimitives). fPrimitives->Clear();. if (fView) {. if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;. fView = nullptr;. }. if (fFrame) {. if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;. fFrame = nullptr;. }. ```. is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11763
https://github.com/root-project/root/pull/11763:757,safety,avoid,avoiding,757,"Avoid TPad::fFrame double delete when read from file; This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:. ```. if (fPrimitives). fPrimitives->Clear();. if (fView) {. if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;. fView = nullptr;. }. if (fFrame) {. if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;. fFrame = nullptr;. }. ```. is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11763
https://github.com/root-project/root/pull/11763:148,usability,Close,Close,148,"Avoid TPad::fFrame double delete when read from file; This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:. ```. if (fPrimitives). fPrimitives->Clear();. if (fView) {. if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;. fView = nullptr;. }. if (fFrame) {. if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;. fFrame = nullptr;. }. ```. is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11763
https://github.com/root-project/root/pull/11763:193,usability,Clear,Clear,193,"Avoid TPad::fFrame double delete when read from file; This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:. ```. if (fPrimitives). fPrimitives->Clear();. if (fView) {. if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;. fView = nullptr;. }. if (fFrame) {. if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;. fFrame = nullptr;. }. ```. is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11763
https://github.com/root-project/root/pull/11763:831,usability,Clear,Clear,831,"Avoid TPad::fFrame double delete when read from file; This fixes #11747. As seen in https://github.com/cms-sw/cmssw/issues/40091 the code in `TPad::Close`:. ```. if (fPrimitives). fPrimitives->Clear();. if (fView) {. if (!ROOT::Detail::HasBeenDeleted(fView)) delete fView;. fView = nullptr;. }. if (fFrame) {. if (!ROOT::Detail::HasBeenDeleted(fFrame)) delete fFrame;. fFrame = nullptr;. }. ```. is failing in the case of reading a pad from a file in at least some circumstances. `TPad::Streamer` explicit set the bit `kCanDelete` on all objects in the list of primitives, thus including the view and the frame which have their `kCanDelete` bit explicitly reset elsewhere (in the code run during the initial creation of the frame and view). This means that avoiding the a double deletion (the first is now during the `fPrimitives->Clear()`) relies on the heuristic of `HasBeenDeleted` to work properly, at least in the case seen in cmssw above) it does not and lead to crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11763
https://github.com/root-project/root/pull/11764:39,deployability,contain,contains,39,TTask: don't assume that the list only contains TTask objects; This fixes #11663.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11764
https://github.com/root-project/root/issues/11765:140,availability,error,errors,140,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:168,availability,error,error,168,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4504,availability,Error,Error,4504,"8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCorePa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5712,availability,Servic,ServiceRegistry,5712,"ecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5738,availability,Servic,ServiceRegistry,5738,"FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7134,availability,error,error,7134,"<module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9159,availability,avail,available,9159,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:11,deployability,fail,fails,11,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:20,deployability,build,build,20,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:92,deployability,fail,fails,92,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:101,deployability,build,build,101,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:252,deployability,Build,Building,252,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:265,deployability,Modul,Module,265,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:433,deployability,build,build-any-ib,433,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:748,deployability,fail,failOnWarnings,748,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:823,deployability,modul,moduleMapFile,823,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:868,deployability,build,build-any-ib,868,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:887,deployability,BUILD,BUILDROOT,887,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1040,deployability,modul,module,1040,",. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1047,deployability,modul,modulemap,1047," moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1058,deployability,modul,moduleMapFile,1058," to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1103,deployability,build,build-any-ib,1103,"th `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1194,deployability,modul,module,1194,"encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1201,deployability,modul,modulemap,1201,"har<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1212,deployability,modul,moduleMapFile,1212,"ike the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1257,deployability,build,build-any-ib,1257,"X Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1352,deployability,modul,module,1352,"alibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1359,deployability,modul,modulemap,1359,"erRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1370,deployability,modul,moduleMapFile,1370,"alibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1415,deployability,build,build-any-ib,1415,"s/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1521,deployability,modul,modulemap,1521,"g -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1990,deployability,build,build-any-ib,1990,"-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b57",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:2009,deployability,BUILD,BUILDROOT,2009,"l8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf797",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:2164,deployability,build,build-any-ib,2164,"96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/je",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:2294,deployability,build,build-any-ib,2294,"/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:2421,deployability,build,build-any-ib,2421,"/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/wor",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:2548,deployability,build,build-any-ib,2548," -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:2681,deployability,build,build-any-ib,2681,"ONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:2809,deployability,build,build-any-ib,2809,"X -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTracke",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:2937,deployability,build,build-any-ib,2937,"2-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:3060,deployability,build,build-any-ib,3060,amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:3186,deployability,build,build-any-ib,3186,11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:3310,deployability,build,build-any-ib,3310,64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-23,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:3434,deployability,build,build-any-ib,3434,"amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/libuuid/2.34-0451b31e1b9a58c6aeefab41c18eea34/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:3886,deployability,build,build-any-ib,3886,"2d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:3905,deployability,BUILD,BUILDROOT,3905,"a/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module '",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4113,deployability,build,building,4113,"715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/Cali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4122,deployability,modul,module,4122,"466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4182,deployability,build,build-any-ib,4182,"ild-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4201,deployability,BUILD,BUILDROOT,4201,"md64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building mo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4421,deployability,build,build,4421,"workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4511,deployability,Build,Building,4511,"a85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4520,deployability,modul,module,4520,"nclude -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' impo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4617,deployability,build,build,4617,"/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4623,deployability,depend,dependency,4623,"ackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4734,deployability,depend,depends,4734," included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4847,deployability,build,building,4847,"1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4856,deployability,modul,module,4856,"a/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4893,deployability,build,building,4893,"b/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4902,deployability,modul,module,4902,"BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad23",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4972,deployability,build,build-any-ib,4972,"cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4991,deployability,BUILD,BUILDROOT,4991,"XXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5195,deployability,build,building,5195,"p/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenki",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5204,deployability,modul,module,5204,"OOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/works",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5280,deployability,build,build-any-ib,5280,"12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5299,deployability,BUILD,BUILDROOT,5299,"022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5482,deployability,build,building,5482,"ementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenk",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5491,deployability,modul,module,5491,"on.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5564,deployability,build,build-any-ib,5564,"mework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmss",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5583,deployability,BUILD,BUILDROOT,5583," . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5712,deployability,Servic,ServiceRegistry,5712,"ecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5738,deployability,Servic,ServiceRegistry,5738,"FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5767,deployability,build,building,5767,"se, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5776,deployability,modul,module,5776,ify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/exter,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5850,deployability,build,build-any-ib,5850,module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5869,deployability,BUILD,BUILDROOT,5869,erRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6138,deployability,modul,module-includes,6138,Pixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redef,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6212,deployability,build,build-any-ib,6212,ServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6231,deployability,BUILD,BUILDROOT,6231,mported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6500,deployability,build,build-any-ib,6500,arameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/e,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6519,deployability,BUILD,BUILDROOT,6519,ted from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/ext,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6743,deployability,build,build-any-ib,6743,"stry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePlug",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6951,deployability,build,build-any-ib,6951,"6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7273,deployability,build,build-any-ib,7273,"mssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7490,deployability,build,build-any-ib,7490,"ace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7731,deployability,modul,module,7731,"orkspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7836,deployability,build,build-any-ib,7836,"x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad23",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7855,deployability,BUILD,BUILDROOT,7855,"x-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8008,deployability,modul,module,8008,"86f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8015,deployability,modul,modulemap,8015,"f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8087,deployability,modul,module,8087,"../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8225,deployability,build,build-any-ib,8225," true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8442,deployability,build,build-any-ib,8442,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8683,deployability,modul,module,8683,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8787,deployability,build,build-any-ib,8787,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8806,deployability,BUILD,BUILDROOT,8806,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8959,deployability,modul,module,8959,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8966,deployability,modul,modulemap,8966,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9037,deployability,modul,module,9037,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9152,deployability,log,log,9152,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9211,deployability,build,buildlogs,9211,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4048,integrability,interfac,interface,4048,"kspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4456,integrability,interfac,interface,4456,"c11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4466,integrability,Event,EventSetupRecordImplementation,4466,"2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4623,integrability,depend,dependency,4623,"ackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4734,integrability,depend,depends,4734," included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5134,integrability,interfac,interface,5134,"mework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5438,integrability,interfac,interface,5438,"re/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5448,integrability,Event,EventSetupRecordImpl,5448,"terface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5712,integrability,Servic,ServiceRegistry,5712,"ecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5728,integrability,interfac,interface,5728," depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5738,integrability,Servic,ServiceRegistry,5738,"FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6055,integrability,interfac,interface,6055,cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-red,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6418,integrability,interfac,interface,6418,Core/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6662,integrability,interfac,interface,6662,_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8154,integrability,interfac,interface,8154,"_is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9103,integrability,interfac,interface,9103,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:3686,interoperability,xml,xml,3686,"ny-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/xz/5.2.5-83d0a00b575efd1701e07bedf7977343/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/Cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4048,interoperability,interfac,interface,4048,"kspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4456,interoperability,interfac,interface,4456,"c11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4609,interoperability,specif,specify,4609,"cords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd33",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4775,interoperability,specif,specify,4775,"CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5134,interoperability,interfac,interface,5134,"mework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5438,interoperability,interfac,interface,5438,"re/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5728,interoperability,interfac,interface,5728," depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6055,interoperability,interfac,interface,6055,cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-red,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6404,interoperability,Plug,PluginManager,6404,-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../..,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6418,interoperability,interfac,interface,6418,Core/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6648,interoperability,Plug,PluginManager,6648,/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6662,interoperability,interfac,interface,6662,_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6672,interoperability,Plug,PluginInfo,6672,ODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8140,interoperability,Plug,PluginManager,8140,"nition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8154,interoperability,interfac,interface,8154,"_is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8711,interoperability,Plug,PluginInfo,8711,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9010,interoperability,Plug,PluginInfo,9010,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9045,interoperability,Plug,PluginInfo,9045,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9089,interoperability,Plug,PluginManager,9089,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9103,interoperability,interfac,interface,9103,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9113,interoperability,Plug,PluginInfo,9113,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:265,modifiability,Modul,Module,265,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:823,modifiability,modul,moduleMapFile,823,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1040,modifiability,modul,module,1040,",. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1047,modifiability,modul,modulemap,1047," moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1058,modifiability,modul,moduleMapFile,1058," to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1194,modifiability,modul,module,1194,"encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1201,modifiability,modul,modulemap,1201,"har<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1212,modifiability,modul,moduleMapFile,1212,"ike the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1352,modifiability,modul,module,1352,"alibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1359,modifiability,modul,modulemap,1359,"erRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1370,modifiability,modul,moduleMapFile,1370,"alibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1521,modifiability,modul,modulemap,1521,"g -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4048,modifiability,interfac,interface,4048,"kspace/build-any-ib/w/el8_amd64_gcc11/external/zlib/1.2.11-3dfb2715f3608466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4122,modifiability,modul,module,4122,"466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4456,modifiability,interfac,interface,4456,"c11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4520,modifiability,modul,module,4520,"nclude -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' impo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4623,modifiability,depend,dependency,4623,"ackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4734,modifiability,depend,depends,4734," included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4856,modifiability,modul,module,4856,"a/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4902,modifiability,modul,module,4902,"BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad23",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5134,modifiability,interfac,interface,5134,"mework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5204,modifiability,modul,module,5204,"OOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/works",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5438,modifiability,interfac,interface,5438,"re/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5491,modifiability,modul,module,5491,"on.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5712,modifiability,Servic,ServiceRegistry,5712,"ecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5728,modifiability,interfac,interface,5728," depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5738,modifiability,Servic,ServiceRegistry,5738,"FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5776,modifiability,modul,module,5776,ify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/exter,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6042,modifiability,Paramet,ParameterSet,6042,amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6055,modifiability,interfac,interface,6055,cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-red,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6065,modifiability,Paramet,ParameterSetDescriptionFillerPluginFactory,6065,DULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../..,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6138,modifiability,modul,module-includes,6138,Pixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redef,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6418,modifiability,interfac,interface,6418,Core/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6662,modifiability,interfac,interface,6662,_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7731,modifiability,modul,module,7731,"orkspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8008,modifiability,modul,module,8008,"86f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8015,modifiability,modul,modulemap,8015,"f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8087,modifiability,modul,module,8087,"../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8154,modifiability,interfac,interface,8154,"_is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8683,modifiability,modul,module,8683,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8959,modifiability,modul,module,8959,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8966,modifiability,modul,modulemap,8966,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9037,modifiability,modul,module,9037,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9103,modifiability,interfac,interface,9103,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:140,performance,error,errors,140,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:168,performance,error,error,168,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4504,performance,Error,Error,4504,"8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCorePa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6428,performance,Cach,CacheParser,6428,ork/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7134,performance,error,error,7134,"<module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7685,performance,time,times,7685,". In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from modul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7759,performance,Cach,CacheParser,7759,"64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8059,performance,Cach,CacheParser,8059,"inux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { head",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8095,performance,Cach,CacheParser,8095,"c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManage",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8164,performance,Cach,CacheParser,8164,"_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8637,performance,time,times,8637,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:11,reliability,fail,fails,11,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:92,reliability,fail,fails,92,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:748,reliability,fail,failOnWarnings,748,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4829,reliability,diagno,diagnostic,4829,"ckerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/je",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9159,reliability,availab,available,9159,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:140,safety,error,errors,140,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:168,safety,error,error,168,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:265,safety,Modul,Module,265,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:823,safety,modul,moduleMapFile,823,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1040,safety,modul,module,1040,",. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1047,safety,modul,modulemap,1047," moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1058,safety,modul,moduleMapFile,1058," to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1194,safety,modul,module,1194,"encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1201,safety,modul,modulemap,1201,"har<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1212,safety,modul,moduleMapFile,1212,"ike the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1352,safety,modul,module,1352,"alibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1359,safety,modul,modulemap,1359,"erRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1370,safety,modul,moduleMapFile,1370,"alibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:1521,safety,modul,modulemap,1521,"g -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/pcre/8.43-5dcc901acc02f624b22dd9840b2357e8/include -isystem/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/bz2lib/1.0.6-2c1f18484cb66c30aba7929f2be5e7d4/include -I/data/cms",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4122,safety,modul,module,4122,"466b74431b80eb9d788/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/md5/1.0.0-e68283f2de2e2e709a0db99db3b53205/include -I/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tinyxml2/6.2.0-20b4f0dfd078828bfb8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4504,safety,Error,Error,4504,"8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCorePa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4520,safety,modul,module,4520,"nclude -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' impo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4623,safety,depend,dependency,4623,"ackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4734,safety,depend,depends,4734," included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4856,safety,modul,module,4856,"a/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4902,safety,modul,module,4902,"BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad23",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5204,safety,modul,module,5204,"OOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/works",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5491,safety,modul,module,5491,"on.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/work",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:5776,safety,modul,module,5776,ify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/exter,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:6138,safety,modul,module-includes,6138,Pixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:. In file included from <module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redef,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7134,safety,error,error,7134,"<module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7731,safety,modul,module,7731,"orkspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8008,safety,modul,module,8008,"86f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8015,safety,modul,modulemap,8015,"f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8087,safety,modul,module,8087,"../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8683,safety,modul,module,8683,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8959,safety,modul,module,8959,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:8966,safety,modul,modulemap,8966,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9037,safety,modul,module,9037,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9152,safety,log,log,9152,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9159,safety,avail,available,9159,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9152,security,log,log,9152,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9159,security,availab,available,9159,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4623,testability,depend,dependency,4623,"ackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4734,testability,depend,depends,4734," included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4829,testability,diagno,diagnostic,4829,"ckerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:. While building module 'FWCorePluginManager' imported from /data/cmsbld/je",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:9152,testability,log,log,9152,"e/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here. module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }. ^. ```. Full log is available [here](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/el8_amd64_gcc11/CMSSW_12_6_CXXMODULE_X_2022-11-23-2300/Alignment/LaserAlignment), see also https://github.com/cms-sw/cmsdist/issues/8197. Are you already aware of any fix for that? Thank you,. Andrea.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:140,usability,error,errors,140,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:168,usability,error,error,168,"CXXMODULES fails to build with gcc11; Hello,. We are moving CMSSW to `gcc11` and CXXMODULES fails to build with `gcc11.2.1`. We are getting errors on `fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'` like the following ones:. ```. >> Building CXX Module LCG reflex dict from header file tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/lcg/root/6.27.01-92501d6ea38c9cca3d7954777cf00351/bin/rootcling -reflex -f tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc -s tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/libCalibTrackerRecords.so -cxxmodule -failOnWarnings -DCMS_DICT_IMPL -D_REENTRANT -DGNUSOURCE -D__STRICT_ANSI__ -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/fmt/8.0.1-3695ff4b45a66beec96d63df64fca310/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/tbb/v2021.5.0-56ca77c0e7d8373c4018b0fe3ab362d8/include/module.modulemap -moduleMapFile=/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/boost/1.78.0-8027c8ea2a8749cea303819a121c4b94/include/boost/boost.modulemap -DGNU_GCC -D_GNU_SOURCE -DTBB_USE_GLIBCXX_VERSION=110201 -DTBB_SUPPRESS_DEPRECATED_MESSAGES -DTBB_PREVIEW_RESUMABLE_TASKS=1 -DTBB_PREVIEW_TASK_GROUP_EXTENSIONS=1 -DBOOST_SPIRIT_THREADSAFE -DPHOENIX_THREADSAFE -DBOOST_MATH_DISABLE_STD_FPCLASSIFY -DBOOST_UUID_RANDOM_PROVIDER_FORCE_POSIX -DCMSSW_GIT_HASH=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -DPROJECT_NAME=""CMSSW"" -DPROJECT_VERSION=""CMSSW_12_6_CXXMODULE_X_2022-11-22-2300"" -I/data/cmsbld/jenkins/workspace/build-any-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:4504,usability,Error,Error,4504,"8e7fdd5ba85221/include -DCMSSW_REFLEX_DICT tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h tmp/el8_amd64_gcc11/classes/classes_def.xml. In file included from input_line_8:57:. In file included from ./tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.h:1:. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:10: remark: building module 'FWCoreFramework' as '/data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/FWCoreFramework.pcm' [-Rmodule-build]. #include ""FWCore/Framework/interface/EventSetupRecordImplementation.h"". ^. Error: Building module 'FWCoreFramework' implicitly. If 'FWCoreFramework' requires a . dictionary please specify build dependency: 'tmp/el8_amd64_gcc11/src/CalibTracker/Records/src/CalibTrackerRecords/a/CalibTrackerRecords_xr.cc' depends on 'FWCoreFramework'. Otherwise, specify '-mByproduct FWCoreFramework' to disable this diagnostic. While building module 'CalibTrackerRecords':. While building module 'FWCoreFramework' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/CalibTracker/Records/interface/SiPixel2DTemplateDBObjectESProducerRcd.h:4:. While building module 'FWCoreServiceRegistry' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:. While building module 'FWCorePa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/issues/11765:7134,usability,error,error,7134,"<module-includes>:1:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:. In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'. inline constexpr bool __is_encoded_char<char> = true;. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'. #include <bits/fs_path.h>. ^. /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here. module ""CacheParser.h"" { header ""../../../src/FWCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11765
https://github.com/root-project/root/pull/11766:94,deployability,fail,fails,94,"Provide json_fwd.hpp for nlohmann 3.9.1 [6.26]; For systems with old `nlohmann/json.hpp` ROOT fails to build while it can find not matching `json_fwd.hpp`. Master branch uses newer nlohmann/hson.hpp, therefore one cannot backport changes directly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11766
https://github.com/root-project/root/pull/11766:103,deployability,build,build,103,"Provide json_fwd.hpp for nlohmann 3.9.1 [6.26]; For systems with old `nlohmann/json.hpp` ROOT fails to build while it can find not matching `json_fwd.hpp`. Master branch uses newer nlohmann/hson.hpp, therefore one cannot backport changes directly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11766
https://github.com/root-project/root/pull/11766:94,reliability,fail,fails,94,"Provide json_fwd.hpp for nlohmann 3.9.1 [6.26]; For systems with old `nlohmann/json.hpp` ROOT fails to build while it can find not matching `json_fwd.hpp`. Master branch uses newer nlohmann/hson.hpp, therefore one cannot backport changes directly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11766
https://github.com/root-project/root/pull/11767:348,availability,avail,available,348,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:61,deployability,modul,modules,61,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:92,deployability,build,build,92,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:298,deployability,version,version,298,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:333,deployability,version,version,333,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:129,energy efficiency,load,loaded,129,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:298,integrability,version,version,298,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:333,integrability,version,version,333,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:61,modifiability,modul,modules,61,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:298,modifiability,version,version,298,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:333,modifiability,version,version,333,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:129,performance,load,loaded,129,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:348,reliability,availab,available,348,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:61,safety,modul,modules,61,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:278,safety,avoid,avoided,278,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:348,safety,avail,available,348,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/pull/11767:348,security,availab,available,348,use latest JSROOT in jupyter; Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`. This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11767
https://github.com/root-project/root/issues/11768:5,availability,Error,Error,5,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:89,availability,Error,Error,89,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:39,modifiability,variab,variable,39,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:123,modifiability,variab,variable,123,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:181,modifiability,variab,variable,181,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:5,performance,Error,Error,5,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:89,performance,Error,Error,89,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:336,reliability,doe,doesnt-match-the-fit-result,336,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:5,safety,Error,Error,5,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:89,safety,Error,Error,89,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:5,usability,Error,Error,5,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:89,usability,Error,Error,89,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:276,usability,user,users,276,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11768:488,usability,document,documentation,488,"[RF] Error out in `RooStats::sPlot` if variable for sWeights is already used in the fit; Error out in `RooStats::sPlot` if variable for sWeights is already used as a discriminating variable in the fit. In this case, the `sWeights` are invalid and it has recently confused two users already:. * https://root-forum.cern.ch/t/splot-result-doesnt-match-the-fit-result. * https://root-forum.cern.ch/t/strange-results-in-rs301-splot-c. When implementing this, consider also changing the sPlots documentation to have a clickable link to the arXiv paper instead of just the tag like it is there right now:. https://root.cern/doc/master/classRooStats_1_1SPlot.html#:~:text=Using%20ratios%20as%20yield%20parameters",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11768
https://github.com/root-project/root/issues/11769:466,integrability,pub,public,466,"[TTreeReader] Wrong (empty) arrays silently read for complex data members of TClonesArray elements; First reported at https://root-forum.cern.ch/t/trouble-reading-rvec-of-vector-from-branch-with-tclonesarray-of-objects-with-std-vector-member/52482 . A reproducer:. ```cpp. // repro.C. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TClonesArray.h>. #include <TObject.h>. #include <TTree.h>. #include <iostream>. #include <vector>. class Track : public TObject {. public:. std::vector<double> hitEnergies;. int id = 42;. Track(const std::vector<double> &v = {}) : hitEnergies{v} {};. ClassDef(Track, 1);. };. ClassImp(Track);. void repro() {. // write file. {. TFile f(""f.root"", ""recreate"");. TTree tree(""Events"", ""events"");. TClonesArray arr(""Track"", 1);. tree.Branch(""Tracks"", &arr);. arr.ConstructedAt(0);. ((Track *)arr.At(0))->hitEnergies.assign({1.0, 2.0, 3.0});. arr.ConstructedAt(1);. ((Track *)arr.At(1))->hitEnergies.assign({4.0, 5.0});. tree.Fill();. tree.Write();. }. TFile f(""f.root"");. {. // reading back the `id` data member works. TTreeReader r(""Events"", &f);. TTreeReaderArray<int> ids(r, ""Tracks.id"");. r.Next();. std::cout << ids.GetSize() << '\n'; // prints 2. std::cout << ids[0] << ' ' << ids[1] << '\n'; // prints '42 42'. }. {. // reading back hitEnergies data member does not work. TTreeReader r(""Events"", &f);. TTreeReaderArray<std::vector<double>> tracks(r, ""Tracks.hitEnergies"");. r.Next();. std::cout << tracks.GetSize() << '\n'; // prints 0! }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11769
https://github.com/root-project/root/issues/11769:484,integrability,pub,public,484,"[TTreeReader] Wrong (empty) arrays silently read for complex data members of TClonesArray elements; First reported at https://root-forum.cern.ch/t/trouble-reading-rvec-of-vector-from-branch-with-tclonesarray-of-objects-with-std-vector-member/52482 . A reproducer:. ```cpp. // repro.C. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TClonesArray.h>. #include <TObject.h>. #include <TTree.h>. #include <iostream>. #include <vector>. class Track : public TObject {. public:. std::vector<double> hitEnergies;. int id = 42;. Track(const std::vector<double> &v = {}) : hitEnergies{v} {};. ClassDef(Track, 1);. };. ClassImp(Track);. void repro() {. // write file. {. TFile f(""f.root"", ""recreate"");. TTree tree(""Events"", ""events"");. TClonesArray arr(""Track"", 1);. tree.Branch(""Tracks"", &arr);. arr.ConstructedAt(0);. ((Track *)arr.At(0))->hitEnergies.assign({1.0, 2.0, 3.0});. arr.ConstructedAt(1);. ((Track *)arr.At(1))->hitEnergies.assign({4.0, 5.0});. tree.Fill();. tree.Write();. }. TFile f(""f.root"");. {. // reading back the `id` data member works. TTreeReader r(""Events"", &f);. TTreeReaderArray<int> ids(r, ""Tracks.id"");. r.Next();. std::cout << ids.GetSize() << '\n'; // prints 2. std::cout << ids[0] << ' ' << ids[1] << '\n'; // prints '42 42'. }. {. // reading back hitEnergies data member does not work. TTreeReader r(""Events"", &f);. TTreeReaderArray<std::vector<double>> tracks(r, ""Tracks.hitEnergies"");. r.Next();. std::cout << tracks.GetSize() << '\n'; // prints 0! }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11769
https://github.com/root-project/root/issues/11769:725,integrability,Event,Events,725,"[TTreeReader] Wrong (empty) arrays silently read for complex data members of TClonesArray elements; First reported at https://root-forum.cern.ch/t/trouble-reading-rvec-of-vector-from-branch-with-tclonesarray-of-objects-with-std-vector-member/52482 . A reproducer:. ```cpp. // repro.C. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TClonesArray.h>. #include <TObject.h>. #include <TTree.h>. #include <iostream>. #include <vector>. class Track : public TObject {. public:. std::vector<double> hitEnergies;. int id = 42;. Track(const std::vector<double> &v = {}) : hitEnergies{v} {};. ClassDef(Track, 1);. };. ClassImp(Track);. void repro() {. // write file. {. TFile f(""f.root"", ""recreate"");. TTree tree(""Events"", ""events"");. TClonesArray arr(""Track"", 1);. tree.Branch(""Tracks"", &arr);. arr.ConstructedAt(0);. ((Track *)arr.At(0))->hitEnergies.assign({1.0, 2.0, 3.0});. arr.ConstructedAt(1);. ((Track *)arr.At(1))->hitEnergies.assign({4.0, 5.0});. tree.Fill();. tree.Write();. }. TFile f(""f.root"");. {. // reading back the `id` data member works. TTreeReader r(""Events"", &f);. TTreeReaderArray<int> ids(r, ""Tracks.id"");. r.Next();. std::cout << ids.GetSize() << '\n'; // prints 2. std::cout << ids[0] << ' ' << ids[1] << '\n'; // prints '42 42'. }. {. // reading back hitEnergies data member does not work. TTreeReader r(""Events"", &f);. TTreeReaderArray<std::vector<double>> tracks(r, ""Tracks.hitEnergies"");. r.Next();. std::cout << tracks.GetSize() << '\n'; // prints 0! }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11769
https://github.com/root-project/root/issues/11769:735,integrability,event,events,735,"[TTreeReader] Wrong (empty) arrays silently read for complex data members of TClonesArray elements; First reported at https://root-forum.cern.ch/t/trouble-reading-rvec-of-vector-from-branch-with-tclonesarray-of-objects-with-std-vector-member/52482 . A reproducer:. ```cpp. // repro.C. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TClonesArray.h>. #include <TObject.h>. #include <TTree.h>. #include <iostream>. #include <vector>. class Track : public TObject {. public:. std::vector<double> hitEnergies;. int id = 42;. Track(const std::vector<double> &v = {}) : hitEnergies{v} {};. ClassDef(Track, 1);. };. ClassImp(Track);. void repro() {. // write file. {. TFile f(""f.root"", ""recreate"");. TTree tree(""Events"", ""events"");. TClonesArray arr(""Track"", 1);. tree.Branch(""Tracks"", &arr);. arr.ConstructedAt(0);. ((Track *)arr.At(0))->hitEnergies.assign({1.0, 2.0, 3.0});. arr.ConstructedAt(1);. ((Track *)arr.At(1))->hitEnergies.assign({4.0, 5.0});. tree.Fill();. tree.Write();. }. TFile f(""f.root"");. {. // reading back the `id` data member works. TTreeReader r(""Events"", &f);. TTreeReaderArray<int> ids(r, ""Tracks.id"");. r.Next();. std::cout << ids.GetSize() << '\n'; // prints 2. std::cout << ids[0] << ' ' << ids[1] << '\n'; // prints '42 42'. }. {. // reading back hitEnergies data member does not work. TTreeReader r(""Events"", &f);. TTreeReaderArray<std::vector<double>> tracks(r, ""Tracks.hitEnergies"");. r.Next();. std::cout << tracks.GetSize() << '\n'; // prints 0! }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11769
https://github.com/root-project/root/issues/11769:1082,integrability,Event,Events,1082,"[TTreeReader] Wrong (empty) arrays silently read for complex data members of TClonesArray elements; First reported at https://root-forum.cern.ch/t/trouble-reading-rvec-of-vector-from-branch-with-tclonesarray-of-objects-with-std-vector-member/52482 . A reproducer:. ```cpp. // repro.C. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TClonesArray.h>. #include <TObject.h>. #include <TTree.h>. #include <iostream>. #include <vector>. class Track : public TObject {. public:. std::vector<double> hitEnergies;. int id = 42;. Track(const std::vector<double> &v = {}) : hitEnergies{v} {};. ClassDef(Track, 1);. };. ClassImp(Track);. void repro() {. // write file. {. TFile f(""f.root"", ""recreate"");. TTree tree(""Events"", ""events"");. TClonesArray arr(""Track"", 1);. tree.Branch(""Tracks"", &arr);. arr.ConstructedAt(0);. ((Track *)arr.At(0))->hitEnergies.assign({1.0, 2.0, 3.0});. arr.ConstructedAt(1);. ((Track *)arr.At(1))->hitEnergies.assign({4.0, 5.0});. tree.Fill();. tree.Write();. }. TFile f(""f.root"");. {. // reading back the `id` data member works. TTreeReader r(""Events"", &f);. TTreeReaderArray<int> ids(r, ""Tracks.id"");. r.Next();. std::cout << ids.GetSize() << '\n'; // prints 2. std::cout << ids[0] << ' ' << ids[1] << '\n'; // prints '42 42'. }. {. // reading back hitEnergies data member does not work. TTreeReader r(""Events"", &f);. TTreeReaderArray<std::vector<double>> tracks(r, ""Tracks.hitEnergies"");. r.Next();. std::cout << tracks.GetSize() << '\n'; // prints 0! }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11769
https://github.com/root-project/root/issues/11769:1342,integrability,Event,Events,1342,"[TTreeReader] Wrong (empty) arrays silently read for complex data members of TClonesArray elements; First reported at https://root-forum.cern.ch/t/trouble-reading-rvec-of-vector-from-branch-with-tclonesarray-of-objects-with-std-vector-member/52482 . A reproducer:. ```cpp. // repro.C. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TClonesArray.h>. #include <TObject.h>. #include <TTree.h>. #include <iostream>. #include <vector>. class Track : public TObject {. public:. std::vector<double> hitEnergies;. int id = 42;. Track(const std::vector<double> &v = {}) : hitEnergies{v} {};. ClassDef(Track, 1);. };. ClassImp(Track);. void repro() {. // write file. {. TFile f(""f.root"", ""recreate"");. TTree tree(""Events"", ""events"");. TClonesArray arr(""Track"", 1);. tree.Branch(""Tracks"", &arr);. arr.ConstructedAt(0);. ((Track *)arr.At(0))->hitEnergies.assign({1.0, 2.0, 3.0});. arr.ConstructedAt(1);. ((Track *)arr.At(1))->hitEnergies.assign({4.0, 5.0});. tree.Fill();. tree.Write();. }. TFile f(""f.root"");. {. // reading back the `id` data member works. TTreeReader r(""Events"", &f);. TTreeReaderArray<int> ids(r, ""Tracks.id"");. r.Next();. std::cout << ids.GetSize() << '\n'; // prints 2. std::cout << ids[0] << ' ' << ids[1] << '\n'; // prints '42 42'. }. {. // reading back hitEnergies data member does not work. TTreeReader r(""Events"", &f);. TTreeReaderArray<std::vector<double>> tracks(r, ""Tracks.hitEnergies"");. r.Next();. std::cout << tracks.GetSize() << '\n'; // prints 0! }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11769
https://github.com/root-project/root/issues/11769:1312,reliability,doe,does,1312,"[TTreeReader] Wrong (empty) arrays silently read for complex data members of TClonesArray elements; First reported at https://root-forum.cern.ch/t/trouble-reading-rvec-of-vector-from-branch-with-tclonesarray-of-objects-with-std-vector-member/52482 . A reproducer:. ```cpp. // repro.C. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TClonesArray.h>. #include <TObject.h>. #include <TTree.h>. #include <iostream>. #include <vector>. class Track : public TObject {. public:. std::vector<double> hitEnergies;. int id = 42;. Track(const std::vector<double> &v = {}) : hitEnergies{v} {};. ClassDef(Track, 1);. };. ClassImp(Track);. void repro() {. // write file. {. TFile f(""f.root"", ""recreate"");. TTree tree(""Events"", ""events"");. TClonesArray arr(""Track"", 1);. tree.Branch(""Tracks"", &arr);. arr.ConstructedAt(0);. ((Track *)arr.At(0))->hitEnergies.assign({1.0, 2.0, 3.0});. arr.ConstructedAt(1);. ((Track *)arr.At(1))->hitEnergies.assign({4.0, 5.0});. tree.Fill();. tree.Write();. }. TFile f(""f.root"");. {. // reading back the `id` data member works. TTreeReader r(""Events"", &f);. TTreeReaderArray<int> ids(r, ""Tracks.id"");. r.Next();. std::cout << ids.GetSize() << '\n'; // prints 2. std::cout << ids[0] << ' ' << ids[1] << '\n'; // prints '42 42'. }. {. // reading back hitEnergies data member does not work. TTreeReader r(""Events"", &f);. TTreeReaderArray<std::vector<double>> tracks(r, ""Tracks.hitEnergies"");. r.Next();. std::cout << tracks.GetSize() << '\n'; // prints 0! }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11769
https://github.com/root-project/root/issues/11769:53,safety,compl,complex,53,"[TTreeReader] Wrong (empty) arrays silently read for complex data members of TClonesArray elements; First reported at https://root-forum.cern.ch/t/trouble-reading-rvec-of-vector-from-branch-with-tclonesarray-of-objects-with-std-vector-member/52482 . A reproducer:. ```cpp. // repro.C. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TClonesArray.h>. #include <TObject.h>. #include <TTree.h>. #include <iostream>. #include <vector>. class Track : public TObject {. public:. std::vector<double> hitEnergies;. int id = 42;. Track(const std::vector<double> &v = {}) : hitEnergies{v} {};. ClassDef(Track, 1);. };. ClassImp(Track);. void repro() {. // write file. {. TFile f(""f.root"", ""recreate"");. TTree tree(""Events"", ""events"");. TClonesArray arr(""Track"", 1);. tree.Branch(""Tracks"", &arr);. arr.ConstructedAt(0);. ((Track *)arr.At(0))->hitEnergies.assign({1.0, 2.0, 3.0});. arr.ConstructedAt(1);. ((Track *)arr.At(1))->hitEnergies.assign({4.0, 5.0});. tree.Fill();. tree.Write();. }. TFile f(""f.root"");. {. // reading back the `id` data member works. TTreeReader r(""Events"", &f);. TTreeReaderArray<int> ids(r, ""Tracks.id"");. r.Next();. std::cout << ids.GetSize() << '\n'; // prints 2. std::cout << ids[0] << ' ' << ids[1] << '\n'; // prints '42 42'. }. {. // reading back hitEnergies data member does not work. TTreeReader r(""Events"", &f);. TTreeReaderArray<std::vector<double>> tracks(r, ""Tracks.hitEnergies"");. r.Next();. std::cout << tracks.GetSize() << '\n'; // prints 0! }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11769
https://github.com/root-project/root/issues/11769:53,security,compl,complex,53,"[TTreeReader] Wrong (empty) arrays silently read for complex data members of TClonesArray elements; First reported at https://root-forum.cern.ch/t/trouble-reading-rvec-of-vector-from-branch-with-tclonesarray-of-objects-with-std-vector-member/52482 . A reproducer:. ```cpp. // repro.C. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TClonesArray.h>. #include <TObject.h>. #include <TTree.h>. #include <iostream>. #include <vector>. class Track : public TObject {. public:. std::vector<double> hitEnergies;. int id = 42;. Track(const std::vector<double> &v = {}) : hitEnergies{v} {};. ClassDef(Track, 1);. };. ClassImp(Track);. void repro() {. // write file. {. TFile f(""f.root"", ""recreate"");. TTree tree(""Events"", ""events"");. TClonesArray arr(""Track"", 1);. tree.Branch(""Tracks"", &arr);. arr.ConstructedAt(0);. ((Track *)arr.At(0))->hitEnergies.assign({1.0, 2.0, 3.0});. arr.ConstructedAt(1);. ((Track *)arr.At(1))->hitEnergies.assign({4.0, 5.0});. tree.Fill();. tree.Write();. }. TFile f(""f.root"");. {. // reading back the `id` data member works. TTreeReader r(""Events"", &f);. TTreeReaderArray<int> ids(r, ""Tracks.id"");. r.Next();. std::cout << ids.GetSize() << '\n'; // prints 2. std::cout << ids[0] << ' ' << ids[1] << '\n'; // prints '42 42'. }. {. // reading back hitEnergies data member does not work. TTreeReader r(""Events"", &f);. TTreeReaderArray<std::vector<double>> tracks(r, ""Tracks.hitEnergies"");. r.Next();. std::cout << tracks.GetSize() << '\n'; // prints 0! }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11769
https://github.com/root-project/root/issues/11770:16,deployability,automat,automatically,16,Set CLING_DEBUG automatically when a debugger is attached; So that users don't have to know/find out that they need to set the `CLING_DEBUG` env variable in order to have proper stacktraces when debugging programs that include jitted code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11770
https://github.com/root-project/root/issues/11770:178,deployability,stack,stacktraces,178,Set CLING_DEBUG automatically when a debugger is attached; So that users don't have to know/find out that they need to set the `CLING_DEBUG` env variable in order to have proper stacktraces when debugging programs that include jitted code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11770
https://github.com/root-project/root/issues/11770:145,modifiability,variab,variable,145,Set CLING_DEBUG automatically when a debugger is attached; So that users don't have to know/find out that they need to set the `CLING_DEBUG` env variable in order to have proper stacktraces when debugging programs that include jitted code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11770
https://github.com/root-project/root/issues/11770:16,testability,automat,automatically,16,Set CLING_DEBUG automatically when a debugger is attached; So that users don't have to know/find out that they need to set the `CLING_DEBUG` env variable in order to have proper stacktraces when debugging programs that include jitted code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11770
https://github.com/root-project/root/issues/11770:67,usability,user,users,67,Set CLING_DEBUG automatically when a debugger is attached; So that users don't have to know/find out that they need to set the `CLING_DEBUG` env variable in order to have proper stacktraces when debugging programs that include jitted code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11770
https://github.com/root-project/root/pull/11772:43,availability,error,error,43,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:121,availability,incid,incidentally,121,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:181,availability,error,error,181,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:49,integrability,messag,message,49,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:187,integrability,messag,messages,187,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:49,interoperability,messag,message,49,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:187,interoperability,messag,messages,187,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:43,performance,error,error,43,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:181,performance,error,error,181,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:121,reliability,incid,incidentally,121,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:43,safety,error,error,43,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:181,safety,error,error,181,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:43,usability,error,error,43,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11772:181,usability,error,error,181,"[DF] Add """" around unknown column names in error message; Removes ambiguity in case a column name ends with a dot, which incidentally is something that causes ""unknown column name"" error messages commonly enough. Sibling PR in roottest: https://github.com/root-project/roottest/pull/917",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11772
https://github.com/root-project/root/pull/11773:21,deployability,integr,integration,21,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:67,deployability,integr,integration,67,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:95,deployability,Automat,Automatic,95,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:508,deployability,build,build,508,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:156,energy efficiency,Current,Currently,156,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:203,energy efficiency,model,models,203,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:265,energy efficiency,model,models,265,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:21,integrability,integr,integration,21,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:67,integrability,integr,integration,67,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:428,integrability,interfac,interfaces,428,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:545,integrability,wrap,wrapper,545,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:564,integrability,wrap,wraps,564,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:617,integrability,Batch,BatchModeHelpers,617,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:21,interoperability,integr,integration,21,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:67,interoperability,integr,integration,67,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:428,interoperability,interfac,interfaces,428,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:545,interoperability,wrapper,wrapper,545,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:21,modifiability,integr,integration,21,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:67,modifiability,integr,integration,67,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:428,modifiability,interfac,interfaces,428,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:617,performance,Batch,BatchModeHelpers,617,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:21,reliability,integr,integration,21,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:67,reliability,integr,integration,67,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:334,reliability,doe,does,334,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:83,safety,test,test,83,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:21,security,integr,integration,21,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:67,security,integr,integration,67,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:203,security,model,models,203,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:265,security,model,models,265,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:21,testability,integr,integration,21,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:67,testability,integr,integration,67,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:83,testability,test,test,83,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:95,testability,Automat,Automatic,95,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:193,testability,simpl,simple,193,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:258,testability,simpl,simple,258,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:193,usability,simpl,simple,193,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:233,usability,support,supported,233,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:258,usability,simpl,simple,258,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11773:442,usability,support,support,442,"[RF] Add the initial integration of AD to RooFit; Added an initial integration and test on how Automatic Differentiation (AD) can be implemented in RooFit. Currently, one can print the code of simple RF models they make with already supported classes. These simple models can also be evaluated through the generated code. This commit does not implement gradient calculation through clad. This pull request defines the necessary interfaces to support AD for RooFit classes; it also defines the functions that build the code required for AD and a wrapper class that wraps the JIT-ed function. . Also moved some of the `BatchModeHelpers` functions and classes to the header so that the `ADModeHelpers` can use them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11773
https://github.com/root-project/root/pull/11774:523,availability,state,stated,523,"[RF] Improve RooVoigtian documentation; The RooVoigtian uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is the usual definition from HEP text books because it corresponds to the decay width. However, other sources define the Breit-Wigner profile with the HWHM (half width half maximum), for example the Wikipedia article: https://en.wikipedia.org/wiki/Cauchy_distribution. This can easily lead to mistakes if people use the RooVoigtian with the HWHM. With this commit, it is explicitly stated in the docs that the RooVoigtian takes the FWHM, both in the constructor and the overall class documentation. Furthermore, some other small improvements are made to the docs of the RooVoigtian, like converting some of the function documentations to doxygen. Closes #11757.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11774
https://github.com/root-project/root/pull/11774:275,energy efficiency,profil,profile,275,"[RF] Improve RooVoigtian documentation; The RooVoigtian uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is the usual definition from HEP text books because it corresponds to the decay width. However, other sources define the Breit-Wigner profile with the HWHM (half width half maximum), for example the Wikipedia article: https://en.wikipedia.org/wiki/Cauchy_distribution. This can easily lead to mistakes if people use the RooVoigtian with the HWHM. With this commit, it is explicitly stated in the docs that the RooVoigtian takes the FWHM, both in the constructor and the overall class documentation. Furthermore, some other small improvements are made to the docs of the RooVoigtian, like converting some of the function documentations to doxygen. Closes #11757.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11774
https://github.com/root-project/root/pull/11774:523,integrability,state,stated,523,"[RF] Improve RooVoigtian documentation; The RooVoigtian uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is the usual definition from HEP text books because it corresponds to the decay width. However, other sources define the Breit-Wigner profile with the HWHM (half width half maximum), for example the Wikipedia article: https://en.wikipedia.org/wiki/Cauchy_distribution. This can easily lead to mistakes if people use the RooVoigtian with the HWHM. With this commit, it is explicitly stated in the docs that the RooVoigtian takes the FWHM, both in the constructor and the overall class documentation. Furthermore, some other small improvements are made to the docs of the RooVoigtian, like converting some of the function documentations to doxygen. Closes #11757.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11774
https://github.com/root-project/root/pull/11774:275,performance,profil,profile,275,"[RF] Improve RooVoigtian documentation; The RooVoigtian uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is the usual definition from HEP text books because it corresponds to the decay width. However, other sources define the Breit-Wigner profile with the HWHM (half width half maximum), for example the Wikipedia article: https://en.wikipedia.org/wiki/Cauchy_distribution. This can easily lead to mistakes if people use the RooVoigtian with the HWHM. With this commit, it is explicitly stated in the docs that the RooVoigtian takes the FWHM, both in the constructor and the overall class documentation. Furthermore, some other small improvements are made to the docs of the RooVoigtian, like converting some of the function documentations to doxygen. Closes #11757.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11774
https://github.com/root-project/root/pull/11774:25,usability,document,documentation,25,"[RF] Improve RooVoigtian documentation; The RooVoigtian uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is the usual definition from HEP text books because it corresponds to the decay width. However, other sources define the Breit-Wigner profile with the HWHM (half width half maximum), for example the Wikipedia article: https://en.wikipedia.org/wiki/Cauchy_distribution. This can easily lead to mistakes if people use the RooVoigtian with the HWHM. With this commit, it is explicitly stated in the docs that the RooVoigtian takes the FWHM, both in the constructor and the overall class documentation. Furthermore, some other small improvements are made to the docs of the RooVoigtian, like converting some of the function documentations to doxygen. Closes #11757.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11774
https://github.com/root-project/root/pull/11774:625,usability,document,documentation,625,"[RF] Improve RooVoigtian documentation; The RooVoigtian uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is the usual definition from HEP text books because it corresponds to the decay width. However, other sources define the Breit-Wigner profile with the HWHM (half width half maximum), for example the Wikipedia article: https://en.wikipedia.org/wiki/Cauchy_distribution. This can easily lead to mistakes if people use the RooVoigtian with the HWHM. With this commit, it is explicitly stated in the docs that the RooVoigtian takes the FWHM, both in the constructor and the overall class documentation. Furthermore, some other small improvements are made to the docs of the RooVoigtian, like converting some of the function documentations to doxygen. Closes #11757.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11774
https://github.com/root-project/root/pull/11774:761,usability,document,documentations,761,"[RF] Improve RooVoigtian documentation; The RooVoigtian uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is the usual definition from HEP text books because it corresponds to the decay width. However, other sources define the Breit-Wigner profile with the HWHM (half width half maximum), for example the Wikipedia article: https://en.wikipedia.org/wiki/Cauchy_distribution. This can easily lead to mistakes if people use the RooVoigtian with the HWHM. With this commit, it is explicitly stated in the docs that the RooVoigtian takes the FWHM, both in the constructor and the overall class documentation. Furthermore, some other small improvements are made to the docs of the RooVoigtian, like converting some of the function documentations to doxygen. Closes #11757.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11774
https://github.com/root-project/root/pull/11774:788,usability,Close,Closes,788,"[RF] Improve RooVoigtian documentation; The RooVoigtian uses the FWHM (Full width half maximum) as the width of the Breit-Wigner part, which is the usual definition from HEP text books because it corresponds to the decay width. However, other sources define the Breit-Wigner profile with the HWHM (half width half maximum), for example the Wikipedia article: https://en.wikipedia.org/wiki/Cauchy_distribution. This can easily lead to mistakes if people use the RooVoigtian with the HWHM. With this commit, it is explicitly stated in the docs that the RooVoigtian takes the FWHM, both in the constructor and the overall class documentation. Furthermore, some other small improvements are made to the docs of the RooVoigtian, like converting some of the function documentations to doxygen. Closes #11757.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11774
https://github.com/root-project/root/pull/11775:150,deployability,version,version,150,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:286,deployability,build,build,286,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:200,energy efficiency,draw,draw,200,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:150,integrability,version,version,150,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:150,modifiability,version,version,150,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:76,safety,detect,detect,76,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:131,safety,detect,detected,131,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:293,safety,test,tested,293,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:62,security,hash,hash,62,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:76,security,detect,detect,76,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:131,security,detect,detected,131,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:141,security,modif,modified,141,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:293,testability,test,tested,293,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:177,usability,Interact,Interactive,177,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11775:226,usability,statu,status,226,"[webcanvas] better check changes in colors and styles; 1. Use hash value to detect any change in list of colors or with gStyle. If detected, modified version send to client. 2. Interactive changes of draw options or histogram status bits send directly to server. 3. Small adjust of CEF build, tested with latest code. 4. Syntax adjusting of hist tutorials. 5. JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11775
https://github.com/root-project/root/pull/11776:267,deployability,contain,contain,267,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:512,deployability,contain,containing,512,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:609,energy efficiency,Core,Core,609,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:619,energy efficiency,Load,Loaded,619,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:706,energy efficiency,load,loaded,706,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:772,energy efficiency,Core,Core,772,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:789,energy efficiency,Load,Loaded,789,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:976,energy efficiency,load,loaded,976,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:626,interoperability,share,shared,626,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:796,interoperability,share,shared,796,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:191,modifiability,paramet,parameter,191,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:426,modifiability,paramet,parameter,426,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:463,modifiability,paramet,parameter,463,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:619,performance,Load,Loaded,619,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:706,performance,load,loaded,706,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:789,performance,Load,Loaded,789,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:976,performance,load,loaded,976,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:228,reliability,doe,does,228,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:478,testability,simpl,simple,478,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:288,usability,help,help,288,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:478,usability,simpl,simple,478,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:840,usability,User,Users,840,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11776:888,usability,User,Users,888,"Improve ListLibraries; As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed. Example:. ```. root [0] gSystem->ListLibraries(""Core""). . Loaded shared libraries. =======================. -----------------------. 0 libraries loaded. =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE). . Loaded shared libraries. =======================. /Users/couet/git/couet-root-bin/lib/libCore.so. /Users/couet/git/couet-root-bin/lib/libMathCore.so. -----------------------. 2 libraries loaded. =======================. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11776
https://github.com/root-project/root/pull/11777:214,deployability,integr,integration,214,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:375,deployability,depend,dependency,375,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:554,deployability,manag,management,554,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:554,energy efficiency,manag,management,554,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:214,integrability,integr,integration,214,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:375,integrability,depend,dependency,375,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:475,integrability,interfac,interface,475,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:214,interoperability,integr,integration,214,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:475,interoperability,interfac,interface,475,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:214,modifiability,integr,integration,214,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:375,modifiability,depend,dependency,375,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:475,modifiability,interfac,interface,475,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:547,performance,memor,memory,547,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:214,reliability,integr,integration,214,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:375,safety,depend,dependency,375,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:554,safety,manag,management,554,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:214,security,integr,integration,214,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:655,security,access,accesses,655,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:214,testability,integr,integration,214,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:375,testability,depend,dependency,375,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11777:547,usability,memor,memory,547,"[RF] Don't use RooGenericPdf for pull fitting in RooMCStudy; The functionality to fit pulls in the RooMCStudy with a Gaussian is. widely used, and it's not good that it uses a RooGenericPdf because of. the numeric integration. Probably the RooGaussian was not used because unlike the RooMCStudy, the. RooGaussian is not in RooFitCore and using it would result in a circular. dependency. This commit suggests a way to use the RooGaussian anyway, via the. RooWorkspace factory interface. The PR also includes a second commit that gets rid of manual memory management in the `RooMCStudy` class, which also affects the friend class `RooAbsMCStudyModule` that accesses some protected members of the RooMCStudy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11777
https://github.com/root-project/root/pull/11778:59,deployability,build,build,59,[skip-ci] add missing includes; Now the .C scripts used to build the reference guide are compiled using AClic to build the doc faster. Some includes were missing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11778
https://github.com/root-project/root/pull/11778:113,deployability,build,build,113,[skip-ci] add missing includes; Now the .C scripts used to build the reference guide are compiled using AClic to build the doc faster. Some includes were missing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11778
https://github.com/root-project/root/pull/11778:79,usability,guid,guide,79,[skip-ci] add missing includes; Now the .C scripts used to build the reference guide are compiled using AClic to build the doc faster. Some includes were missing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11778
https://github.com/root-project/root/pull/11779:75,modifiability,responsibil,responsibility,75,[DF] Move warning about lazy Snapshot to appropriate helpers; It's not the responsibility of RResultPtr to check for unused lazy Snapshots.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11779
https://github.com/root-project/root/pull/11779:53,usability,help,helpers,53,[DF] Move warning about lazy Snapshot to appropriate helpers; It's not the responsibility of RResultPtr to check for unused lazy Snapshots.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11779
https://github.com/root-project/root/issues/11781:1431,deployability,Build,BuildCache,1431,"et for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:1744,deployability,Build,Building,1744,"d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:2597,deployability,instal,installer,2597," -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd. ```. ### Additional context. I'm going to verify this is still present in `master` and confirm here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:1981,energy efficiency,model,modeler,1981,"ic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd. ```. ### Additional context. I'm going to verify this is still present in `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:65,integrability,schema,schema,65,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:72,interoperability,specif,specifies,72,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:2851,interoperability,share,shared,2851," -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd. ```. ### Additional context. I'm going to verify this is still present in `master` and confirm here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:2898,interoperability,xml,xml,2898," -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd. ```. ### Additional context. I'm going to verify this is still present in `master` and confirm here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:1753,performance,cach,cache,1753,". ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix ex",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:539,reliability,doe,does,539,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:973,safety,detect,detectors,973,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:989,safety,test,testcase,989,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:2754,safety,except,exceptions,2754," -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd. ```. ### Additional context. I'm going to verify this is still present in `master` and confirm here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:17,security,rotat,rotations,17,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:973,security,detect,detectors,973,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:1981,security,model,modeler,1981,"ic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd. ```. ### Additional context. I'm going to verify this is still present in `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:2868,security,ssl,ssl,2868," -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd. ```. ### Additional context. I'm going to verify this is still present in `master` and confirm here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:44,testability,unit,unit,44,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:314,testability,simpl,simple,314,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:989,testability,test,testcase,989,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:2930,testability,context,context,2930," -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd. ```. ### Additional context. I'm going to verify this is still present in `master` and confirm here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:2952,testability,verif,verify,2952," -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd. ```. ### Additional context. I'm going to verify this is still present in `master` and confirm here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:314,usability,simpl,simple,314,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:487,usability,behavi,behavior,487,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:571,usability,visual,visualizes,571,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:663,usability,user,user-images,663,"ROOT treats gdml rotations without explicit unit as degrees, but schema specifies default as radians; - [x] Checked for duplicates. ### Describe the bug. Attached ([HCAL_Chimney_Sector_Half_Plate.gdml.gz](https://github.com/root-project/root/files/10095037/HCAL_Chimney_Sector_Half_Plate.gdml.gz)) is a relatively simple GDML file (6280 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. ### Expected behavior. ROOT should not report an overlap. Geant4 does not report an overlap, and visualizes the volumes this way (demonstrating they are not overlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:1625,usability,Close,CloseGeometry,1625,"verlapping):. ![image](https://user-images.githubusercontent.com/4656391/204054829-cc8a1c58-f8d8-4b61-86f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:1728,usability,Close,CloseGeometry,1728,"6f4-3679424e4d17.png). ### To Reproduce. - `TGeoManager* myGeo = new TGeoManager();`. - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:1855,usability,Close,CloseGeometry,1855,"f_Plate.gdml"")`. - `myGeo->CheckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared sove",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:1889,usability,UI,UID,1889,"eckOverlaps()`. - `myGeo->PrintOverlaps()`. ```. 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt vecco",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:1949,usability,Close,CloseGeometry,1949,"c@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd. ```. ### Additional context. I'm going to veri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/issues/11781:2997,usability,confirm,confirm,2997," -l . root [0] TGeoManager* myGeo = new TGeoManager();. root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556b33e2bc60. root [2] myGeo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311. ```. ### Setup. ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):. ```. cxx17 asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm dataframe davix exceptions gdml gnuinstall gsl_shared http imt mathmore minuit2 opengl pyroot roofit root7 rpath shared soversion ssl unuran vc vdt veccore x11 xml xrootd. ```. ### Additional context. I'm going to verify this is still present in `master` and confirm here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11781
https://github.com/root-project/root/pull/11782:16,availability,error,error,16,Fix compilation error on Windows; Fix compilation error on MSVC after the merge of https://github.com/root-project/root/pull/11756.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782
https://github.com/root-project/root/pull/11782:50,availability,error,error,50,Fix compilation error on Windows; Fix compilation error on MSVC after the merge of https://github.com/root-project/root/pull/11756.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782
https://github.com/root-project/root/pull/11782:16,performance,error,error,16,Fix compilation error on Windows; Fix compilation error on MSVC after the merge of https://github.com/root-project/root/pull/11756.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782
https://github.com/root-project/root/pull/11782:50,performance,error,error,50,Fix compilation error on Windows; Fix compilation error on MSVC after the merge of https://github.com/root-project/root/pull/11756.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782
https://github.com/root-project/root/pull/11782:16,safety,error,error,16,Fix compilation error on Windows; Fix compilation error on MSVC after the merge of https://github.com/root-project/root/pull/11756.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782
https://github.com/root-project/root/pull/11782:50,safety,error,error,50,Fix compilation error on Windows; Fix compilation error on MSVC after the merge of https://github.com/root-project/root/pull/11756.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782
https://github.com/root-project/root/pull/11782:16,usability,error,error,16,Fix compilation error on Windows; Fix compilation error on MSVC after the merge of https://github.com/root-project/root/pull/11756.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782
https://github.com/root-project/root/pull/11782:50,usability,error,error,50,Fix compilation error on Windows; Fix compilation error on MSVC after the merge of https://github.com/root-project/root/pull/11756.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11782
https://github.com/root-project/root/pull/11783:49,deployability,integr,integrals,49,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:258,deployability,integr,integration,258,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:289,deployability,fail,failed,289,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:324,deployability,integr,integration,324,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:380,deployability,integr,integrated,380,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:554,deployability,integr,integrated,554,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1040,deployability,depend,depend,1040,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1129,deployability,build,builds,1129,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1096,energy efficiency,reduc,reduces,1096,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:49,integrability,integr,integrals,49,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:258,integrability,integr,integration,258,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:324,integrability,integr,integration,324,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:380,integrability,integr,integrated,380,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:554,integrability,integr,integrated,554,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:817,integrability,interfac,interface,817,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1040,integrability,depend,depend,1040,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:49,interoperability,integr,integrals,49,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:258,interoperability,integr,integration,258,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:324,interoperability,integr,integration,324,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:380,interoperability,integr,integrated,380,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:554,interoperability,integr,integrated,554,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:803,interoperability,client-serv,client-server,803,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:817,interoperability,interfac,interface,817,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:18,modifiability,variab,variable,18,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:49,modifiability,integr,integrals,49,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:239,modifiability,variab,variable,239,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:258,modifiability,integr,integration,258,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:270,modifiability,variab,variables,270,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:324,modifiability,integr,integration,324,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:336,modifiability,variab,variable,336,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:380,modifiability,integr,integrated,380,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:505,modifiability,variab,variable,505,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:554,modifiability,integr,integrated,554,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:621,modifiability,variab,variable,621,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:817,modifiability,interfac,interface,817,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1040,modifiability,depend,depend,1040,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1108,performance,time,time,1108,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:49,reliability,integr,integrals,49,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:258,reliability,integr,integration,258,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:289,reliability,fail,failed,289,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:324,reliability,integr,integration,324,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:380,reliability,integr,integrated,380,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:554,reliability,integr,integrated,554,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:680,safety,test,test,680,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1020,safety,test,tests,1020,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1040,safety,depend,depend,1040,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1198,safety,test,tests,1198,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:49,security,integr,integrals,49,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:258,security,integr,integration,258,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:324,security,integr,integration,324,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:380,security,integr,integrated,380,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:554,security,integr,integrated,554,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:49,testability,integr,integrals,49,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:258,testability,integr,integration,258,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:324,testability,integr,integration,324,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:380,testability,integr,integrated,380,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:554,testability,integr,integrated,554,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:675,testability,unit,unit,675,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:680,testability,test,test,680,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1020,testability,test,tests,1020,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1040,testability,depend,depend,1040,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/pull/11783:1198,testability,test,tests,1198,"[RF] Ensure using variable clones also works for integrals - part 2; This is a direct fixup to commit https://github.com/root-project/root/commit/faa42a17e3614efbd97a91194243157b77e74fde. That commit tried to make. it possible to use also variable clones as integration variables, but it. failed to cover the case where the integration variable is only an. indirect server of the integrated function. This was because. `valueClients()` used for the graph traversal was still called on the. clone, not the variable in the actual computation graph of the. integrated function. This commit fixes this by passing the correct variable to. `unmarkDepValueClients` to begin with. A unit test for this case is also implemented. As such, this PR is part of the series of PRs that redesigned the. RooRealIntegral client-server interface:. * https://github.com/root-project/root/pull/11597. * https://github.com/root-project/root/pull/11619. * https://github.com/root-project/root/pull/11662. A second commit in this PR makes less tests in RooFitCore depend on RooFit,. using the RooWorkspace factory. This reduces the time of increamental builds. where one changes the RooFit library, because the RooFitCore tests don't need. to be rebuilt.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11783
https://github.com/root-project/root/issues/11784:4480,availability,down,down,4480," ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x55618132f820. root [9] overlap->Print(). = Overlap : overlap ovlp=3.51789. - first volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.959245 0.282576 0.000000 Tx = 75.401418. -0.282576 0.959245 0.000000 Ty = 214.140485. 0.000000 0.000000 1.000000 Tz = 25.354000. - second volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.964608 0.263688 0.000000 Tx = 71.182515. -0.263688 0.964608 0.000000 Ty = 215.579615. 0.000000 0.000000 1.000000 Tz = 25.354000. ```. ### Setup. This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context. This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:1737,deployability,Build,BuildCache,1737,"8d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2265,deployability,Build,Building,2265,"overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2701,deployability,Fail,Failed,2701," barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x5561",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:4248,deployability,instal,install,4248," ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x55618132f820. root [9] overlap->Print(). = Overlap : overlap ovlp=3.51789. - first volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.959245 0.282576 0.000000 Tx = 75.401418. -0.282576 0.959245 0.000000 Ty = 214.140485. 0.000000 0.000000 1.000000 Tz = 25.354000. - second volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.964608 0.263688 0.000000 Tx = 71.182515. -0.263688 0.964608 0.000000 Ty = 215.579615. 0.000000 0.000000 1.000000 Tz = 25.354000. ```. ### Setup. This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context. This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:4313,deployability,version,version,4313," ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x55618132f820. root [9] overlap->Print(). = Overlap : overlap ovlp=3.51789. - first volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.959245 0.282576 0.000000 Tx = 75.401418. -0.282576 0.959245 0.000000 Ty = 214.140485. 0.000000 0.000000 1.000000 Tz = 25.354000. - second volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.964608 0.263688 0.000000 Tx = 71.182515. -0.263688 0.964608 0.000000 Ty = 215.579615. 0.000000 0.000000 1.000000 Tz = 25.354000. ```. ### Setup. This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context. This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:555,energy efficiency,Draw,Drawing,555,"Spurious overlap in tesselated solid imported from gdml; - [x] Checked for duplicates. ### Describe the bug. Attached ([overlap_issue.gdml.gz](https://github.com/root-project/root/files/10097172/overlap_issue.gdml.gz)) is a relatively simple GDML file (6844 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior. There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:. ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy mediu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:1278,energy efficiency,Draw,Draw,1278,"esselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior. There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:. ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2502,energy efficiency,model,modeler,2502,"om file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:4313,integrability,version,version,4313," ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x55618132f820. root [9] overlap->Print(). = Overlap : overlap ovlp=3.51789. - first volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.959245 0.282576 0.000000 Tx = 75.401418. -0.282576 0.959245 0.000000 Ty = 214.140485. 0.000000 0.000000 1.000000 Tz = 25.354000. - second volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.964608 0.263688 0.000000 Tx = 71.182515. -0.263688 0.964608 0.000000 Ty = 215.579615. 0.000000 0.000000 1.000000 Tz = 25.354000. ```. ### Setup. This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context. This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:4313,modifiability,version,version,4313," ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x55618132f820. root [9] overlap->Print(). = Overlap : overlap ovlp=3.51789. - first volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.959245 0.282576 0.000000 Tx = 75.401418. -0.282576 0.959245 0.000000 Ty = 214.140485. 0.000000 0.000000 1.000000 Tz = 25.354000. - second volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.964608 0.263688 0.000000 Tx = 71.182515. -0.263688 0.964608 0.000000 Ty = 215.579615. 0.000000 0.000000 1.000000 Tz = 25.354000. ```. ### Setup. This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context. This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:432,performance,time,time,432,"Spurious overlap in tesselated solid imported from gdml; - [x] Checked for duplicates. ### Describe the bug. Attached ([overlap_issue.gdml.gz](https://github.com/root-project/root/files/10097172/overlap_issue.gdml.gz)) is a relatively simple GDML file (6844 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior. There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:. ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy mediu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2274,performance,cach,cache,2274,">Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2701,reliability,Fail,Failed,2701," barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x5561",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:1353,safety,detect,detectors,1353,"t for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior. There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:. ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:4406,safety,detect,detector,4406," ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x55618132f820. root [9] overlap->Print(). = Overlap : overlap ovlp=3.51789. - first volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.959245 0.282576 0.000000 Tx = 75.401418. -0.282576 0.959245 0.000000 Ty = 214.140485. 0.000000 0.000000 1.000000 Tz = 25.354000. - second volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.964608 0.263688 0.000000 Tx = 71.182515. -0.263688 0.964608 0.000000 Ty = 215.579615. 0.000000 0.000000 1.000000 Tz = 25.354000. ```. ### Setup. This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context. This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:1353,security,detect,detectors,1353,"t for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior. There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:. ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2502,security,model,modeler,2502,"om file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:4406,security,detect,detector,4406," ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x55618132f820. root [9] overlap->Print(). = Overlap : overlap ovlp=3.51789. - first volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.959245 0.282576 0.000000 Tx = 75.401418. -0.282576 0.959245 0.000000 Ty = 214.140485. 0.000000 0.000000 1.000000 Tz = 25.354000. - second volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.964608 0.263688 0.000000 Tx = 71.182515. -0.263688 0.964608 0.000000 Ty = 215.579615. 0.000000 0.000000 1.000000 Tz = 25.354000. ```. ### Setup. This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context. This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:235,testability,simpl,simple,235,"Spurious overlap in tesselated solid imported from gdml; - [x] Checked for duplicates. ### Describe the bug. Attached ([overlap_issue.gdml.gz](https://github.com/root-project/root/files/10097172/overlap_issue.gdml.gz)) is a relatively simple GDML file (6844 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior. There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:. ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy mediu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:486,testability,unit,units,486,"Spurious overlap in tesselated solid imported from gdml; - [x] Checked for duplicates. ### Describe the bug. Attached ([overlap_issue.gdml.gz](https://github.com/root-project/root/files/10097172/overlap_issue.gdml.gz)) is a relatively simple GDML file (6844 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior. There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:. ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy mediu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:3570,testability,simpl,simple,3570," ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x55618132f820. root [9] overlap->Print(). = Overlap : overlap ovlp=3.51789. - first volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.959245 0.282576 0.000000 Tx = 75.401418. -0.282576 0.959245 0.000000 Ty = 214.140485. 0.000000 0.000000 1.000000 Tz = 25.354000. - second volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.964608 0.263688 0.000000 Tx = 71.182515. -0.263688 0.964608 0.000000 Ty = 215.579615. 0.000000 0.000000 1.000000 Tz = 25.354000. ```. ### Setup. This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context. This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:4349,testability,context,context,4349," ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x55618132f820. root [9] overlap->Print(). = Overlap : overlap ovlp=3.51789. - first volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.959245 0.282576 0.000000 Tx = 75.401418. -0.282576 0.959245 0.000000 Ty = 214.140485. 0.000000 0.000000 1.000000 Tz = 25.354000. - second volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.964608 0.263688 0.000000 Tx = 71.182515. -0.263688 0.964608 0.000000 Ty = 215.579615. 0.000000 0.000000 1.000000 Tz = 25.354000. ```. ### Setup. This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context. This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:235,usability,simpl,simple,235,"Spurious overlap in tesselated solid imported from gdml; - [x] Checked for duplicates. ### Describe the bug. Attached ([overlap_issue.gdml.gz](https://github.com/root-project/root/files/10097172/overlap_issue.gdml.gz)) is a relatively simple GDML file (6844 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior. There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:. ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy mediu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:508,usability,behavi,behavior,508,"Spurious overlap in tesselated solid imported from gdml; - [x] Checked for duplicates. ### Describe the bug. Attached ([overlap_issue.gdml.gz](https://github.com/root-project/root/files/10097172/overlap_issue.gdml.gz)) is a relatively simple GDML file (6844 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior. There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:. ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy mediu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:599,usability,command,commands,599,"Spurious overlap in tesselated solid imported from gdml; - [x] Checked for duplicates. ### Describe the bug. Attached ([overlap_issue.gdml.gz](https://github.com/root-project/root/files/10097172/overlap_issue.gdml.gz)) is a relatively simple GDML file (6844 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior. There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:. ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy mediu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:684,usability,user,user-images,684,"Spurious overlap in tesselated solid imported from gdml; - [x] Checked for duplicates. ### Describe the bug. Attached ([overlap_issue.gdml.gz](https://github.com/root-project/root/files/10097172/overlap_issue.gdml.gz)) is a relatively simple GDML file (6844 bytes) with a single tesselated solid that is placed twice in positions that are not overlapping, yet for which ROOT reports an overlap. (This is similar to #11781, but this time there is no explanation due to incorrect default units.). ### Expected behavior. There should be no overlap reported. Drawing the overlap (last line in reproduce commands below) shows the two tessellated objects without overlap:. ![image](https://user-images.githubusercontent.com/4656391/204112181-59b9798d-ca48-4426-9ab8-734e11f895d0.png). ### To Reproduce. ```console. auto* geo = TGeoManager::Import(""overlap_issue.gdml""). geo->CheckOverlaps(). geo->PrintOverlaps(). auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). TGeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy mediu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2146,usability,Close,CloseGeometry,2146,"GeoChecker ch(geo). overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). overlap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->Get",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2249,usability,Close,CloseGeometry,2249,"ap->Print(). overlap->Draw(). ```. which produces:. ```console. 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2376,usability,Close,CloseGeometry,2376,"oot -l . root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2410,usability,UI,UID,2410," TGeoManager::Import(""overlap_issue.gdml""). Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:2470,usability,Close,CloseGeometry,2470,":Import>: Reading geometry from file: overlap_issue.gdml. Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created. Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel. Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100. Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes... Info in <TGeoManager::CheckGeometry>: ...Nothing to fix. Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material. Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material. Info in <TGeoManager::CloseGeometry>: Counting nodes... Info in <TGeoManager::Voxelize>: Voxelizing... Info in <TGeoManager::CloseGeometry>: Building cache... Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2. Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML. Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:3570,usability,simpl,simple,3570," ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x55618132f820. root [9] overlap->Print(). = Overlap : overlap ovlp=3.51789. - first volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.959245 0.282576 0.000000 Tx = 75.401418. -0.282576 0.959245 0.000000 Ty = 214.140485. 0.000000 0.000000 1.000000 Tz = 25.354000. - second volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.964608 0.263688 0.000000 Tx = 71.182515. -0.263688 0.964608 0.000000 Ty = 215.579615. 0.000000 0.000000 1.000000 Tz = 25.354000. ```. ### Setup. This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context. This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/issues/11784:4493,usability,minim,minimal,4493," ready----------------. (TGeoManager *) 0x556180ad1d50. root [1] geo->CheckOverlaps(). Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1. warning: Failed to call `P020_REveGeoPainter()` to execute the macro. Add this function or rename the macro. Falling back to `.L`. Check overlaps: [==========] 3 [100.00 %] 00:00 . Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(). === Overlaps for Default ===. = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823. root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(). (TGeoVolume *) 0x556181070960. root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)->GetVolume(). (TGeoVolume *) 0x556181070960. root [5] auto* mat1 = geo->GetTopNode()->GetDaughter(0)->GetMatrix(). (TGeoMatrix *) 0x5561811a2390. root [6] auto* mat2 = geo->GetTopNode()->GetDaughter(1)->GetMatrix(). (TGeoMatrix *) 0x5561811b19c0. root [7] TGeoChecker ch(geo). (TGeoChecker &) Name: TGeoChecker Title: a simple geometry checker. root [8] overlap = ch.MakeCheckOverlap(""overlap"", vol1, vol2, mat1, mat2, false, 0.1). (TGeoOverlap *) 0x55618132f820. root [9] overlap->Print(). = Overlap : overlap ovlp=3.51789. - first volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.959245 0.282576 0.000000 Tx = 75.401418. -0.282576 0.959245 0.000000 Ty = 214.140485. 0.000000 0.000000 1.000000 Tz = 25.354000. - second volume: plate at position:. matrix - tr=1 rot=1 refl=0 scl=0 shr=0 reg=0 own=0. 0.964608 0.263688 0.000000 Tx = 71.182515. -0.263688 0.964608 0.000000 Ty = 215.579615. 0.000000 0.000000 1.000000 Tz = 25.354000. ```. ### Setup. This occurs on an install of ROOT 6.26.06 with spack (v0.19) as well as a compiled version of `master`. ### Additional context. This issue originates in a DD4hep geometry of a detector at the Electron-Ion Collider, but we have been able to narrow it down to this minimal example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11784
https://github.com/root-project/root/pull/11785:465,deployability,observ,observables,465,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:545,deployability,observ,observables,545,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:176,integrability,sub,subset,176,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:380,integrability,Batch,BatchMode,380,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:510,integrability,messag,message,510,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:618,integrability,messag,message,618,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:637,integrability,messag,message,637,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:807,integrability,messag,message,807,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:1064,integrability,compon,components,1064,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:510,interoperability,messag,message,510,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:618,interoperability,messag,message,618,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:637,interoperability,messag,message,637,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:807,interoperability,messag,message,807,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:1055,interoperability,specif,specific,1055,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:1064,interoperability,compon,components,1064,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:1064,modifiability,compon,components,1064,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:380,performance,Batch,BatchMode,380,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:732,performance,overhead,overhead,732,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:344,safety,test,test,344,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:949,safety,test,test,949,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:50,testability,simul,simultaneous,50,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:200,testability,simul,simultaneous,200,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:344,testability,test,test,344,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:465,testability,observ,observables,465,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:545,testability,observ,observables,545,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:944,testability,unit,unit,944,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:949,testability,test,test,949,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:974,testability,verif,verifies,974,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:1006,usability,command,command,1006,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/pull/11785:1100,usability,Close,Closes,1100,"[RF] Implement consideration of category range in simultaneous fits; It is possible to set ranges for a `RooCategory`, suggesting that this. is a possible way to select only a subset of channels in a simultaneous. fit. However, this was not working so far, and this commit implements. that. This commit implements that feature for both the old test statistic. classes and the new BatchMode. As now it also makes sense to fit to a range that is not defined for the. observables but for the categories only, the message that is printed. when your observables don't define the range is demoted from a warning. to an info message. The debug message that was printed when channels are not selected also. got removed, because it had some overhead from `sumEntries`, the. debugging prints are rarely used, and the message is not true anymore. because chanels might also be skipped now becauese the are not selected. in the category range. Also, a new unit test is implemented that verifies the `RooFit::Range()`. command argument for fitTo can be used to select specific components. from a RooSimultaneous. Closes issue https://github.com/root-project/root/issues/8231. Two additional commits in this PR make some improvements to the `RooAbsTestStatistic` code, as described in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11785
https://github.com/root-project/root/issues/11786:594,availability,state,states,594,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:1351,availability,Operat,Operating,1351,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:225,deployability,contain,contains,225,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:1330,deployability,version,version,1330,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:594,integrability,state,states,594,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:1330,integrability,version,version,1330,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:465,interoperability,format,format,465,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:504,interoperability,format,format,504,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:511,interoperability,specif,specification,511,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:580,interoperability,specif,specification,580,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:893,interoperability,specif,specifications,893,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:940,interoperability,specif,specifications,940,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:1175,interoperability,specif,specification,1175,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:1330,modifiability,version,version,1330,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:748,reliability,doe,does,748,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:830,safety,test,testing,830,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:661,security,sign,sign,661,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:866,security,sign,sign,866,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:830,testability,test,testing,830,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:383,usability,document,documentation,383,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11786:1281,usability,support,support,1281,"TTreePlayer::Scan can't handle left-justified text; ### Explain what you would like to see improved. I don't know if this a new feature request or a bug:. In TTreePlayer::Scan(), there is no way to left-justify a branch that contains text. A line like this works (assuming a TTree called `Options`):. ```. Options->Scan("""","""",""col=20s:15s:8s:1s:25s:15s""). ```. The TTreePlayer::Scan documentation says this about the colon-delimited arguments passed via cols: ""The format string should follow the printf format specification. The value given will be prefixed by %..."". The printf specification states that to left-justify a column, one precedes it with a minus sign; e.g., ""%-20s"" to left-justify a column of text 20 characters wide. However, this does not work:. ```. Options->Scan("""","""",""col=-20s:15s:8s:1s:25s:15s""). ```. Some testing shows that if I put a minus sign in any of the `cols=` specifications, TTreePlayer::Scan will use the specifications until it encounters the first `-`. After that, all columns have the default width (and remain right-justified). . If I look at the code in TTreePlayer.cxx, I can see that the code cannot interpret a `-` character in the specification. . This is not a ""breaking"" change for the work I want to do, but it would be nice to fully support left justification. . ### Setup. 1. ROOT version: 6.26/00. 2. Operating system: CentOS 7. 3. How you obtained ROOT: Built it myself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11786
https://github.com/root-project/root/issues/11787:27,availability,error,error,27,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:259,availability,error,error,259,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1383,availability,Error,Error,1383,";F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1542,availability,error,error,1542,"n reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1726,availability,down,download,1726,"1.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2599,availability,error,error,2599,"Files\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Cus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3096,availability,error,error,3096,"es\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3584,availability,error,error,3584,"ets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4090,availability,error,error,4090,"): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4565,availability,error,error,4565,"targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): er",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5059,availability,error,error,5059,"t.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5566,availability,error,error,5566,"r MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB80",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6083,availability,error,error,6083," for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6558,availability,error,error,6558,",5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7060,availability,error,error,7060,"mon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7582,availability,error,error,7582," for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8143,availability,error,error,8143,"741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5):",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8641,availability,error,error,8641,"les\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9147,availability,error,error,9147,"SB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.Cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9665,availability,error,error,9665," for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10173,availability,error,error,10173,"or 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10645,availability,error,error,10645,".targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.target",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11147,availability,error,error,11147,"Common.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.ta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11658,availability,error,error,11658,"ustom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12164,availability,error,error,12164,"m build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12666,availability,error,error,12666,"66: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13159,availability,error,error,13159,": error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB806",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13631,availability,error,error,13631,"osoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14150,availability,error,error,14150,"1,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14646,availability,error,error,14646,"tom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15155,availability,error,error,15155,"B8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.Cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15678,availability,error,error,15678,"\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16181,availability,error,error,16181,"or 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16675,availability,error,error,16675,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17178,availability,error,error,17178,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17662,availability,error,error,17662,"s(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18155,availability,error,error,18155,"mon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18643,availability,error,error,18643,"targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19123,availability,error,error,19123,"ft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19596,availability,error,error,19596,"VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20105,availability,error,error,20105,"argets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20596,availability,error,error,20596,"or MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21088,availability,error,error,21088,"rgets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21611,availability,error,error,21611,"tom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:22085,availability,error,error,22085,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_libdevice_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_math_forward_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_runtime_wrapper.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__stddef_max_align_t.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24127,availability,error,error,24127,"c\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__wmmintrin_pclmul.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\adxintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\altivec.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24626,availability,error,error,24626,"rm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25267,availability,error,error,25267,"arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25770,availability,error,error,25770,"iles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26322,availability,error,error,26322,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26795,availability,error,error,26795,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27145,availability,Error,Error,27145,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5,deployability,fail,failed,5,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15,deployability,build,build,15,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:49,deployability,build,build,49,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:112,deployability,fail,failed,112,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:122,deployability,build,build,122,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:281,deployability,build,build,281,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:567,deployability,version,version,567,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:637,deployability,Version,Versions,637,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:650,deployability,configurat,configuration,650,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1236,deployability,Releas,Release,1236,"on.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1328,deployability,Configurat,Configuration,1328,"c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1342,deployability,Releas,Release,1342,"ff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1564,deployability,build,build,1564,"version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Micr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1810,deployability,updat,update,1810," 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1892,deployability,patch,patch,1892,"io\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2058,deployability,build,build,2058,"arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2139,deployability,instal,install,2139,"-G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2621,deployability,build,build,2621,"3e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3118,deployability,build,build,3118,"ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3606,deployability,build,build,3606,"066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4112,deployability,build,build,4112,"om build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4587,deployability,build,build,4587,"MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5081,deployability,build,build,5081,"1,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5588,deployability,build,build,5588,"d for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for '",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6105,deployability,build,build,6105,"m64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6580,deployability,build,build,6580,"stom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7082,deployability,build,build,7082,"ror MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7604,deployability,build,build,7604,"m64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8165,deployability,build,build,8165,"rStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8663,deployability,build,build,8663,"ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9169,deployability,build,build,9169,"or 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5):",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9687,deployability,build,build,9687,"m64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10195,deployability,build,build,10195,"4ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10667,deployability,build,build,10667," MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB806",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11169,deployability,build,build,11169," error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11680,deployability,build,build,11680,"ot\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Cu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12186,deployability,build,build,12186,"uild_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12688,deployability,build,build,12688,"F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMake",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13181,deployability,build,build,13181,"m build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13653,deployability,build,build,13653,"s(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14172,deployability,build,build,14172,"ustom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14668,deployability,build,build,14668,"\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15177,deployability,build,build,15177,"r 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5):",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15700,deployability,build,build,15700,"akeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16203,deployability,build,build,16203,"4ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16697,deployability,build,build,16697,"build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17200,deployability,build,build,17200,"build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17684,deployability,build,build,17684,"6: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18177,deployability,build,build,18177,"ror MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18665,deployability,build,build,18665,"MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d83",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19145,deployability,build,build,19145,"41,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19618,deployability,build,build,19618,"ommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20127,deployability,build,build,20127,"SB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20618,deployability,build,build,20618,"ld for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21110,deployability,build,build,21110,"B8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21633,deployability,build,build,21633,"\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:22107,deployability,build,build,22107,"build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_libdevice_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_math_forward_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_runtime_wrapper.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__stddef_max_align_t.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__wmmintrin_aes.h.rule;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24149,deployability,build,build,24149,"42af811ea95db684c5be22d\__wmmintrin_pclmul.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\adxintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\altivec.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24648,deployability,build,build,24648,"ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25289,deployability,build,build,25289,"e079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Micros",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25792,deployability,build,build,25792,"0bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26344,deployability,build,build,26344,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26817,deployability,build,build,26817,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27151,deployability,log,log,27151,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27179,deployability,log,log,27179,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27255,deployability,log,log,27255,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:567,integrability,version,version,567,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:637,integrability,Version,Versions,637,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:650,integrability,configur,configuration,650,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1328,integrability,Configur,Configuration,1328,"c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1973,integrability,configur,configure,1973," clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Prog",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1308,interoperability,Platform,Platform,1308,"c\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:567,modifiability,version,version,567,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:637,modifiability,Version,Versions,637,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:650,modifiability,configur,configuration,650,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1328,modifiability,Configur,Configuration,1328,"c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1973,modifiability,configur,configure,1973," clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Prog",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27,performance,error,error,27,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:259,performance,error,error,259,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1383,performance,Error,Error,1383,";F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1542,performance,error,error,1542,"n reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2599,performance,error,error,2599,"Files\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Cus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3096,performance,error,error,3096,"es\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3584,performance,error,error,3584,"ets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4090,performance,error,error,4090,"): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4565,performance,error,error,4565,"targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): er",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5059,performance,error,error,5059,"t.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5566,performance,error,error,5566,"r MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB80",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6083,performance,error,error,6083," for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6558,performance,error,error,6558,",5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7060,performance,error,error,7060,"mon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7582,performance,error,error,7582," for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8143,performance,error,error,8143,"741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5):",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8641,performance,error,error,8641,"les\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9147,performance,error,error,9147,"SB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.Cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9665,performance,error,error,9665," for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10173,performance,error,error,10173,"or 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10645,performance,error,error,10645,".targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.target",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11147,performance,error,error,11147,"Common.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.ta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11658,performance,error,error,11658,"ustom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12164,performance,error,error,12164,"m build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12666,performance,error,error,12666,"66: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13159,performance,error,error,13159,": error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB806",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13631,performance,error,error,13631,"osoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14150,performance,error,error,14150,"1,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14646,performance,error,error,14646,"tom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15155,performance,error,error,15155,"B8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.Cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15678,performance,error,error,15678,"\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16181,performance,error,error,16181,"or 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16675,performance,error,error,16675,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17178,performance,error,error,17178,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17662,performance,error,error,17662,"s(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18155,performance,error,error,18155,"mon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18643,performance,error,error,18643,"targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19123,performance,error,error,19123,"ft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19596,performance,error,error,19596,"VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20105,performance,error,error,20105,"argets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20596,performance,error,error,20596,"or MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21088,performance,error,error,21088,"rgets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21611,performance,error,error,21611,"tom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:22085,performance,error,error,22085,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_libdevice_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_math_forward_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_runtime_wrapper.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__stddef_max_align_t.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24127,performance,error,error,24127,"c\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__wmmintrin_pclmul.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\adxintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\altivec.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24626,performance,error,error,24626,"rm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25267,performance,error,error,25267,"arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25770,performance,error,error,25770,"iles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26322,performance,error,error,26322,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26795,performance,error,error,26795,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27145,performance,Error,Error,27145,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5,reliability,fail,failed,5,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:112,reliability,fail,failed,112,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:358,reliability,Diagno,DiagnosticSemaKinds,358,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2698,reliability,Diagno,DiagnosticSemaKinds,2698,"ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3683,reliability,Diagno,DiagnosticCommentKinds,3683,"f91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4664,reliability,Diagno,DiagnosticASTKinds,4664,"01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\Diagnost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5158,reliability,Diagno,DiagnosticIndexName,5158,"685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c182",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5665,reliability,Diagno,DiagnosticRefactoringKinds,5665,"inds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8242,reliability,Diagno,DiagnosticGroups,8242,"6a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\Attr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8740,reliability,Diagno,DiagnosticCrossTUKinds,8740,"MakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9764,reliability,Diagno,DiagnosticFrontendKinds,9764,"oot\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14745,reliability,Diagno,DiagnosticAnalysisKinds,14745,"ule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15254,reliability,Diagno,DiagnosticSerializationKinds,15254,":\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16280,reliability,Diagno,DiagnosticLexKinds,16280,"le;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16774,reliability,Diagno,DiagnosticCommonKinds,16774,"edAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24226,reliability,Diagno,DiagnosticParseKinds,24226,"f00d7a9e42af811ea95db684c5be22d\adxintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\altivec.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Micro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25366,reliability,Diagno,DiagnosticDriverKinds,25366,". [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27,safety,error,error,27,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:259,safety,error,error,259,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1383,safety,Error,Error,1383,";F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1542,safety,error,error,1542,"n reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1810,safety,updat,update,1810," 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1892,safety,patch,patch,1892,"io\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2311,safety,compl,complete,2311,"m=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2599,safety,error,error,2599,"Files\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Cus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3096,safety,error,error,3096,"es\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3584,safety,error,error,3584,"ets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4090,safety,error,error,4090,"): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4565,safety,error,error,4565,"targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): er",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5059,safety,error,error,5059,"t.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5566,safety,error,error,5566,"r MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB80",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6083,safety,error,error,6083," for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6558,safety,error,error,6558,",5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7060,safety,error,error,7060,"mon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7582,safety,error,error,7582," for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8143,safety,error,error,8143,"741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5):",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8641,safety,error,error,8641,"les\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9147,safety,error,error,9147,"SB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.Cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9665,safety,error,error,9665," for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10173,safety,error,error,10173,"or 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10645,safety,error,error,10645,".targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.target",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11147,safety,error,error,11147,"Common.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.ta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11658,safety,error,error,11658,"ustom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12164,safety,error,error,12164,"m build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12666,safety,error,error,12666,"66: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13159,safety,error,error,13159,": error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB806",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13631,safety,error,error,13631,"osoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14150,safety,error,error,14150,"1,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14646,safety,error,error,14646,"tom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15155,safety,error,error,15155,"B8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.Cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15678,safety,error,error,15678,"\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16181,safety,error,error,16181,"or 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16675,safety,error,error,16675,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17178,safety,error,error,17178,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17662,safety,error,error,17662,"s(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18155,safety,error,error,18155,"mon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18643,safety,error,error,18643,"targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19123,safety,error,error,19123,"ft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19596,safety,error,error,19596,"VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20105,safety,error,error,20105,"argets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20596,safety,error,error,20596,"or MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21088,safety,error,error,21088,"rgets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21611,safety,error,error,21611,"tom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:22085,safety,error,error,22085,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_libdevice_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_math_forward_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_runtime_wrapper.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__stddef_max_align_t.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24127,safety,error,error,24127,"c\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__wmmintrin_pclmul.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\adxintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\altivec.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24626,safety,error,error,24626,"rm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25267,safety,error,error,25267,"arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25770,safety,error,error,25770,"iles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26322,safety,error,error,26322,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26795,safety,error,error,26795,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27145,safety,Error,Error,27145,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27151,safety,log,log,27151,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27179,safety,log,log,27179,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27255,safety,log,log,27255,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:650,security,configur,configuration,650,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1328,security,Configur,Configuration,1328,"c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1810,security,updat,update,1810," 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1892,security,patch,patch,1892,"io\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1973,security,configur,configure,1973," clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Prog",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2311,security,compl,complete,2311,"m=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27151,security,log,log,27151,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27179,security,log,log,27179,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27255,security,log,log,27255,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:358,testability,Diagno,DiagnosticSemaKinds,358,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2698,testability,Diagno,DiagnosticSemaKinds,2698,"ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3683,testability,Diagno,DiagnosticCommentKinds,3683,"f91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4664,testability,Diagno,DiagnosticASTKinds,4664,"01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\Diagnost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5158,testability,Diagno,DiagnosticIndexName,5158,"685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c182",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5665,testability,Diagno,DiagnosticRefactoringKinds,5665,"inds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8242,testability,Diagno,DiagnosticGroups,8242,"6a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\Attr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8740,testability,Diagno,DiagnosticCrossTUKinds,8740,"MakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9764,testability,Diagno,DiagnosticFrontendKinds,9764,"oot\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14745,testability,Diagno,DiagnosticAnalysisKinds,14745,"ule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15254,testability,Diagno,DiagnosticSerializationKinds,15254,":\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16280,testability,Diagno,DiagnosticLexKinds,16280,"le;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16774,testability,Diagno,DiagnosticCommonKinds,16774,"edAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24226,testability,Diagno,DiagnosticParseKinds,24226,"f00d7a9e42af811ea95db684c5be22d\adxintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\altivec.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Micro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25366,testability,Diagno,DiagnosticDriverKinds,25366,". [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27151,testability,log,log,27151,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27179,testability,log,log,27179,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27255,testability,log,log,27255,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27,usability,error,error,27,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:42,usability,Custom,Custom,42,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:167,usability,Visual,Visual,167,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:259,usability,error,error,259,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:274,usability,Custom,Custom,274,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:610,usability,help,help,610,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:707,usability,Visual,Visual,707,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:780,usability,tool,tools,780,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:786,usability,command,command,786,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:884,usability,Visual,Visual,884,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:922,usability,Tool,Tools,922,"ROOT failed to build with ""error MSB8066: Custom build for exited with code"" with MSVC on Windows arm64ec; ROOT failed to build with ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1147,usability,Visual,Visual,1147," (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1383,usability,Error,Error,1383,";F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1450,usability,Visual,Visual,1450,"ClangDiagnosticSema.rule' exited with code -1073741819."" with MSVC on Windows arm64ec. It can reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1542,usability,error,error,1542,"n reproduce on latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:1557,usability,Custom,Custom,1557,"latest version on master branch. Could you please help look at this issue? **Versions and configuration**. OS: Windows Server 2022 Datacenter. VS: Visual Studio 2019(16.11.19). **Steps to reproduce**. 1. open x64 native tools command prompt for VS 2019. 2. set VSCMD_SKIP_SENDTELEMETRY=1 & ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"" -host_arch=amd64 -arch=arm64. 3. git clone https://github.com/root-project/root F:\root. 4. cd F:\root. 5. mkdir build_arm64ec & cd build_arm64ec. 6. set PATH=%PATH:C:\Strawberry\perl\bin;=%. 7. cmake -G ""Visual Studio 16 2019"" -A ARM64EC -DCMAKE_SYSTEM_VERSION=10.0.22618.0 -DCMAKE_BUILD_TYPE=Release -Droofit=off -Dtesting=OFF -Droottest=OFF .. . 8. msbuild /m /p:Platform=ARM64EC /p:Configuration=Release ALL_BUILD.vcxproj /t:Rebuild . **Error info:**. ```. Line 4659: 53>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2507,usability,Visual,Visual,2507,"osoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2599,usability,error,error,2599,"Files\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Cus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2614,usability,Custom,Custom,2614,"7a213853e6ccbb8f8ae4e08\TBB-mkdir.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-download.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-update.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-patch.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for '",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:2893,usability,tool,tools,2893,"h.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-configure.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3004,usability,Visual,Visual,3004,"ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-build.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual St",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3096,usability,error,error,3096,"es\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3111,usability,Custom,Custom,3111,"13853e6ccbb8f8ae4e08\TBB-install.rule;F:\root\build_arm64ec\CMakeFiles\63abf6fef7a213853e6ccbb8f8ae4e08\TBB-tbb2externals.rule;F:\root\build_arm64ec\CMakeFiles\087a075fd7e4ae75a86c11aaf55edf65\TBB-complete.rule;F:\root\build_arm64ec\CMakeFiles\b3a0475d795c353882bf26193a7d45fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3385,usability,tool,tools,3385,"fe\TBB.rule' exited with code 1. [F:\root\build_arm64ec\TBB.vcxproj]. 	Line 9000: 203>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3492,usability,Visual,Visual,3492,")\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Ent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3584,usability,error,error,3584,"ets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3599,usability,Custom,Custom,3599,"or MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSemaKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSema.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3884,usability,tool,tools,3884,"m\src\tools\clang\include\clang\Basic\ClangDiagnosticSema.vcxproj]. 	Line 9001: 180>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:3998,usability,Visual,Visual,3998,"ft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4090,usability,error,error,4090,"): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4105,usability,Custom,Custom,4105,"6: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrNodeTraverse.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTraverse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_ar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4369,usability,tool,tools,4369,"ter\llvm\src\tools\clang\include\clang\AST\ClangAttrTraverse.vcxproj]. 	Line 9016: 198>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4473,usability,Visual,Visual,4473,"(x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Vi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4565,usability,error,error,4565,"targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): er",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4580,usability,Custom,Custom,4580," error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommentKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticComment.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Cu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4857,usability,tool,tools,4857,"ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticComment.vcxproj]. 	Line 9023: 196>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:4967,usability,Visual,Visual,4967,"ogram Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5059,usability,error,error,5059,"t.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5074,usability,Custom,Custom,5074,"gets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\DeclNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangDeclNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5358,usability,tool,tools,5358,"lvm\src\tools\clang\include\clang\AST\ClangDeclNodes.vcxproj]. 	Line 9032: 199>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5474,usability,Visual,Visual,5474,"al Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Stud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5566,usability,error,error,5566,"r MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB80",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5581,usability,Custom,Custom,5581,"om build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticASTKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAST.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5874,usability,tool,tools,5874,"clang\Basic\ClangDiagnosticAST.vcxproj]. 	Line 9040: 200>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:5991,usability,Visual,Visual,5991,"se\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6083,usability,error,error,6083," for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6098,usability,Custom,Custom,6098,"uild_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticIndexName.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticIndexName.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6360,usability,tool,tools,6360,"\clang\include\clang\Basic\ClangDiagnosticIndexName.vcxproj]. 	Line 9053: 202>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6466,usability,Visual,Visual,6466,"soft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6558,usability,error,error,6558,",5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6573,usability,Custom,Custom,6573,"066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticRefactoringKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticRefactoring.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6855,usability,tool,tools,6855,"preter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticRefactoring.vcxproj]. 	Line 9054: 70>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:6968,usability,Visual,Visual,6968,"les (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRules",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7060,usability,error,error,7060,"mon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7075,usability,Custom,Custom,7075,",5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\Attrs.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrClasses.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterpri",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7369,usability,tool,tools,7369,"include\clang\AST\ClangAttrClasses.vcxproj]. 	Line 9057: 188>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited wit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7490,usability,Visual,Visual,7490,"se\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7582,usability,error,error,7582," for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7597,usability,Custom,Custom,7597,"uild_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandList.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandList.vcxproj]. 	Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:7917,usability,tool,tools,7917,"Line 9071: 172>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8051,usability,Visual,Visual,8051,"1,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8143,usability,error,error,8143,"741776d7a9de\AttrParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5):",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8158,usability,Custom,Custom,8158,"trParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrParserStringSwitches.vcxproj]. 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8436,usability,tool,tools,8436,". 	Line 9072: 171>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8549,usability,Visual,Visual,8549,"oft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8641,usability,error,error,8641,"les\6f559d892ddeead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8656,usability,Custom,Custom,8656,"eead3c9ee741776d7a9de\AttrSubMatchRulesParserStringSwitches.inc.rule;F:\root\build_arm64ec\CMakeFiles\2eedbb3e784241344f9a80926a6ef0c8\ClangAttrSubMatchRulesParserStringSwitches.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Parse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:8941,usability,tool,tools,8941,"arse\ClangAttrSubMatchRulesParserStringSwitches.vcxproj]. 	Line 9075: 205>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9055,usability,Visual,Visual,9055,"Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9147,usability,error,error,9147,"SB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.Cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9162,usability,Custom,Custom,9162,"build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticGroups.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticGroups.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9454,usability,tool,tools,9454,"lang\Basic\ClangDiagnosticGroups.vcxproj]. 	Line 9087: 194>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9573,usability,Visual,Visual,9573,"se\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Ente",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9665,usability,error,error,9665," for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9680,usability,Custom,Custom,9680,"uild_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCrossTUKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCrossTU.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:9967,usability,tool,tools,9967,"ic\ClangDiagnosticCrossTU.vcxproj]. 	Line 9094: 175>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10081,usability,Visual,Visual,10081,"\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10173,usability,error,error,10173,"or 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10188,usability,Custom,Custom,10188,"ld_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrTemplateInstantiate.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrTemplateInstantiate.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10449,usability,tool,tools,10449,"c\tools\clang\include\clang\Sema\ClangAttrTemplateInstantiate.vcxproj]. 	Line 9100: 197>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\to",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10553,usability,Visual,Visual,10553," (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10645,usability,error,error,10645,".targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.target",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10660,usability,Custom,Custom,10660,": error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticFrontendKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticFrontend.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:10942,usability,tool,tools,10942,"\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticFrontend.vcxproj]. 	Line 9118: 66>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpret",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11055,usability,Visual,Visual,11055," Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11147,usability,error,error,11147,"Common.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.ta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11162,usability,Custom,Custom,11162,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_fp16.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMFP16.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11450,usability,tool,tools,11450,"s\clang\include\clang\Basic\ClangARMFP16.vcxproj]. 	Line 9128: 185>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11566,usability,Visual,Visual,11566,"19\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Micro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11658,usability,error,error,11658,"ustom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11673,usability,Custom,Custom,11673," 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentCommandInfo.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentCommandInfo.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:11957,usability,tool,tools,11957,"e\clang\AST\ClangCommentCommandInfo.vcxproj]. 	Line 9130: 181>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12072,usability,Visual,Visual,12072,"nterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12164,usability,error,error,12164,"m build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12179,usability,Custom,Custom,12179,"\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrSpellingListIndex.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrSpellingListIndex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12461,usability,tool,tools,12461,"clude\clang\Sema\ClangAttrSpellingListIndex.vcxproj]. 	Line 9132: 86>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Bas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12574,usability,Visual,Visual,12574,"io\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12666,usability,error,error,12666,"66: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12681,usability,Custom,Custom,12681,"d for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrKinds.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:12951,usability,tool,tools,12951,"rc\tools\clang\include\clang\Sema\ClangAttrParsedAttrKinds.vcxproj]. 	Line 9136: 170>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13067,usability,Visual,Visual,13067,"t Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13159,usability,error,error,13159,": error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB806",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13174,usability,Custom,Custom,13174,": Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13435,usability,tool,tools,13435,"c\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrList.vcxproj]. 	Line 9143: 80>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13539,usability,Visual,Visual,13539,":\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13631,usability,error,error,13631,"osoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13646,usability,Custom,Custom,13646,".targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHWrite.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHWrite.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:13937,usability,tool,tools,13937,"r\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHWrite.vcxproj]. 	Line 9157: 69>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14058,usability,Visual,Visual,14058,"osoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsof",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14150,usability,error,error,14150,"1,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14165,usability,Custom,Custom,14165,"8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\arm_neon.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangARMNeon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14429,usability,tool,tools,14429,"rc\tools\clang\include\clang\Basic\ClangARMNeon.vcxproj]. 	Line 9164: 183>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14554,usability,Visual,Visual,14554,"\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\P",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14646,usability,error,error,14646,"tom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microso",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14661,usability,Custom,Custom,14661,"F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrSubMatchRulesList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrSubjectMatchRuleList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.ta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:14948,usability,tool,tools,14948,"clude\clang\Basic\ClangAttrSubjectMatchRuleList.vcxproj]. 	Line 9188: 209>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15063,usability,Visual,Visual,15063,"tudio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15155,usability,error,error,15155,"B8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.Cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15170,usability,Custom,Custom,15170,"uild for 'F:\root\build_arm64ec\CMakeFiles\95655041088fd61547dcd5e74800d622\Checkers.inc.rule;F:\root\build_arm64ec\CMakeFiles\38bedda2682832718f5b81a064002c20\ClangSACheckers.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\StaticAnalyzer\Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15467,usability,tool,tools,15467,"Checkers\ClangSACheckers.vcxproj]. 	Line 9197: 191>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15586,usability,Visual,Visual,15586,"ld\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15678,usability,error,error,15678,"\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15693,usability,Custom,Custom,15693,"64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticAnalysisKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticAnalysis.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:15975,usability,tool,tools,15975,"c\ClangDiagnosticAnalysis.vcxproj]. 	Line 9203: 204>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16089,usability,Visual,Visual,16089,"\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16181,usability,error,error,16181,"or 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16196,usability,Custom,Custom,16196,"ld_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticSerializationKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticSerialization.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16473,usability,tool,tools,16473,"ng\include\clang\Basic\ClangDiagnosticSerialization.vcxproj]. 	Line 9210: 84>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16583,usability,Visual,Visual,16583,"Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\20",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16675,usability,error,error,16675,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16690,usability,Custom,Custom,16690,"Custom build for 'F:\root\build_arm64ec\CMakeFiles\239cc089f5d72b3a69539dbbd03b6f7d\AttrParsedAttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\82554326cc443186e10d9ea1a526dc49\ClangAttrParsedAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:16973,usability,tool,tools,16973,"ools\clang\include\clang\Sema\ClangAttrParsedAttrImpl.vcxproj]. 	Line 9214: 201>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17086,usability,Visual,Visual,17086,"Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterpr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17178,usability,error,error,17178,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17193,usability,Custom,Custom,17193,"Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticLexKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticLex.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17463,usability,tool,tools,17463,"vm\src\tools\clang\include\clang\Basic\ClangDiagnosticLex.vcxproj]. 	Line 9229: 192>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17570,usability,Visual,Visual,17570,"Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Ent",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17662,usability,error,error,17662,"s(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17677,usability,Custom,Custom,17677," MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticCommonKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticCommon.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:17953,usability,tool,tools,17953,"rpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticCommon.vcxproj]. 	Line 9238: 190>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18063,usability,Visual,Visual,18063,"les (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBui",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18155,usability,error,error,18155,"mon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18170,usability,Custom,Custom,18170,",5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18444,usability,tool,tools,18444,"preter\llvm\src\tools\clang\include\clang\AST\ClangCommentNodes.vcxproj]. 	Line 9251: 189>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18551,usability,Visual,Visual,18551,"(x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18643,usability,error,error,18643,"targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18658,usability,Custom,Custom,18658," error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTags.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTags.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:18926,usability,tool,tools,18926,"ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTags.vcxproj]. 	Line 9266: 177>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19031,usability,Visual,Visual,19031,"rogram Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\En",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19123,usability,error,error,19123,"ft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19138,usability,Custom,Custom,19138,"rgets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrTextNodeDump.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrTextDump.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19400,usability,tool,tools,19400,"\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrTextDump.vcxproj]. 	Line 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19504,usability,Visual,Visual,19504," 9272: 182>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Vis",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19596,usability,error,error,19596,"VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19611,usability,Custom,Custom,19611,"ft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrVisitor.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrVisitor.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Cus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:19897,usability,tool,tools,19897,"64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrVisitor.vcxproj]. 	Line 9280: 77>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20013,usability,Visual,Visual,20013,"x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\E",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20105,usability,error,error,20105,"argets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20120,usability,Custom,Custom,20120,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrList.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrList.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20388,usability,tool,tools,20388,"llvm\src\tools\clang\include\clang\Basic\ClangAttrList.vcxproj]. 	Line 9296: 68>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20504,usability,Visual,Visual,20504,"ual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20596,usability,error,error,20596,"or MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20611,usability,Custom,Custom,20611,"tom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\AttrHasAttributeImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangAttrHasAttributeImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20888,usability,tool,tools,20888,"m\src\tools\clang\include\clang\Basic\ClangAttrHasAttributeImpl.vcxproj]. 	Line 9298: 85>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:20996,usability,Visual,Visual,20996,"86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21088,usability,error,error,21088,"rgets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21103,usability,Custom,Custom,21103,"rror MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\3f978afa92a6a61ad2c3858389545654\AttrPCHRead.inc.rule;F:\root\build_arm64ec\CMakeFiles\ac032d8a1242d81be06ed00727c1aa19\ClangAttrPCHRead.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21399,usability,tool,tools,21399,"clude\clang\Serialization\ClangAttrPCHRead.vcxproj]. 	Line 9302: 207>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21519,usability,Visual,Visual,21519,"\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21611,usability,error,error,21611,"tom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21626,usability,Custom,Custom,21626,"F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtDataCollectors.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\StmtDataCollectors.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21890,usability,tool,tools,21890,"\clang\include\clang\AST\StmtDataCollectors.vcxproj]. 	Line 9326: 195>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_libdevice_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_math_forward_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:21993,usability,Visual,Visual,21993,"Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_libdevice_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_math_forward_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_runtime_wrapper.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:22085,usability,error,error,22085,"error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_libdevice_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_math_forward_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_runtime_wrapper.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__stddef_max_align_t.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:22100,usability,Custom,Custom,22100,"Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLTagsProperties.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLTagsProperties.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLTagsProperties.vcxproj]. 	Line 9341: 208>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\StmtNodes.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangStmtNodes.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangStmtNodes.vcxproj]. 	Line 9348: 55>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_builtin_vars.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_cmath.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_complex_builtins.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_device_functions.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_intrinsics.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_libdevice_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_math_forward_declares.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__clang_cuda_runtime_wrapper.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__stddef_max_align_t.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__wmmintrin_aes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24035,usability,Visual,Visual,24035,"64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__wmmintrin_aes.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__wmmintrin_pclmul.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\adxintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\altivec.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -107374181",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24127,usability,error,error,24127,"c\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\__wmmintrin_pclmul.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\adxintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\altivec.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24142,usability,Custom,Custom,24142,"00d7a9e42af811ea95db684c5be22d\__wmmintrin_pclmul.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\adxintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\altivec.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24423,usability,tool,tools,24423,"be22d\ammintrin.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm64intr.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24534,usability,Visual,Visual,24534,"ot\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_acle.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24626,usability,error,error,24626,"rm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:24641,usability,Custom,Custom,24641,"es\4b96ded377c0f660940fa6878be7fd91\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_fp16.h.rule;F:\root\build_arm64ec\CMakeFiles\4b96ded377c0f660940fa6878be7fd91\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7a9e42af811ea95db684c5be22d\arm_neon.h.rule;F:\root\build_arm64ec\CMakeFiles\bf00d7 ... 	Line 9558: 206>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25175,usability,Visual,Visual,25175,"4ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticParseKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25267,usability,error,error,25267,"arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Mi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25282,usability,Custom,Custom,25282,"les\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticParse.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticParse.vcxproj]. 	Line 9566: 42>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25565,usability,tool,tools,25565,"ild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25678,usability,Visual,Visual,25678,"CMakeFiles\36db1ad972924b5160bfac1c19950df0\Attributes.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25770,usability,error,error,25770,"iles\36db1ad972924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:25785,usability,Custom,Custom,25785,"924b5160bfac1c19950df0\IntrinsicEnums.inc.rule;F:\root\build_arm64ec\CMakeFiles\36db1ad972924b5160bfac1c19950df0\IntrinsicImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\fa484ff1296672512bd1255e975a73a4\intrinsics_gen.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\include\llvm\IR\intrinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26101,usability,tool,tools,26101,"rinsics_gen.vcxproj]. 	Line 9634: 193>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Dr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26230,usability,Visual,Visual,26230,"crosoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/101020",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26322,usability,error,error,26322,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26337,usability,Custom,Custom,26337,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26599,usability,tool,tools,26599,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26703,usability,Visual,Visual,26703,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26795,usability,error,error,26795,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:26810,usability,Custom,Custom,26810,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27076,usability,tool,tools,27076,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/issues/11787:27145,usability,Error,Error,27145,"241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b04d8333b5c039b823a8aff01d40cf91\DiagnosticDriverKinds.inc.rule;F:\root\build_arm64ec\CMakeFiles\b7ee079947e4abdf24e97017e83e6e49\ClangDiagnosticDriver.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Basic\ClangDiagnosticDriver.vcxproj]. 	Line 9722: 187>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\CommentHTMLNamedCharacterReferences.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangCommentHTMLNamedCharacterReferences.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangCommentHTMLNamedCharacterReferences.vcxproj]. 	Line 9730: 71>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\dbefbc0a2a22685c1829aceb789a78f5\AttrImpl.inc.rule;F:\root\build_arm64ec\CMakeFiles\048ff17cb9d0ac78b7b28ec5748a1abe\ClangAttrImpl.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\AST\ClangAttrImpl.vcxproj]. 	Line 10436: 167>C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(241,5): error MSB8066: Custom build for 'F:\root\build_arm64ec\CMakeFiles\b12b2d84b1adefd629d4fa9259f4b17e\Options.inc.rule;F:\root\build_arm64ec\CMakeFiles\69e845e76a17fe07436e39f1ec5645da\ClangDriverOptions.rule' exited with code -1073741819. [F:\root\build_arm64ec\interpreter\llvm\src\tools\clang\include\clang\Driver\ClangDriverOptions.vcxproj]. ```. **Error log:**. [ROOT_msbuild_error.log](https://github.com/root-project/root/files/10102082/ROOT_msbuild_error.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11787
https://github.com/root-project/root/pull/11788:409,deployability,updat,updated,409,"[Geom] Skip overlap checking if a partner is a tessellated shape.; Fixes #11784. # This Pull request:. Fixes a bug in overlap checking. ## Changes or fixes:. Tessellated shapes cannot be used for overlap checking, because they do not provide navigation functionality. This PR skips checks when one of the two shapes potentially overlapping is a tesselation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11784 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11788
https://github.com/root-project/root/pull/11788:379,safety,test,tested,379,"[Geom] Skip overlap checking if a partner is a tessellated shape.; Fixes #11784. # This Pull request:. Fixes a bug in overlap checking. ## Changes or fixes:. Tessellated shapes cannot be used for overlap checking, because they do not provide navigation functionality. This PR skips checks when one of the two shapes potentially overlapping is a tesselation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11784 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11788
https://github.com/root-project/root/pull/11788:409,safety,updat,updated,409,"[Geom] Skip overlap checking if a partner is a tessellated shape.; Fixes #11784. # This Pull request:. Fixes a bug in overlap checking. ## Changes or fixes:. Tessellated shapes cannot be used for overlap checking, because they do not provide navigation functionality. This PR skips checks when one of the two shapes potentially overlapping is a tesselation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11784 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11788
https://github.com/root-project/root/pull/11788:409,security,updat,updated,409,"[Geom] Skip overlap checking if a partner is a tessellated shape.; Fixes #11784. # This Pull request:. Fixes a bug in overlap checking. ## Changes or fixes:. Tessellated shapes cannot be used for overlap checking, because they do not provide navigation functionality. This PR skips checks when one of the two shapes potentially overlapping is a tesselation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11784 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11788
https://github.com/root-project/root/pull/11788:379,testability,test,tested,379,"[Geom] Skip overlap checking if a partner is a tessellated shape.; Fixes #11784. # This Pull request:. Fixes a bug in overlap checking. ## Changes or fixes:. Tessellated shapes cannot be used for overlap checking, because they do not provide navigation functionality. This PR skips checks when one of the two shapes potentially overlapping is a tesselation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11784 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11788
https://github.com/root-project/root/pull/11788:242,usability,navigat,navigation,242,"[Geom] Skip overlap checking if a partner is a tessellated shape.; Fixes #11784. # This Pull request:. Fixes a bug in overlap checking. ## Changes or fixes:. Tessellated shapes cannot be used for overlap checking, because they do not provide navigation functionality. This PR skips checks when one of the two shapes potentially overlapping is a tesselation. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes #11784 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11788
https://github.com/root-project/root/pull/11789:750,availability,error,error,750,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:226,deployability,patch,patch,226,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:295,deployability,automat,automatically,295,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:808,deployability,updat,updated,808,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:623,integrability,sub,subsequent,623,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:24,performance,lock,locking,24,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:66,performance,lock,lock,66,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:135,performance,Lock,LockDefaultUnits,135,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:284,performance,lock,locks,284,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:700,performance,Lock,LockDefautUnits,700,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:750,performance,error,error,750,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:226,safety,patch,patch,226,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:750,safety,error,error,750,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:778,safety,test,tested,778,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:808,safety,updat,updated,808,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:24,security,lock,locking,24,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:66,security,lock,lock,66,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:135,security,Lock,LockDefaultUnits,135,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:226,security,patch,patch,226,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:284,security,lock,locks,284,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:700,security,Lock,LockDefautUnits,700,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:808,security,updat,updated,808,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:40,testability,unit,units,40,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:75,testability,unit,units,75,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:252,testability,unit,units,252,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:295,testability,automat,automatically,295,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:656,testability,unit,units,656,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:778,testability,test,tested,778,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:11,usability,behavi,behaviour,11,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:113,usability,user,user,113,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:396,usability,behavi,behavior,396,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11789:750,usability,error,error,750,"[Geom] Fix behaviour of locking default units; The default was to lock the units by default, but this forced the user to unlocking via LockDefaultUnits(false) even if no geometry was created, otherwise a Fatal was issued. The patch allows changing the units once in the beginning and locks them automatically upon the definition of any element/material. # This Pull request:. Fixes an unintended behavior. ## Changes or fixes:. The static flag `gGeometryLocked` is now set to false by default, and changed to true upon the first invocation of SetDefaultUnits, which all element/material constructors call. As a result, any subsequent attempt to change the units must be made by manual unlocking via `LockDefautUnits(false)`, or it will issue a fatal error. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11789
https://github.com/root-project/root/pull/11790:7,deployability,Updat,Update,7,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:43,deployability,version,version,43,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:164,deployability,version,versions,164,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:297,deployability,updat,updated,297,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:43,integrability,version,version,43,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:164,integrability,version,versions,164,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:43,modifiability,version,version,43,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:164,modifiability,version,versions,164,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:7,safety,Updat,Update,7,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:267,safety,test,tested,267,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:297,safety,updat,updated,297,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:409,safety,test,test,409,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:7,security,Updat,Update,7,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:297,security,updat,updated,297,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:267,testability,test,tested,267,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11790:409,testability,test,test,409,"[Geom] Update VecGeom header paths to post version 1.2.; This follows the folder restructuring done in VecGeom 1.2, allowing the TGeoVGConverter to work with newer versions. Partially addresses #11271. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR partially addresses #11271, missing for the moment the TGeoVGconverter test .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11790
https://github.com/root-project/root/pull/11791:742,availability,avail,available,742,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:22,deployability,log,logging,22,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:186,deployability,contain,contains,186,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:586,deployability,log,log,586,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:771,deployability,log,log,771,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:893,deployability,log,logging,893,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1071,deployability,log,logged,1071,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1341,deployability,updat,updated,1341,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:98,energy efficiency,Heat,HeatmapAnalyzer,98,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:530,energy efficiency,Heat,HeatmapAnalyzer,530,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:623,energy efficiency,heat,heatmap,623,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:553,integrability,translat,translates,553,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:866,integrability,interfac,interface,866,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:425,interoperability,format,format,425,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:485,interoperability,specif,specified,485,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:553,interoperability,translat,translates,553,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:590,interoperability,format,format,590,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:866,interoperability,interfac,interface,866,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:866,modifiability,interfac,interface,866,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1018,modifiability,variab,variable,1018,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:301,performance,time,timers,301,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:612,performance,time,timer,612,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:742,reliability,availab,available,742,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:22,safety,log,logging,22,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:77,safety,Test,TestStatistics,77,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:586,safety,log,log,586,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:742,safety,avail,available,742,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:771,safety,log,log,771,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:810,safety,Test,Tests,810,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:893,safety,log,logging,893,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1071,safety,log,logged,1071,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1268,safety,Test,TestStatistics,1268,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1311,safety,test,tested,1311,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1341,safety,updat,updated,1341,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:22,security,log,logging,22,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:374,security,ident,identifier,374,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:586,security,log,log,586,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:742,security,availab,available,742,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:771,security,log,log,771,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:893,security,log,logging,893,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1042,security,control,controls,1042,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1071,security,log,logged,1071,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1341,security,updat,updated,1341,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:22,testability,log,logging,22,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:77,testability,Test,TestStatistics,77,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:586,testability,log,log,586,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:771,testability,log,log,771,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:810,testability,Test,Tests,810,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:893,testability,log,logging,893,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1042,testability,control,controls,1042,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1071,testability,log,logged,1071,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1268,testability,Test,TestStatistics,1268,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:1311,testability,test,tested,1311,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11791:344,usability,stop,stopped,344,"[RF] ProcessTimer for logging timings in `RooFit::MultiProcess` and `RooFit::TestStatistics`, and HeatmapAnalyzer for analysing them; # This Pull request:. ## Changes or fixes:. This MR contains mostly two classes: . - `RooFit::MultiProcess::ProcessTimer` which keeps a set of potentially overlapping timers per process that can be started and stopped by referring to their identifier string. Timings are written out in json format. Some extra functionality is added to write out at a specified interval. - `RooFit::MultiProcess::HeatmapAnalyzer` which translates the timings output in log format by the process timer to a heatmap which it can return in the form of a TH2I with the correctly labeled x and y axes. Some extra functionality is available for inspecting the log files and retrieving its metadata. Tests are included for both classes. Note that also the interface to enable timing logging is included in the `RooMinimizer::Config` object which can be given to the RooMinimizer and on RooAbsPdf::fitTo. The variable that centrally controls whether timings are logged or not is `RooMinimizer::Config::logTimings_`. . Also, an initial timing setup is included, with some `ProcessTimer::start_timer` and `ProcessTimer::end_timer` calls throughout the `RooFit::TestStatistics` code. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11791
https://github.com/root-project/root/pull/11792:206,energy efficiency,draw,drawing,206,"[rbrowser] Fix handling of RNTuple and sub-directories; Fix introduced recently bug which broke handling of subdirectories and RNTuple. Provide ""Divide"" method for TCanvas, use in `RBrowser` active pad for drawing. . It is convenient method to display many objects at the same time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11792
https://github.com/root-project/root/pull/11792:39,integrability,sub,sub-directories,39,"[rbrowser] Fix handling of RNTuple and sub-directories; Fix introduced recently bug which broke handling of subdirectories and RNTuple. Provide ""Divide"" method for TCanvas, use in `RBrowser` active pad for drawing. . It is convenient method to display many objects at the same time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11792
https://github.com/root-project/root/pull/11792:108,integrability,sub,subdirectories,108,"[rbrowser] Fix handling of RNTuple and sub-directories; Fix introduced recently bug which broke handling of subdirectories and RNTuple. Provide ""Divide"" method for TCanvas, use in `RBrowser` active pad for drawing. . It is convenient method to display many objects at the same time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11792
https://github.com/root-project/root/pull/11792:277,performance,time,time,277,"[rbrowser] Fix handling of RNTuple and sub-directories; Fix introduced recently bug which broke handling of subdirectories and RNTuple. Provide ""Divide"" method for TCanvas, use in `RBrowser` active pad for drawing. . It is convenient method to display many objects at the same time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11792
https://github.com/root-project/root/pull/11793:188,deployability,continu,continues,188,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:244,deployability,depend,depend,244,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:244,integrability,depend,depend,244,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:5,modifiability,Refact,Refactor,5,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:244,modifiability,depend,depend,244,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:5,performance,Refactor,Refactor,5,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:72,performance,memor,memory,72,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:15,safety,test,testLikelihoodGradientJob,15,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:86,safety,avoid,avoid,86,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:137,safety,test,test,137,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:238,safety,test,tests,238,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:244,safety,depend,depend,244,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:15,testability,test,testLikelihoodGradientJob,15,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:113,testability,simul,simultaneous,113,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:137,testability,test,test,137,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:238,testability,test,tests,238,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:244,testability,depend,depend,244,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11793:72,usability,memor,memory,72,"[RF] Refactor `testLikelihoodGradientJob.cxx`; Get rid of the remaining memory leaks, avoid code duplication for simultaneous binned fit test, etc. There is also an additional commit that continues the campaign of making the `roofitcore` tests depend less on `roofit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11793
https://github.com/root-project/root/pull/11794:279,deployability,releas,releasing,279,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:170,energy efficiency,core,core,170,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:298,performance,lock,lock,298,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:324,performance,lock,lock,324,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:444,performance,lock,lock,444,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:572,performance,perform,performance,572,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:850,performance,perform,performance,850,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:957,performance,lock,lock,957,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:685,reliability,doe,does,685,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:820,reliability,doe,does,820,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:1133,reliability,doe,does,1133,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:298,security,lock,lock,298,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:324,security,lock,lock,324,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:374,security,hash,hash,374,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:444,security,lock,lock,444,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:584,security,loss,loss,584,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:957,security,lock,lock,957,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:572,usability,perform,performance,572,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:850,usability,perform,performance,850,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11794:1197,usability,statu,status,1197,"RConcurrentHashColl: remove unused (internal) function; As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62. > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11794
https://github.com/root-project/root/pull/11795:308,interoperability,mismatch,mismatch,308,"[DF] Fix default columns for Snapshot result; The RDF returned by a Snapshot action comes with a default column list that corresponds to the names of the columns that have been snapshotted. This is a fairly obscure feature which probably does not get much use, but in the case of aliased columns there was a mismatch: in the snapshotted file columns would retain the alias, while in the default column list the _resolved alias_ (i.e. the original column name) would be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11795
https://github.com/root-project/root/pull/11795:238,reliability,doe,does,238,"[DF] Fix default columns for Snapshot result; The RDF returned by a Snapshot action comes with a default column list that corresponds to the names of the columns that have been snapshotted. This is a fairly obscure feature which probably does not get much use, but in the case of aliased columns there was a mismatch: in the snapshotted file columns would retain the alias, while in the default column list the _resolved alias_ (i.e. the original column name) would be used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11795
https://github.com/root-project/root/pull/11796:31,energy efficiency,draw,drawing,31,[webcanvas] Fix TH2 projection drawing [skip-ci]; Also exclude multiple import of JSROOT functionality for such side panel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11796
https://github.com/root-project/root/issues/11797:1819,availability,error,error,1819,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:10,deployability,Depend,Dependency,10,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:139,deployability,depend,dependency,139,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:283,deployability,depend,dependency,283,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:395,deployability,depend,depends,395,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:721,deployability,depend,dependency,721,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:841,deployability,configurat,configuration,841,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1003,deployability,depend,depends,1003,"ct Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where curre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1294,deployability,instal,installed,1294,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1324,deployability,configurat,configuration,1324,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1504,deployability,VERSION,VERSION,1504,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1979,deployability,build,builds,1979,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:2002,energy efficiency,current,currently,2002,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:10,integrability,Depend,Dependency,10,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:139,integrability,depend,dependency,139,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:283,integrability,depend,dependency,283,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:385,integrability,pub,publicly,385,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:395,integrability,depend,depends,395,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:721,integrability,depend,dependency,721,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:841,integrability,configur,configuration,841,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1003,integrability,depend,depends,1003,"ct Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where curre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1324,integrability,configur,configuration,1324,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1504,integrability,VERSION,VERSION,1504,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:10,modifiability,Depend,Dependency,10,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:139,modifiability,depend,dependency,139,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:283,modifiability,depend,dependency,283,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:395,modifiability,depend,depends,395,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:721,modifiability,depend,dependency,721,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:841,modifiability,configur,configuration,841,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1003,modifiability,depend,depends,1003,"ct Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where curre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1324,modifiability,configur,configuration,1324,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1504,modifiability,VERSION,VERSION,1504,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1819,performance,error,error,1819,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:326,reliability,doe,does,326,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:10,safety,Depend,Dependency,10,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:139,safety,depend,dependency,139,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:283,safety,depend,dependency,283,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:395,safety,depend,depends,395,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:721,safety,depend,dependency,721,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1003,safety,depend,depends,1003,"ct Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where curre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1819,safety,error,error,1819,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:2211,safety,compl,complaining,2211,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:841,security,configur,configuration,841,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1324,security,configur,configuration,1324,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:2211,security,compl,complaining,2211,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:10,testability,Depend,Dependency,10,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:139,testability,depend,dependency,139,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:283,testability,depend,dependency,283,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:395,testability,depend,depends,395,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:721,testability,depend,dependency,721,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1003,testability,depend,depends,1003,"ct Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where curre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1695,testability,simpl,simple,1695,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:2156,testability,context,context,2156,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:376,usability,clear,clearly,376,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:518,usability,behavi,behavior,518,"Incorrect Dependency on VDT; - [x] Checked for duplicates. ### Describe the bug. The `ROOTVecOps` library incorrectly declares a `PRIVATE` dependency on the VDT headers. https://github.com/root-project/root/blob/master/math/vecops/CMakeLists.txt#L27. (To be correct, it declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Wher",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1695,usability,simpl,simple,1695,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/issues/11797:1819,usability,error,error,1819,"declares its dependency on VDT in a very silly way that does not make any sense to me...). Even though it clearly ""publicly"" depends on those headers. https://github.com/root-project/root/blob/master/math/vecops/inc/ROOT/RVec.hxx#L54. ### Expected behavior. When using the exported target `ROOT::ROOTVecOps`, I would expect to be able to use `RVec.hxx` just by linking my own target against `ROOT::ROOTVecOps`. Not having to care about the ""internal"" dependency of the ROOT code on VDT myself. To fix, the following should happen:. - VDT should be used in the ROOT CMake configuration through an imported target, not through `${VDT_INCLUDE_DIRS}` and `${VDT_LIBRARIES}`. (Since these make relocation very hard.). - Once `ROOTVecOps` depends on a library like `VDT::vdt`, `ROOTConfig.cmake.in` will need to include. ```cmake. find_dependency(VDT). ```. somewhere around here: https://github.com/root-project/root/blob/master/cmake/scripts/ROOTConfig.cmake.in#L88-L99. In such a setup, as long as `builtin_vdt` is ""correctly"" installed alongside ROOT, the configuration should start becoming correct under all circumstances. ### To Reproduce. Don't really have a reproducer. But a CMake project like:. ```cmake. cmake_minimum_required( VERSION 3.10 ). project( VecOpsTest ). find_package( ROOT REQUIRED ). add_executable( VecOpsTest VecOpsText.cpp ). target_link_libraries( VecOpsTest PRIVATE ROOT::ROOTVecOps ). ```. , with a simple. ```c++. #include <ROOT/RVec.hxx>. int main() { return 0; }. ```. (as `VecOpsTest.cpp`) should be able to produce an error. As long as ROOT and VDT headers are not in the same location. Which is usually the case unfortunately... ### Setup. This is primarily an issue with ""LCG builds"" of ROOT. Where currently we have to manually take care of linking our code explicitly against VDT, even if we don't use those headers directly ourselves. ### Additional context. The report was triggered by an ATLAS analyser complaining about this issue, with their own analysis code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11797
https://github.com/root-project/root/pull/11798:184,energy efficiency,model,model,184,"[DF] Remove unnecessary weak ptr from ReportHelper; The weak pointer was used to track whether the node that Report was hanging from went out of scope, but since a while the ownership model of nodes in the computation graph (child owns parent) guarantees that as long as the ReportHelper (and the corresponding action node) is around, the node it hangs from will be around as well. We can use a simple raw pointer instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11798
https://github.com/root-project/root/pull/11798:184,security,model,model,184,"[DF] Remove unnecessary weak ptr from ReportHelper; The weak pointer was used to track whether the node that Report was hanging from went out of scope, but since a while the ownership model of nodes in the computation graph (child owns parent) guarantees that as long as the ReportHelper (and the corresponding action node) is around, the node it hangs from will be around as well. We can use a simple raw pointer instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11798
https://github.com/root-project/root/pull/11798:395,testability,simpl,simple,395,"[DF] Remove unnecessary weak ptr from ReportHelper; The weak pointer was used to track whether the node that Report was hanging from went out of scope, but since a while the ownership model of nodes in the computation graph (child owns parent) guarantees that as long as the ReportHelper (and the corresponding action node) is around, the node it hangs from will be around as well. We can use a simple raw pointer instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11798
https://github.com/root-project/root/pull/11798:395,usability,simpl,simple,395,"[DF] Remove unnecessary weak ptr from ReportHelper; The weak pointer was used to track whether the node that Report was hanging from went out of scope, but since a while the ownership model of nodes in the computation graph (child owns parent) guarantees that as long as the ReportHelper (and the corresponding action node) is around, the node it hangs from will be around as well. We can use a simple raw pointer instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11798
https://github.com/root-project/root/pull/11799:140,security,iso,isocpp,140,[DF] Do not mark data members as const; It's an anti-pattern that introduces extra copies when moving from these objects. See also. https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c12-dont-make-data-members-const-or-references .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11799
https://github.com/root-project/root/issues/11800:288,integrability,event,events,288,"[TTree] Print() does not show certain branches are arrays; As per the title. In the following file e.g. `electron_e` is an array but it is displayed as:. ```. Br 2 :electron_e : electron_e/F . ```. instead of, say,. ```. Br 2 :electron_e : electron_e[nelectron_e]/F . ```. The output of `events->Print()`:. ```. root [3] events->Print(). ******************************************************************************. *Tree :events : *. *Entries : 49106 : Total = 96779780 bytes File Size = 52279652 *. * : : Tree compression factor = 1.85 *. ******************************************************************************. *Br 0 :numberelectron : numberelectron/I *. *Entries : 49106 : Total Size= 197028 bytes File Size = 23035 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 1 :nelectron_e : nelectron_e/I *. *Entries : 49106 : Total Size= 197013 bytes File Size = 23032 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 2 :electron_e : electron_e/F *. *Entries : 49106 : Total Size= 275526 bytes File Size = 106009 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 2.59 *. *............................................................................*. *Br 3 :nelectron_pt : nelectron_pt/I *. *Entries : 49106 : Total Size= 197018 bytes File Size = 23033 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 4 :electron_pt : electron_pt/F *. *Entries : 49106 : Total Size= 275534 bytes File Size = 105280 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 2.61 *. *............................................................................*. *Br 5 :nelectron_px : nelectron_px/I *. *Entries : 49106 : Total Size= 197018 bytes File Size = 23033 *. *Baskets : 1 : Basket Size= 32000 bytes Comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11800
https://github.com/root-project/root/issues/11800:321,integrability,event,events,321,"[TTree] Print() does not show certain branches are arrays; As per the title. In the following file e.g. `electron_e` is an array but it is displayed as:. ```. Br 2 :electron_e : electron_e/F . ```. instead of, say,. ```. Br 2 :electron_e : electron_e[nelectron_e]/F . ```. The output of `events->Print()`:. ```. root [3] events->Print(). ******************************************************************************. *Tree :events : *. *Entries : 49106 : Total = 96779780 bytes File Size = 52279652 *. * : : Tree compression factor = 1.85 *. ******************************************************************************. *Br 0 :numberelectron : numberelectron/I *. *Entries : 49106 : Total Size= 197028 bytes File Size = 23035 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 1 :nelectron_e : nelectron_e/I *. *Entries : 49106 : Total Size= 197013 bytes File Size = 23032 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 2 :electron_e : electron_e/F *. *Entries : 49106 : Total Size= 275526 bytes File Size = 106009 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 2.59 *. *............................................................................*. *Br 3 :nelectron_pt : nelectron_pt/I *. *Entries : 49106 : Total Size= 197018 bytes File Size = 23033 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 4 :electron_pt : electron_pt/F *. *Entries : 49106 : Total Size= 275534 bytes File Size = 105280 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 2.61 *. *............................................................................*. *Br 5 :nelectron_px : nelectron_px/I *. *Entries : 49106 : Total Size= 197018 bytes File Size = 23033 *. *Baskets : 1 : Basket Size= 32000 bytes Comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11800
https://github.com/root-project/root/issues/11800:425,integrability,event,events,425,"[TTree] Print() does not show certain branches are arrays; As per the title. In the following file e.g. `electron_e` is an array but it is displayed as:. ```. Br 2 :electron_e : electron_e/F . ```. instead of, say,. ```. Br 2 :electron_e : electron_e[nelectron_e]/F . ```. The output of `events->Print()`:. ```. root [3] events->Print(). ******************************************************************************. *Tree :events : *. *Entries : 49106 : Total = 96779780 bytes File Size = 52279652 *. * : : Tree compression factor = 1.85 *. ******************************************************************************. *Br 0 :numberelectron : numberelectron/I *. *Entries : 49106 : Total Size= 197028 bytes File Size = 23035 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 1 :nelectron_e : nelectron_e/I *. *Entries : 49106 : Total Size= 197013 bytes File Size = 23032 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 2 :electron_e : electron_e/F *. *Entries : 49106 : Total Size= 275526 bytes File Size = 106009 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 2.59 *. *............................................................................*. *Br 3 :nelectron_pt : nelectron_pt/I *. *Entries : 49106 : Total Size= 197018 bytes File Size = 23033 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 4 :electron_pt : electron_pt/F *. *Entries : 49106 : Total Size= 275534 bytes File Size = 105280 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 2.61 *. *............................................................................*. *Br 5 :nelectron_px : nelectron_px/I *. *Entries : 49106 : Total Size= 197018 bytes File Size = 23033 *. *Baskets : 1 : Basket Size= 32000 bytes Comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11800
https://github.com/root-project/root/issues/11800:16,reliability,doe,does,16,"[TTree] Print() does not show certain branches are arrays; As per the title. In the following file e.g. `electron_e` is an array but it is displayed as:. ```. Br 2 :electron_e : electron_e/F . ```. instead of, say,. ```. Br 2 :electron_e : electron_e[nelectron_e]/F . ```. The output of `events->Print()`:. ```. root [3] events->Print(). ******************************************************************************. *Tree :events : *. *Entries : 49106 : Total = 96779780 bytes File Size = 52279652 *. * : : Tree compression factor = 1.85 *. ******************************************************************************. *Br 0 :numberelectron : numberelectron/I *. *Entries : 49106 : Total Size= 197028 bytes File Size = 23035 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 1 :nelectron_e : nelectron_e/I *. *Entries : 49106 : Total Size= 197013 bytes File Size = 23032 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 2 :electron_e : electron_e/F *. *Entries : 49106 : Total Size= 275526 bytes File Size = 106009 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 2.59 *. *............................................................................*. *Br 3 :nelectron_pt : nelectron_pt/I *. *Entries : 49106 : Total Size= 197018 bytes File Size = 23033 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 8.53 *. *............................................................................*. *Br 4 :electron_pt : electron_pt/F *. *Entries : 49106 : Total Size= 275534 bytes File Size = 105280 *. *Baskets : 1 : Basket Size= 32000 bytes Compression= 2.61 *. *............................................................................*. *Br 5 :nelectron_px : nelectron_px/I *. *Entries : 49106 : Total Size= 197018 bytes File Size = 23033 *. *Baskets : 1 : Basket Size= 32000 bytes Comp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11800
https://github.com/root-project/root/pull/11801:349,deployability,automat,automatic,349,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:779,deployability,updat,updated,779,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:329,integrability,schema,schema,329,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:414,interoperability,incompatib,incompatibilities,414,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:749,safety,test,tested,749,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:779,safety,updat,updated,779,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:779,security,updat,updated,779,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:50,testability,unit,unit,50,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:121,testability,unit,units,121,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:188,testability,unit,units,188,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:261,testability,unit,unit,261,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:298,testability,unit,unit,298,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:349,testability,automat,automatic,349,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:539,testability,unit,unit,539,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:625,testability,unit,units,625,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:701,testability,unit,units,701,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:749,testability,test,tested,749,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:438,usability,close,closes,438,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11801:707,usability,support,supported,707,"[Geom] GDML parser warns about entities missing a unit definition.; In case TGeoManager is set to work with default ROOT units [cm,deg] and the GDML parser reads entities missing explicit units, it issues now a warning. This is due to the fact that the default unit in this case will not match the unit types defined in the GDML schema [mm,rad]. An automatic fix cannot be done because it would introduce backward incompatibilities. This closes #11781. # This Pull request:. Produces warnings for GDML files with entities missing explicit unit declaration. ## Changes or fixes:. The number of entities missing declaration of units is reported. The warning proposes the alternative fix of using Geant4 units supported by TGeo. . ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR addresses #11781 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11801
https://github.com/root-project/root/pull/11802:239,deployability,updat,updated,239,[RF] MultiProcess test_Queue.cxx compile warning fix; # This Pull request:. ## Changes or fixes:. #11627 still had minor compile warnings from wrong printf formatting. This PR fixes that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11802
https://github.com/root-project/root/pull/11802:156,interoperability,format,formatting,156,[RF] MultiProcess test_Queue.cxx compile warning fix; # This Pull request:. ## Changes or fixes:. #11627 still had minor compile warnings from wrong printf formatting. This PR fixes that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11802
https://github.com/root-project/root/pull/11802:209,safety,test,tested,209,[RF] MultiProcess test_Queue.cxx compile warning fix; # This Pull request:. ## Changes or fixes:. #11627 still had minor compile warnings from wrong printf formatting. This PR fixes that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11802
https://github.com/root-project/root/pull/11802:239,safety,updat,updated,239,[RF] MultiProcess test_Queue.cxx compile warning fix; # This Pull request:. ## Changes or fixes:. #11627 still had minor compile warnings from wrong printf formatting. This PR fixes that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11802
https://github.com/root-project/root/pull/11802:239,security,updat,updated,239,[RF] MultiProcess test_Queue.cxx compile warning fix; # This Pull request:. ## Changes or fixes:. #11627 still had minor compile warnings from wrong printf formatting. This PR fixes that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11802
https://github.com/root-project/root/pull/11802:209,testability,test,tested,209,[RF] MultiProcess test_Queue.cxx compile warning fix; # This Pull request:. ## Changes or fixes:. #11627 still had minor compile warnings from wrong printf formatting. This PR fixes that. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11802
https://github.com/root-project/root/pull/11803:214,deployability,observ,observed,214,"[cling] Create non-empty source file; LLVM currently has an issue that a completely empty source file is stored as a `nullptr`, but `DIFile::getSource()` does not correctly deal with this situation. A crash can be observed if just attempting to launch root.exe with `EXTRA_CLING_ARGS=""-gdwarf-5 -gembed-source""`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11803
https://github.com/root-project/root/pull/11803:43,energy efficiency,current,currently,43,"[cling] Create non-empty source file; LLVM currently has an issue that a completely empty source file is stored as a `nullptr`, but `DIFile::getSource()` does not correctly deal with this situation. A crash can be observed if just attempting to launch root.exe with `EXTRA_CLING_ARGS=""-gdwarf-5 -gembed-source""`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11803
https://github.com/root-project/root/pull/11803:154,reliability,doe,does,154,"[cling] Create non-empty source file; LLVM currently has an issue that a completely empty source file is stored as a `nullptr`, but `DIFile::getSource()` does not correctly deal with this situation. A crash can be observed if just attempting to launch root.exe with `EXTRA_CLING_ARGS=""-gdwarf-5 -gembed-source""`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11803
https://github.com/root-project/root/pull/11803:73,safety,compl,completely,73,"[cling] Create non-empty source file; LLVM currently has an issue that a completely empty source file is stored as a `nullptr`, but `DIFile::getSource()` does not correctly deal with this situation. A crash can be observed if just attempting to launch root.exe with `EXTRA_CLING_ARGS=""-gdwarf-5 -gembed-source""`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11803
https://github.com/root-project/root/pull/11803:73,security,compl,completely,73,"[cling] Create non-empty source file; LLVM currently has an issue that a completely empty source file is stored as a `nullptr`, but `DIFile::getSource()` does not correctly deal with this situation. A crash can be observed if just attempting to launch root.exe with `EXTRA_CLING_ARGS=""-gdwarf-5 -gembed-source""`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11803
https://github.com/root-project/root/pull/11803:214,testability,observ,observed,214,"[cling] Create non-empty source file; LLVM currently has an issue that a completely empty source file is stored as a `nullptr`, but `DIFile::getSource()` does not correctly deal with this situation. A crash can be observed if just attempting to launch root.exe with `EXTRA_CLING_ARGS=""-gdwarf-5 -gembed-source""`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11803
https://github.com/root-project/root/pull/11804:34,deployability,manag,management,34,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:168,deployability,observ,observable,168,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:265,deployability,contain,contain,265,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:339,deployability,observ,observables,339,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:34,energy efficiency,manag,management,34,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:24,modifiability,paramet,parameter,24,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:207,modifiability,paramet,parameter,207,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:289,modifiability,paramet,parameters,289,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:224,reliability,doe,doesn,224,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:34,safety,manag,management,34,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:122,safety,test,test,122,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:131,safety,test,testLikelihoodGradientJob,131,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:117,testability,unit,unit,117,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:122,testability,test,test,122,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:131,testability,test,testLikelihoodGradientJob,131,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:168,testability,observ,observable,168,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11804:339,testability,observ,observables,339,"[RF] Improve constraint parameter management; The `Constrain()` and `GlobalObservables()` arguments were wrong in a. unit test in `testLikelihoodGradientJob`: a global observable was added. as a constrained parameter, which doesn't make sense. `Constrain()` should contain the constrained parameters, and. `GlobalObservables()` the global observables.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11804
https://github.com/root-project/root/pull/11805:10,integrability,coupl,couple,10,Replace a couple of long by intptr_t; Replace casting of pointers to long that cannot work on Windows 64 bit (where pointers are 64 bit and long 32 bit),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11805
https://github.com/root-project/root/pull/11805:10,modifiability,coupl,couple,10,Replace a couple of long by intptr_t; Replace casting of pointers to long that cannot work on Windows 64 bit (where pointers are 64 bit and long 32 bit),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11805
https://github.com/root-project/root/pull/11805:10,testability,coupl,couple,10,Replace a couple of long by intptr_t; Replace casting of pointers to long that cannot work on Windows 64 bit (where pointers are 64 bit and long 32 bit),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11805
https://github.com/root-project/root/issues/11806:392,availability,state,statements,392,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:392,integrability,state,statements,392,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:11,interoperability,bind,bindings,11,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:242,interoperability,bind,bindings,242,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:268,interoperability,coordinat,coordinates,268,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:621,interoperability,coordinat,coordinates,621,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:703,interoperability,share,share,703,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:11,modifiability,bind,bindings,11,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:242,modifiability,bind,bindings,242,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:601,security,access,accessing,601,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:505,testability,assert,assert,505,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:522,testability,assert,assert,522,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:546,testability,understand,understand,546,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:212,usability,help,helpful,212,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:223,usability,support,support,223,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:589,usability,help,helpful,589,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/issues/11806:990,usability,help,helping,990,"Structured bindings for vectors; ### Explain what you would like to see improved. For vector-like constructs (`TVector2`, `TVector3`, `TLorentzVector`, `ROOT::Math::DisplacementVector3D`, etc.), it would be very helpful to support structured bindings to the Cartesian coordinates (e.g.):. ```cpp. auto const [x, y] = func_that_returns_TVector2();. // which would be equivalent to the pair of statements:. TVector2 const vec = func_that_returns_TVector2();. auto const [a, b] = std::pair{vec[0], vec[1]};. assert(x == a);. assert(y == b);. ```. I understand that this utility would only be helpful for accessing Cartesian coordinates, and not those related to (e.g.) polar representations. ### Optional: share how it could be improved. This can be done by introducing suitable template specializations of `get<std::size_t>`, `std::tuple_size`, and `std::tuple_element`. See https://compiler-explorer.com/z/bv4Yef8GE as an example. If this seems a desirable feature, I am willing to consider helping implement it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11806
https://github.com/root-project/root/pull/11807:227,availability,operat,operation,227,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:290,availability,state,state,290,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:389,availability,state,state,389,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:67,integrability,Batch,BatchMode,67,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:290,integrability,state,state,290,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:303,integrability,Batch,BatchMode,303,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:389,integrability,state,state,389,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:459,integrability,Batch,BatchMode,459,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:557,integrability,Batch,BatchMode,557,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:67,performance,Batch,BatchMode,67,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:303,performance,Batch,BatchMode,303,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:459,performance,Batch,BatchMode,459,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:557,performance,Batch,BatchMode,557,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:85,safety,test,test,85,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:114,safety,reme,remember,114,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:440,safety,test,tests,440,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:511,safety,test,test,511,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:583,safety,test,tests,583,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:80,testability,unit,unit,80,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:85,testability,test,test,85,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:435,testability,unit,unit,435,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:440,testability,test,tests,440,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:511,testability,test,test,511,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:578,testability,unit,unit,578,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11807:583,testability,test,tests,583,"[RF] Fix `RooAbsReal::computeBatch` and enable stressRooStats with BatchMode as unit test; It's important to also remember and reset the server dirty flags correctly in `RooAbsReal::computeBatch`. This was already done for the operation mode, but for this mechanism of not changing the arg state in the BatchMode fallback computation function to work, one also needs to consider the dirty state itself. This fixes the `stressRooStats` unit tests with the new BatchMode. Since it works now, the `stressRooStats` test suite is now also run with the different BatchMode backend as unit tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11807
https://github.com/root-project/root/pull/11809:47,security,Modif,Modify,47,[skip-ci] Improve TEfficiency documentation; - Modify the examples: no need to return the TCanvas. - Make an index to ease access to the various sections. - Resize and reformat the pictures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11809
https://github.com/root-project/root/pull/11809:123,security,access,access,123,[skip-ci] Improve TEfficiency documentation; - Modify the examples: no need to return the TCanvas. - Make an index to ease access to the various sections. - Resize and reformat the pictures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11809
https://github.com/root-project/root/pull/11809:30,usability,document,documentation,30,[skip-ci] Improve TEfficiency documentation; - Modify the examples: no need to return the TCanvas. - Make an index to ease access to the various sections. - Resize and reformat the pictures.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11809
https://github.com/root-project/root/pull/11810:370,deployability,automat,automatically,370,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:719,deployability,automat,automatically,719,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:133,integrability,configur,configure,133,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:601,integrability,pub,public,601,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:22,interoperability,socket,sockets,22,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:78,interoperability,socket,sockets,78,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:148,interoperability,socket,socket,148,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:334,interoperability,socket,socket,334,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:388,interoperability,socket,socket,388,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:401,interoperability,specif,specified,401,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:462,interoperability,socket,socket,462,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:133,modifiability,configur,configure,133,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:447,modifiability,variab,variable,447,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:22,security,soc,sockets,22,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:78,security,soc,sockets,78,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:133,security,configur,configure,133,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:148,security,soc,socket,148,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:334,security,soc,socket,334,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:352,security,session,session,352,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:388,security,soc,socket,388,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:462,security,soc,socket,462,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:556,security,secur,security,556,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:706,security,session,session,706,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:790,security,session,session,790,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:370,testability,automat,automatically,370,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:719,testability,automat,automatically,719,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:65,usability,Support,Support,65,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:166,usability,widget,widgets,166,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:514,usability,user,user,514,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:773,usability,command,command,773,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11810:845,usability,user,user,845,"[webgui] let use unix sockets, introduce `rootssh.sh` script; 1. Support unix sockets in `THttpServer`, fix civetweb warning. 2. Let configure unix socket for webgui widgets. 3. Introduce `rootssh.sh` script which use such ferature. In `rootssh.sh` special tunnel is created which forward requests from local http port to remote unix socket. In remote session root will automatically use socket which specified as `ROOT_WEBGUI_SOCKET` environment variable. This socket file by default get `0700` mode - means only user can accuse it. . This solves most of security issues with using of ROOT webgui on public nodes! `rootssh.sh` also creates listener which get informed when new window is started on remote session. and automatically popup web browser using `xdg-open $url` command. Typical session should look like:. ```. [localhost] rootssh.sh user@remotehost. [remotehost] root --web=server -e ""new Browser"". ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11810
https://github.com/root-project/root/pull/11812:118,deployability,updat,updated,118,Fix clang-15 warnings; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11812
https://github.com/root-project/root/pull/11812:88,safety,test,tested,88,Fix clang-15 warnings; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11812
https://github.com/root-project/root/pull/11812:118,safety,updat,updated,118,Fix clang-15 warnings; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11812
https://github.com/root-project/root/pull/11812:118,security,updat,updated,118,Fix clang-15 warnings; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11812
https://github.com/root-project/root/pull/11812:88,testability,test,tested,88,Fix clang-15 warnings; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11812
https://github.com/root-project/root/pull/11813:201,deployability,contain,contain,201,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/pull/11813:42,integrability,event,events,42,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/pull/11813:223,integrability,event,events,223,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/pull/11813:250,integrability,event,events,250,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/pull/11813:456,integrability,event,events,456,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/pull/11813:486,modifiability,scal,scaling,486,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/pull/11813:193,reliability,doe,doesn,193,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/pull/11813:655,reliability,doe,does,655,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/pull/11813:502,safety,test,test,502,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/pull/11813:497,testability,unit,unit,497,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/pull/11813:502,testability,test,test,502,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/pull/11813:545,usability,Close,Closes,545,"[RF] Keep track of the original number of events per bin in `RooHist` for `RooHist::getFitRangeNEvt()`; In the non-uniform binning case, the `RooHist` that you get from. plotting a RooDataHist doesn't contain the number of events, but the. number of events normalized by the bin width. This means that `RooHist::getFitRangeNEvt()` was returning wrong. results. To fix this, a new data member is added to the `RooHist`, which. tracks the original number of events in each bin before the scaling. A unit test that covers this is also implemented. Closes JIRA ticket ROOT-9649:. https://sft.its.cern.ch/jira/browse/ROOT-9649. A second commit in this PR also does some code modernization of the `RooHist`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11813
https://github.com/root-project/root/issues/11814:56,deployability,integr,integral,56,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:381,deployability,integr,integrals,381,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:398,deployability,log,log,398,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:519,deployability,integr,integrator,519,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:646,deployability,integr,integrator,646,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:810,deployability,integr,integrator,810,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:937,deployability,integr,integrator,937,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1064,deployability,integr,integrator,1064,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1179,deployability,integr,integrals,1179,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:73,energy efficiency,current,current,73,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:56,integrability,integr,integral,56,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:381,integrability,integr,integrals,381,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:519,integrability,integr,integrator,519,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:646,integrability,integr,integrator,646,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:810,integrability,integr,integrator,810,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:937,integrability,integr,integrator,937,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1064,integrability,integr,integrator,1064,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1179,integrability,integr,integrals,1179,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:56,interoperability,integr,integral,56,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:381,interoperability,integr,integrals,381,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:519,interoperability,integr,integrator,519,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:646,interoperability,integr,integrator,646,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:810,interoperability,integr,integrator,810,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:937,interoperability,integr,integrator,937,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1064,interoperability,integr,integrator,1064,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1179,interoperability,integr,integrals,1179,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:56,modifiability,integr,integral,56,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:381,modifiability,integr,integrals,381,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:519,modifiability,integr,integrator,519,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:646,modifiability,integr,integrator,646,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:810,modifiability,integr,integrator,810,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:937,modifiability,integr,integrator,937,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1064,modifiability,integr,integrator,1064,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1179,modifiability,integr,integrals,1179,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:139,performance,perform,performance,139,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1219,performance,perform,performance,1219,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1311,performance,perform,performance,1311,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:56,reliability,integr,integral,56,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:381,reliability,integr,integrals,381,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:519,reliability,integr,integrator,519,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:646,reliability,integr,integrator,646,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:810,reliability,integr,integrator,810,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:937,reliability,integr,integrator,937,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1064,reliability,integr,integrator,1064,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1179,reliability,integr,integrals,1179,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1421,reliability,Poisson,Poisson,1421,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1475,reliability,Poisson,Poisson,1475,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:398,safety,log,log,398,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:56,security,integr,integral,56,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:381,security,integr,integrals,381,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:398,security,log,log,398,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:519,security,integr,integrator,519,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:646,security,integr,integrator,646,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:810,security,integr,integrator,810,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:937,security,integr,integrator,937,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1064,security,integr,integrator,1064,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1179,security,integr,integrals,1179,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:56,testability,integr,integral,56,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:151,testability,regress,regression,151,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:381,testability,integr,integrals,381,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:398,testability,log,log,398,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:519,testability,integr,integrator,519,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:646,testability,integr,integrator,646,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:810,testability,integr,integrator,810,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:937,testability,integr,integrator,937,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1064,testability,integr,integrator,1064,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1179,testability,integr,integrals,1179,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1231,testability,regress,regression,1231,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1279,testability,simpl,simpler,1279,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1323,testability,regress,regression,1323,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:139,usability,perform,performance,139,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1219,usability,perform,performance,1219,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1279,usability,simpl,simpler,1279,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/issues/11814:1311,usability,perform,performance,1311,"[RF] RooStats tutorial takes forever because of numeric integral; In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:. ```. [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b). ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:. ```C++. void repro(). {. RooWorkspace w;. w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");. w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");. w.factory(""Uniform::prior_b(b)"");. w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");. RooRealVar& b = *w.var(""b"");. RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {. x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;. }. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11814
https://github.com/root-project/root/pull/11817:123,integrability,Event,Events,123,"[PyROOT] Show std::vector contents at the prompt instead of default repr; From this . ```python. >>> df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). >>> df.GetColumnNames(). <cppyy.gbl.std.vector<string> object at 0x55c82c6e17a0>. ```. To this. ```python. >>> df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). >>> df.GetColumnNames(). { ""Muon_charge"", ""Muon_eta"", ""Muon_mass"", ""Muon_phi"", ""Muon_pt"", ""nMuon"" }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11817
https://github.com/root-project/root/pull/11817:385,integrability,Event,Events,385,"[PyROOT] Show std::vector contents at the prompt instead of default repr; From this . ```python. >>> df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). >>> df.GetColumnNames(). <cppyy.gbl.std.vector<string> object at 0x55c82c6e17a0>. ```. To this. ```python. >>> df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). >>> df.GetColumnNames(). { ""Muon_charge"", ""Muon_eta"", ""Muon_mass"", ""Muon_phi"", ""Muon_pt"", ""nMuon"" }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11817
https://github.com/root-project/root/pull/11817:26,performance,content,contents,26,"[PyROOT] Show std::vector contents at the prompt instead of default repr; From this . ```python. >>> df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). >>> df.GetColumnNames(). <cppyy.gbl.std.vector<string> object at 0x55c82c6e17a0>. ```. To this. ```python. >>> df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""). >>> df.GetColumnNames(). { ""Muon_charge"", ""Muon_eta"", ""Muon_mass"", ""Muon_phi"", ""Muon_pt"", ""nMuon"" }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11817
https://github.com/root-project/root/issues/11819:6,availability,Error,Error,6,"CMake Error; Hi,. i try to t install root, i get the cMakelists.text issue. CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/issues/11819:82,availability,Error,Error,82,"CMake Error; Hi,. i try to t install root, i get the cMakelists.text issue. CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/issues/11819:29,deployability,instal,install,29,"CMake Error; Hi,. i try to t install root, i get the cMakelists.text issue. CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/issues/11819:163,deployability,contain,contain,163,"CMake Error; Hi,. i try to t install root, i get the cMakelists.text issue. CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/issues/11819:6,performance,Error,Error,6,"CMake Error; Hi,. i try to t install root, i get the cMakelists.text issue. CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/issues/11819:82,performance,Error,Error,82,"CMake Error; Hi,. i try to t install root, i get the cMakelists.text issue. CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/issues/11819:144,reliability,doe,does,144,"CMake Error; Hi,. i try to t install root, i get the cMakelists.text issue. CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/issues/11819:6,safety,Error,Error,6,"CMake Error; Hi,. i try to t install root, i get the cMakelists.text issue. CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/issues/11819:82,safety,Error,Error,82,"CMake Error; Hi,. i try to t install root, i get the cMakelists.text issue. CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/issues/11819:6,usability,Error,Error,6,"CMake Error; Hi,. i try to t install root, i get the cMakelists.text issue. CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/issues/11819:82,usability,Error,Error,82,"CMake Error; Hi,. i try to t install root, i get the cMakelists.text issue. CMake Error: The source directory ""/home/said/Desktop/product/root"" does not appear to contain CMakeLists.txt. how i can fix this problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11819
https://github.com/root-project/root/pull/11820:80,usability,Close,Closes,80,[RF] Multiple small fixes to `RooHist`; More detail in the commit descriptions. Closes JIRA ticket ROOT-5805:. https://sft.its.cern.ch/jira/browse/ROOT-5805.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11820
https://github.com/root-project/root/pull/11821:309,availability,state,stated,309,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:367,deployability,contain,contains,367,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:388,deployability,observ,observables,388,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:69,energy efficiency,reduc,reduce,69,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:169,energy efficiency,reduc,reduce,169,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:420,energy efficiency,model,model,420,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:309,integrability,state,stated,309,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:482,integrability,sub,subset,482,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:248,interoperability,specif,specified,248,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:115,modifiability,variab,variables,115,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:222,modifiability,variab,variables,222,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:460,modifiability,variab,variables,460,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:193,reliability,doe,does,193,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:420,security,model,model,420,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:388,testability,observ,observables,388,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:265,usability,document,documentation,265,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:301,usability,clear,clearly,301,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:329,usability,support,supports,329,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:342,usability,workflow,workflow,342,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:519,usability,command,command,519,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11821:562,usability,Close,Closes,562,"[RF] Make `CutRange()` also consider unselected vars in `RooAbsData::reduce()`; Make CutRange() also considers the variables not selected by electVars(). in RooAbsData::reduce(). If CutRange() does consider the unselected variables or not was not. specified in the documentation so far, but now it is clearly stated. This change supports the workflow where a dataset contains additional. observables not used by the fit model, but you still want to use these. variables to select a subset of the data via the `Range()` command. argument to `RooAbsPdf::fitTo()`. Closes JIRA ticket ROOT-8040:. https://sft.its.cern.ch/jira/browse/ROOT-8040. @will-cern FYI.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11821
https://github.com/root-project/root/pull/11822:774,deployability,depend,dependency,774,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:946,deployability,manag,manager,946,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:1065,deployability,Updat,Update,1065,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:1072,deployability,releas,release,1072,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:946,energy efficiency,manag,manager,946,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:679,integrability,configur,configured,679,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:774,integrability,depend,dependency,774,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:288,interoperability,specif,specify,288,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:642,interoperability,plug,plugin,642,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:898,interoperability,plug,plugin,898,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:939,interoperability,plug,plugin,939,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:987,interoperability,plug,plugins,987,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:679,modifiability,configur,configured,679,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:774,modifiability,depend,dependency,774,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:774,safety,depend,dependency,774,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:946,safety,manag,manager,946,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:1065,safety,Updat,Update,1065,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:679,security,configur,configured,679,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:1050,security,sign,signatures,1050,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:1065,security,Updat,Update,1065,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:774,testability,depend,dependency,774,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:40,usability,widget,widgets,40,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:122,usability,command,commands,122,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:188,usability,user,user,188,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:391,usability,user,user,391,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/pull/11822:715,usability,widget,widgets,715,"[webgui] improve `rootssh`, let use web widgets with default gui factory; 1. Rename `rootssh.sh` -> `rootssh`. 2. Let run commands on remote node with `rootssh` like. ```. [shell] rootssh user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 3. Let specify local port and browser kind for `rootssh`:. ```. [shell] rootssh --port 7575 -browser chromium user@remotehost ""source path/to/bin/thisroot.sh; root --web=server -e 'new TBrowser'"". ``` . 4. Provide usage printout when `rootssh` called without arguments. . 5. Add possibility to create `TWebCanvas` and `RBrowser` in base `TGuiFactory` class via plugin mechanism when web display is configured. Let use these web-based widgets when only `gBatchGuiFactory` is created. 6. Remove dependency of `TWebCanvas` from `Gui` library, no need for special gui factory while now base class can be used. 7. Provide plugin to be able caret `TWebCanvas` via plugin manager. 8. Fix problem in `TBrowserImp` plugins definition - `Option_t *` was not mentioned in methods signatures. 9. Update release notes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11822
https://github.com/root-project/root/issues/11823:417,availability,error,error,417,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:4529,availability,state,state,4529,"mework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 given). TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault) =>. SegmentationViolation: segfault in C++; program state was reset. `.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:43,deployability,fail,fails,43,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:105,deployability,fail,fails,105,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:118,deployability,build,build,118,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:132,deployability,version,version,132,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:211,deployability,fail,fail,211,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2163,deployability,Version,Versions,2163,"d long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2255,deployability,Version,Versions,2255,"ll_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2357,deployability,Version,Versions,2357," debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no deb",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2449,deployability,Version,Versions,2449,"yy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2555,deployability,Version,Versions,2555,"sers/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Libra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2645,deployability,Version,Versions,2645,"ppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Librar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2732,deployability,Version,Versions,2732,"austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2830,deployability,Version,Versions,2830,"tructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2932,deployability,Version,Versions,2932,"Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3025,deployability,Version,Versions,3025,"yy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3113,deployability,Version,Versions,3113," info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3214,deployability,Version,Versions,3214,"/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3312,deployability,Version,Versions,3312,"). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 giv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3409,deployability,Version,Versions,3409,"Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 given). TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3502,deployability,Version,Versions,3502,"bug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 given). TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault) =>. SegmentationViolation: se",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3590,deployability,Version,Versions,3590,"mework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 given). TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault) =>. SegmentationViolation: segfault in C++; program state was reset. `.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3679,deployability,Version,Versions,3679,"mework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 given). TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault) =>. SegmentationViolation: segfault in C++; program state was reset. `.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3918,deployability,modul,module,3918,"mework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 given). TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault) =>. SegmentationViolation: segfault in C++; program state was reset. `.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:132,integrability,version,version,132,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:780,integrability,Wrap,WrapperCall,780,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:948,integrability,Wrap,WrapperCall,948,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2163,integrability,Version,Versions,2163,"d long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2255,integrability,Version,Versions,2255,"ll_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2357,integrability,Version,Versions,2357," debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no deb",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2449,integrability,Version,Versions,2449,"yy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2555,integrability,Version,Versions,2555,"sers/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Libra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2645,integrability,Version,Versions,2645,"ppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Librar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2732,integrability,Version,Versions,2732,"austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2830,integrability,Version,Versions,2830,"tructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:2932,integrability,Version,Versions,2932,"Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFil",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3025,integrability,Version,Versions,3025,"yy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, _object*, _object*) (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3113,integrability,Version,Versions,3113," info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_Call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py""",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3214,integrability,Version,Versions,3214,"/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloade",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3312,integrability,Version,Versions,3312,"). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_Vector (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 giv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3409,integrability,Version,Versions,3409,"Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_FastCallDictTstate (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 given). TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3502,integrability,Version,Versions,3502,"bug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 given). TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault) =>. SegmentationViolation: se",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3590,integrability,Version,Versions,3590,"mework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 given). TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault) =>. SegmentationViolation: segfault in C++; program state was reset. `.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:3679,integrability,Version,Versions,3679,"mework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 given). TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault) =>. SegmentationViolation: segfault in C++; program state was reset. `.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:4529,integrability,state,state,4529,"mework/Versions/3.11/Python] slot_tp_init (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] type_call (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyObject_MakeTpCall (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyEval_EvalFrameDefault (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] PyEval_EvalCode (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pyrun_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_SimpleFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] _PyRun_AnyFileObject (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file_obj (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_run_file (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_RunMain (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] pymain_main (no debug info). [/Library/Frameworks/Python.framework/Versions/3.11/Python] Py_BytesMain (no debug info). [/usr/lib/dyld] start (no debug info). Traceback (most recent call last):. File ""/Users/austindestcroix/Desktop/school_holders/projects/sbc/CF4/codeProcess/testWriting.py"", line 140, in <module>. with TFile(""file1.root"", ""recreate"") as outfile:. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. File ""/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/ROOT/_pythonization/_tfile.py"", line 87, in _TFileConstructor. self._OriginalConstructor(*args). TypeError: none of the 2 overloaded methods succeeded. Full details:. TFile::TFile() =>. TypeError: takes at most 0 arguments (2 given). TFile::TFile(const char* fname, const char* option = """", const char* ftitle = """", int compress = ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault) =>. SegmentationViolation: segfault in C++; program state was reset. `.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:780,interoperability,Wrapper,WrapperCall,780,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:948,interoperability,Wrapper,WrapperCall,948,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
https://github.com/root-project/root/issues/11823:132,modifiability,version,version,132,"Pyroot, python3.11, TFile::Open() randomly fails; Opening and closing a TFile in python3.11 occasionally fails. Fresh build of ROOT version 27.01 with newest python (3.11) on macOS. Sometimes the MWE below will fail, and sometimes it will succeed:. ```. if __name__ == ""__main__"": . with TFile(""file1.root"", ""recreate"") as outfile: . h = ROOT.TH1F() . outfile.Close(). ```. about half the time it gives the following error output:. `. *** Break *** segmentation violation. [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libCore.so] TUnixSystem::DispatchSignals(ESignals) (no debug info). [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] WrapperCall(long, unsigned long, void*, void*, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy_backend3_11.so] Cppyy::CallConstructor(long, unsigned long, unsigned long, void*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p311/lib/libcppyy3_11.so] CPyCppyy::CPPConstructor::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (no debug info). [/Users/austindestcroix/packages/root_py311_v6_26.10/myInstall_p31",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11823
