id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/7407:188,reliability,fail,failures,188,"> That's less intrusive in many ways including that it does not introduce git history bloats. > . I agree, it sounds good. It seems it's already in the Travis CI builds from ROOT (allowed failures), and it even suggest you the option of doing the 'upgrading' without bloating the history. ![image](https://user-images.githubusercontent.com/10653970/110776978-9b448e80-822e-11eb-8ffc-743e78dc909a.png). Another option is using a file `.git-blame-ignore-revs`, see https://www.moxio.com/blog/43/ignoring-bulk-change-commits-with-git-blame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7407
https://github.com/root-project/root/pull/7407:14,security,intrus,intrusive,14,"> That's less intrusive in many ways including that it does not introduce git history bloats. > . I agree, it sounds good. It seems it's already in the Travis CI builds from ROOT (allowed failures), and it even suggest you the option of doing the 'upgrading' without bloating the history. ![image](https://user-images.githubusercontent.com/10653970/110776978-9b448e80-822e-11eb-8ffc-743e78dc909a.png). Another option is using a file `.git-blame-ignore-revs`, see https://www.moxio.com/blog/43/ignoring-bulk-change-commits-with-git-blame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7407
https://github.com/root-project/root/pull/7407:306,usability,user,user-images,306,"> That's less intrusive in many ways including that it does not introduce git history bloats. > . I agree, it sounds good. It seems it's already in the Travis CI builds from ROOT (allowed failures), and it even suggest you the option of doing the 'upgrading' without bloating the history. ![image](https://user-images.githubusercontent.com/10653970/110776978-9b448e80-822e-11eb-8ffc-743e78dc909a.png). Another option is using a file `.git-blame-ignore-revs`, see https://www.moxio.com/blog/43/ignoring-bulk-change-commits-with-git-blame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7407
https://github.com/root-project/root/pull/7408:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7408
https://github.com/root-project/root/pull/7408:84,energy efficiency,current,currently,84,@JohnYoon13 Could you push one more change here: in tutorials/CMakeLists.txt we are currently excluding `v7/climate/global_temperatures.C`. That would need to change to `v7/global_temperatures.C`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7408
https://github.com/root-project/root/pull/7408:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7408
https://github.com/root-project/root/issues/7410:154,deployability,build,build,154,"`rmkdepend` is historical tool, which was used in old ROOT makefiles. Currently nobody should use it - beside my very old project with own Makefile-based build. One can ignore all these warnings",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:70,energy efficiency,Current,Currently,70,"`rmkdepend` is historical tool, which was used in old ROOT makefiles. Currently nobody should use it - beside my very old project with own Makefile-based build. One can ignore all these warnings",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26,usability,tool,tool,26,"`rmkdepend` is historical tool, which was used in old ROOT makefiles. Currently nobody should use it - beside my very old project with own Makefile-based build. One can ignore all these warnings",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7411:53,availability,error,errors,53,@ferdymercury . Here are builtins and like llvm such errors need to be fixed in respective repositories. Otherwise after next library upgrade all our fixes will gone away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:134,deployability,upgrad,upgrade,134,@ferdymercury . Here are builtins and like llvm such errors need to be fixed in respective repositories. Otherwise after next library upgrade all our fixes will gone away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:91,integrability,repositor,repositories,91,@ferdymercury . Here are builtins and like llvm such errors need to be fixed in respective repositories. Otherwise after next library upgrade all our fixes will gone away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:91,interoperability,repositor,repositories,91,@ferdymercury . Here are builtins and like llvm such errors need to be fixed in respective repositories. Otherwise after next library upgrade all our fixes will gone away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:134,modifiability,upgrad,upgrade,134,@ferdymercury . Here are builtins and like llvm such errors need to be fixed in respective repositories. Otherwise after next library upgrade all our fixes will gone away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53,performance,error,errors,53,@ferdymercury . Here are builtins and like llvm such errors need to be fixed in respective repositories. Otherwise after next library upgrade all our fixes will gone away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53,safety,error,errors,53,@ferdymercury . Here are builtins and like llvm such errors need to be fixed in respective repositories. Otherwise after next library upgrade all our fixes will gone away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53,usability,error,errors,53,@ferdymercury . Here are builtins and like llvm such errors need to be fixed in respective repositories. Otherwise after next library upgrade all our fixes will gone away,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60,energy efficiency,core,core,60,"Sure, makes sense. There were also more messages from other core folders that I hadn't time yet to submit. Should I submit more separate issues for each core subfolder, or just a single one? Or you would just take a look by running clang-tidy yourself on other core subdirectories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:153,energy efficiency,core,core,153,"Sure, makes sense. There were also more messages from other core folders that I hadn't time yet to submit. Should I submit more separate issues for each core subfolder, or just a single one? Or you would just take a look by running clang-tidy yourself on other core subdirectories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:261,energy efficiency,core,core,261,"Sure, makes sense. There were also more messages from other core folders that I hadn't time yet to submit. Should I submit more separate issues for each core subfolder, or just a single one? Or you would just take a look by running clang-tidy yourself on other core subdirectories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40,integrability,messag,messages,40,"Sure, makes sense. There were also more messages from other core folders that I hadn't time yet to submit. Should I submit more separate issues for each core subfolder, or just a single one? Or you would just take a look by running clang-tidy yourself on other core subdirectories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:99,integrability,sub,submit,99,"Sure, makes sense. There were also more messages from other core folders that I hadn't time yet to submit. Should I submit more separate issues for each core subfolder, or just a single one? Or you would just take a look by running clang-tidy yourself on other core subdirectories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:116,integrability,sub,submit,116,"Sure, makes sense. There were also more messages from other core folders that I hadn't time yet to submit. Should I submit more separate issues for each core subfolder, or just a single one? Or you would just take a look by running clang-tidy yourself on other core subdirectories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:158,integrability,sub,subfolder,158,"Sure, makes sense. There were also more messages from other core folders that I hadn't time yet to submit. Should I submit more separate issues for each core subfolder, or just a single one? Or you would just take a look by running clang-tidy yourself on other core subdirectories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:266,integrability,sub,subdirectories,266,"Sure, makes sense. There were also more messages from other core folders that I hadn't time yet to submit. Should I submit more separate issues for each core subfolder, or just a single one? Or you would just take a look by running clang-tidy yourself on other core subdirectories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40,interoperability,messag,messages,40,"Sure, makes sense. There were also more messages from other core folders that I hadn't time yet to submit. Should I submit more separate issues for each core subfolder, or just a single one? Or you would just take a look by running clang-tidy yourself on other core subdirectories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:87,performance,time,time,87,"Sure, makes sense. There were also more messages from other core folders that I hadn't time yet to submit. Should I submit more separate issues for each core subfolder, or just a single one? Or you would just take a look by running clang-tidy yourself on other core subdirectories?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:117,energy efficiency,core,core,117,"Yes, it will be useful to see such reports for major components like `io` or `tree` or `graf2d` or `sql`. And other `core` components. Later one could check other componets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53,integrability,compon,components,53,"Yes, it will be useful to see such reports for major components like `io` or `tree` or `graf2d` or `sql`. And other `core` components. Later one could check other componets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:123,integrability,compon,components,123,"Yes, it will be useful to see such reports for major components like `io` or `tree` or `graf2d` or `sql`. And other `core` components. Later one could check other componets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:163,integrability,compon,componets,163,"Yes, it will be useful to see such reports for major components like `io` or `tree` or `graf2d` or `sql`. And other `core` components. Later one could check other componets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53,interoperability,compon,components,53,"Yes, it will be useful to see such reports for major components like `io` or `tree` or `graf2d` or `sql`. And other `core` components. Later one could check other componets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:123,interoperability,compon,components,123,"Yes, it will be useful to see such reports for major components like `io` or `tree` or `graf2d` or `sql`. And other `core` components. Later one could check other componets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:163,interoperability,compon,componets,163,"Yes, it will be useful to see such reports for major components like `io` or `tree` or `graf2d` or `sql`. And other `core` components. Later one could check other componets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53,modifiability,compon,components,53,"Yes, it will be useful to see such reports for major components like `io` or `tree` or `graf2d` or `sql`. And other `core` components. Later one could check other componets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:123,modifiability,compon,components,123,"Yes, it will be useful to see such reports for major components like `io` or `tree` or `graf2d` or `sql`. And other `core` components. Later one could check other componets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:163,modifiability,compon,componets,163,"Yes, it will be useful to see such reports for major components like `io` or `tree` or `graf2d` or `sql`. And other `core` components. Later one could check other componets.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20,energy efficiency,core,core,20,"I have reported all core components now, see https://github.com/root-project/root/issues. as well as io, tree, and graf2d. Let me know if you need further reports. Cheers!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25,integrability,compon,components,25,"I have reported all core components now, see https://github.com/root-project/root/issues. as well as io, tree, and graf2d. Let me know if you need further reports. Cheers!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25,interoperability,compon,components,25,"I have reported all core components now, see https://github.com/root-project/root/issues. as well as io, tree, and graf2d. Let me know if you need further reports. Cheers!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25,modifiability,compon,components,25,"I have reported all core components now, see https://github.com/root-project/root/issues. as well as io, tree, and graf2d. Let me know if you need further reports. Cheers!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7412:69,energy efficiency,core,core,69,I add PR trying to fix some of issues. . Most of the times we see:. `core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value`. It is dirty workaround in ROOT to mark dynamically-allocated TObject. This code also a reason why it is not allowed to use `= default` specifier for any TObject-derived classes. The only we can do - `silent` clang-tidy warning here. . @ferdymercury - do you know how it can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:208,energy efficiency,alloc,allocated,208,I add PR trying to fix some of issues. . Most of the times we see:. `core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value`. It is dirty workaround in ROOT to mark dynamically-allocated TObject. This code also a reason why it is not allowed to use `= default` specifier for any TObject-derived classes. The only we can do - `silent` clang-tidy warning here. . @ferdymercury - do you know how it can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:292,interoperability,specif,specifier,292,I add PR trying to fix some of issues. . Most of the times we see:. `core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value`. It is dirty workaround in ROOT to mark dynamically-allocated TObject. This code also a reason why it is not allowed to use `= default` specifier for any TObject-derived classes. The only we can do - `silent` clang-tidy warning here. . @ferdymercury - do you know how it can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53,performance,time,times,53,I add PR trying to fix some of issues. . Most of the times we see:. `core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value`. It is dirty workaround in ROOT to mark dynamically-allocated TObject. This code also a reason why it is not allowed to use `= default` specifier for any TObject-derived classes. The only we can do - `silent` clang-tidy warning here. . @ferdymercury - do you know how it can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35,availability,error,error,35,"Thanks! You can disable a specific error by adding a comment on the relevante line, e.g. `HackyCode = xyz;// NOLINT(cert-err58-cpp)`. See https://stackoverflow.com/questions/37950439/inline-way-to-disable-clang-tidy-checks. https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:146,deployability,stack,stackoverflow,146,"Thanks! You can disable a specific error by adding a comment on the relevante line, e.g. `HackyCode = xyz;// NOLINT(cert-err58-cpp)`. See https://stackoverflow.com/questions/37950439/inline-way-to-disable-clang-tidy-checks. https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26,interoperability,specif,specific,26,"Thanks! You can disable a specific error by adding a comment on the relevante line, e.g. `HackyCode = xyz;// NOLINT(cert-err58-cpp)`. See https://stackoverflow.com/questions/37950439/inline-way-to-disable-clang-tidy-checks. https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35,performance,error,error,35,"Thanks! You can disable a specific error by adding a comment on the relevante line, e.g. `HackyCode = xyz;// NOLINT(cert-err58-cpp)`. See https://stackoverflow.com/questions/37950439/inline-way-to-disable-clang-tidy-checks. https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:287,reliability,diagno,diagnostics,287,"Thanks! You can disable a specific error by adding a comment on the relevante line, e.g. `HackyCode = xyz;// NOLINT(cert-err58-cpp)`. See https://stackoverflow.com/questions/37950439/inline-way-to-disable-clang-tidy-checks. https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35,safety,error,error,35,"Thanks! You can disable a specific error by adding a comment on the relevante line, e.g. `HackyCode = xyz;// NOLINT(cert-err58-cpp)`. See https://stackoverflow.com/questions/37950439/inline-way-to-disable-clang-tidy-checks. https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:90,security,Hack,HackyCode,90,"Thanks! You can disable a specific error by adding a comment on the relevante line, e.g. `HackyCode = xyz;// NOLINT(cert-err58-cpp)`. See https://stackoverflow.com/questions/37950439/inline-way-to-disable-clang-tidy-checks. https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:287,testability,diagno,diagnostics,287,"Thanks! You can disable a specific error by adding a comment on the relevante line, e.g. `HackyCode = xyz;// NOLINT(cert-err58-cpp)`. See https://stackoverflow.com/questions/37950439/inline-way-to-disable-clang-tidy-checks. https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35,usability,error,error,35,"Thanks! You can disable a specific error by adding a comment on the relevante line, e.g. `HackyCode = xyz;// NOLINT(cert-err58-cpp)`. See https://stackoverflow.com/questions/37950439/inline-way-to-disable-clang-tidy-checks. https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:59,energy efficiency,core,core,59,Mean I should mark it like:. ```. // NOLINT(clang-analyzer-core.UndefinedBinaryOperatorResult). ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13,testability,simpl,simple,13,"Seems to be, simple `// NOLINT` should do the job",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13,usability,simpl,simple,13,"Seems to be, simple `// NOLINT` should do the job",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43,deployability,fail,fails,43,"I just tried with xrootd on master, and it fails for me. (I didn't do make clean, so at least it does not work when activated on a previous install).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:140,deployability,instal,install,140,"I just tried with xrootd on master, and it fails for me. (I didn't do make clean, so at least it does not work when activated on a previous install).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43,reliability,fail,fails,43,"I just tried with xrootd on master, and it fails for me. (I didn't do make clean, so at least it does not work when activated on a previous install).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:97,reliability,doe,does,97,"I just tried with xrootd on master, and it fails for me. (I didn't do make clean, so at least it does not work when activated on a previous install).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3593,availability,operat,operator,3593, as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3891,availability,mask,mask,3891,memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4073,availability,operat,operator,4073,pt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false bra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4159,availability,operat,operator,4159,parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st param,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4719,availability,operat,operator,4719,7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDir,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41570,availability,Slo,SlowFormat,41570,oot_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41721,availability,slo,slowBufferSize,41721,src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42020,availability,slo,slowBufferSize,42020,size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42435,availability,slo,slowBufferSize,42435,base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43135,availability,Slo,SlowFormat,43135,ase/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43296,availability,slo,slowBufferSize,43296,ase/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43694,availability,slo,slowBufferSize,43694,TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:44548,availability,Slo,SlowFormat,44548,pt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46058,availability,Slo,SlowFormat,46058,t_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46208,availability,slo,slowBufferSize,46208,opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46498,availability,slo,slowBufferSize,46498,n is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46833,availability,slo,slowBufferSize,46833,ore/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47077,availability,slo,slowBufferSize,47077,rc/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47931,availability,Slo,SlowFormat,47931,c/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TStrin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54489,availability,operat,operator,54489,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19687,deployability,continu,continues,19687,oot_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23113,deployability,continu,continues,23113, false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26518,deployability,continu,continues,26518, is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34358,deployability,continu,continues,34358,is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the conditi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:114,energy efficiency,core,core,114,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:267,energy efficiency,core,core,267,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:346,energy efficiency,core,core,346,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:430,energy efficiency,core,core,430,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:502,energy efficiency,core,core,502,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:582,energy efficiency,core,core,582,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:654,energy efficiency,core,core,654,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:737,energy efficiency,core,core,737,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:808,energy efficiency,core,core,808,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:853,energy efficiency,alloc,allocated,853,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:880,energy efficiency,core,core,880,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:925,energy efficiency,alloc,allocated,925,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:959,energy efficiency,core,core,959,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1043,energy efficiency,core,core,1043,"Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1122,energy efficiency,core,core,1122,inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1194,energy efficiency,core,core,1194,usplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1274,energy efficiency,core,core,1274,/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1359,energy efficiency,core,core,1359,String.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1432,energy efficiency,core,core,1432,/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as ',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1513,energy efficiency,core,core,1513,/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1586,energy efficiency,core,core,1586,ase/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1670,energy efficiency,core,core,1670,ing.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1742,energy efficiency,core,core,1742,se/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1829,energy efficiency,core,core,1829,xx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to functio,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1904,energy efficiency,core,core,1904,1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1947,energy efficiency,core,core,1947,/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with ana,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2469,energy efficiency,core,core,2469,uming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2514,energy efficiency,core,core,2514,e/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false bra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3040,energy efficiency,core,core,3040,provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3089,energy efficiency,core,core,3089,bounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3209,energy efficiency,core,core,3209,-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3293,energy efficiency,core,core,3293,ot provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3375,energy efficiency,core,core,3375,alogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3462,energy efficiency,core,core,3462,_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:24,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3537,energy efficiency,core,core,3537,cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3622,energy efficiency,core,core,3622,nding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3694,energy efficiency,core,core,3694,ous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Re,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3765,energy efficiency,core,core,3765,[clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/bas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3840,energy efficiency,core,core,3840,is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3932,energy efficiency,core,core,3932,ctions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4015,energy efficiency,core,core,4015,E-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4102,energy efficiency,core,core,4102,Directory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4199,energy efficiency,core,core,4199,nalyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/ba,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4285,energy efficiency,core,core,4285,t_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4366,energy efficiency,core,core,4366,ot_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4438,energy efficiency,core,core,4438,alse in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4506,energy efficiency,core,core,4506,alse branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4593,energy efficiency,core,core,4593,erator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/cor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4661,energy efficiency,core,core,4661,' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st param,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4759,energy efficiency,core,core,4759,src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/ba,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4859,energy efficiency,core,core,4859,.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4944,energy efficiency,core,core,4944,TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5023,energy efficiency,core,core,5023,inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/cor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5098,energy efficiency,core,core,5098,c/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5194,energy efficiency,core,core,5194,rc/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5287,energy efficiency,core,core,5287,/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calli,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5368,energy efficiency,core,core,5368,/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5447,energy efficiency,core,core,5447,nc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5516,energy efficiency,core,core,5516,c/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5592,energy efficiency,core,core,5592,ore/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5705,energy efficiency,core,core,5705,m 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the conditi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5754,energy efficiency,core,core,5754,rc/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5856,energy efficiency,core,core,5856,/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5944,energy efficiency,core,core,5944,re/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6022,energy efficiency,core,core,6022,ore/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6088,energy efficiency,core,core,6088,oot_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6176,energy efficiency,core,core,6176,n /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6254,energy efficiency,core,core,6254,odeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is tru,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6329,energy efficiency,core,core,6329,ng 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: As,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6411,energy efficiency,core,core,6411,ndition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6488,energy efficiency,core,core,6488, is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6576,energy efficiency,core,core,6576,/opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6653,energy efficiency,core,core,6653,st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6735,energy efficiency,core,core,6735,4. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6805,energy efficiency,core,core,6805,perand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6888,energy efficiency,core,core,6888,]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::Ca,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6959,energy efficiency,core,core,6959,OT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7041,energy efficiency,core,core,7041,:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7127,energy efficiency,core,core,7127,'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7201,energy efficiency,core,core,7201,1. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TIn,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7295,energy efficiency,core,core,7295,T::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7378,energy efficiency,core,core,7378,iles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7449,energy efficiency,core,core,7449,de of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7549,energy efficiency,core,core,7549,on-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7646,energy efficiency,core,core,7646,_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7732,energy efficiency,core,core,7732,/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecur,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7820,energy efficiency,core,core,7820,OT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:7928,energy efficiency,core,core,7928,alse branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/bas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8014,energy efficiency,core,core,8014,is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8100,energy efficiency,core,core,8100,preter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8186,energy efficiency,core,core,8186,opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length argument,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8260,energy efficiency,core,core,8260,ering loop body in /opt/root_src/core/base/src/TROOT.cxx:1146. 19: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy].,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8355,energy efficiency,core,core,8355,lse in /opt/root_src/core/base/src/TROOT.cxx:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8399,energy efficiency,core,core,8399,:1158. 20: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1158. 21: 'other_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8922,energy efficiency,core,core,8922,src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assum,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8967,energy efficiency,core,core,8967,d from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9490,energy efficiency,core,core,9490,ot provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecke,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9535,energy efficiency,core,core,9535,lace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9651,energy efficiency,core,core,9651,ng-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9731,energy efficiency,core,core,9731,re as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9810,energy efficiency,core,core,9810, functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9884,energy efficiency,core,core,9884,'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9967,energy efficiency,core,core,9967,re/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10038,energy efficiency,core,core,10038,nsecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10126,energy efficiency,core,core,10126,ctions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10198,energy efficiency,core,core,10198,trlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10307,energy efficiency,core,core,10307, does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10353,energy efficiency,core,core,10353,r. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10469,energy efficiency,core,core,10469,9 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10550,energy efficiency,core,core,10550,orage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10629,energy efficiency,core,core,10629,ll' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10723,energy efficiency,core,core,10723,t_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10795,energy efficiency,core,core,10795,opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10869,energy efficiency,core,core,10869,opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10952,energy efficiency,core,core,10952,opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11023,energy efficiency,core,core,11023,opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11111,energy efficiency,core,core,11111,opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11183,energy efficiency,core,core,11183,opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStora,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11267,energy efficiency,core,core,11267, expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11339,energy efficiency,core,core,11339,pt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11449,energy efficiency,core,core,11449,' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Takin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11495,energy efficiency,core,core,11495,: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11611,energy efficiency,core,core,11611,n /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStora,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11692,energy efficiency,core,core,11692,l to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11771,energy efficiency,core,core,11771,anch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11865,energy efficiency,core,core,11865,c/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11937,energy efficiency,core,core,11937,opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12011,energy efficiency,core,core,12011,/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is fal,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12094,energy efficiency,core,core,12094, /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12165,energy efficiency,core,core,12165,n /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12253,energy efficiency,core,core,12253,pt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12325,energy efficiency,core,core,12325,pt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12410,energy efficiency,core,core,12410,expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12483,energy efficiency,core,core,12483,/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12593,energy efficiency,core,core,12593,[clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12639,energy efficiency,core,core,12639,Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TStr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12795,energy efficiency,core,core,12795,:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12874,energy efficiency,core,core,12874,rc/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12954,energy efficiency,core,core,12954,age.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13033,energy efficiency,core,core,13033,xx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13113,energy efficiency,core,core,13113,e.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13192,energy efficiency,core,core,13192,2. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13273,energy efficiency,core,core,13273,.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13345,energy efficiency,core,core,13345,.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13436,energy efficiency,core,core,13436,48. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13521,energy efficiency,core,core,13521, pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13593,energy efficiency,core,core,13593,re/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13669,energy efficiency,core,core,13669,6: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13749,energy efficiency,core,core,13749,Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13821,energy efficiency,core,core,13821,53. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13889,energy efficiency,core,core,13889,ring.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:13961,energy efficiency,core,core,13961,/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14045,energy efficiency,core,core,14045,TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14117,energy efficiency,core,core,14117,ase/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14203,energy efficiency,core,core,14203,/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/bas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14275,energy efficiency,core,core,14275,/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/ba,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14320,energy efficiency,alloc,allocated,14320,ch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14347,energy efficiency,core,core,14347,/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14391,energy efficiency,alloc,allocated,14391,structor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14425,energy efficiency,core,core,14425,root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TStr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14523,energy efficiency,core,core,14523,/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true br,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14607,energy efficiency,core,core,14607,tring.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14679,energy efficiency,core,core,14679,c/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true br,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14758,energy efficiency,core,core,14758,rc/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14838,energy efficiency,core,core,14838,ng.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14907,energy efficiency,core,core,14907,g.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14987,energy efficiency,core,core,14987,4. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15058,energy efficiency,core,core,15058,String.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15131,energy efficiency,core,core,15131,tring.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15197,energy efficiency,core,core,15197,src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15270,energy efficiency,core,core,15270,rc/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15336,energy efficiency,core,core,15336,root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15409,energy efficiency,core,core,15409,/opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15475,energy efficiency,core,core,15475,py constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15547,energy efficiency,core,core,15547,2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15631,energy efficiency,core,core,15631,2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Le,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15703,energy efficiency,core,core,15703,2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15782,energy efficiency,core,core,15782,2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:215,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15854,energy efficiency,core,core,15854,ing.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:15931,energy efficiency,core,core,15931,1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TStri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16003,energy efficiency,core,core,16003,ing.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16071,energy efficiency,core,core,16071,String.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16143,energy efficiency,core,core,16143,TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16206,energy efficiency,core,core,16206,rc/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16279,energy efficiency,core,core,16279,rc/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false br,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16354,energy efficiency,core,core,16354,g.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is fal,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16400,energy efficiency,core,core,16400,ot_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16596,energy efficiency,core,core,16596,ndition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16675,energy efficiency,core,core,16675,e branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not eq,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16755,energy efficiency,core,core,16755,to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16834,energy efficiency,core,core,16834, in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16914,energy efficiency,core,core,16914, /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking fals,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16993,energy efficiency,core,core,16993,oot_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17074,energy efficiency,core,core,17074,base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17146,energy efficiency,core,core,17146,base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17230,energy efficiency,core,core,17230,1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17303,energy efficiency,core,core,17303,1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17376,energy efficiency,core,core,17376,x:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17455,energy efficiency,core,core,17455, of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17540,energy efficiency,core,core,17540,eaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17613,energy efficiency,core,core,17613,ng.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17704,energy efficiency,core,core,17704, 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17784,energy efficiency,core,core,17784, 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17869,energy efficiency,core,core,17869,suming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:17942,energy efficiency,core,core,17942,. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18024,energy efficiency,core,core,18024,: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18092,energy efficiency,core,core,18092,g.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18172,energy efficiency,core,core,18172,53. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18241,energy efficiency,core,core,18241,/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:25,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18314,energy efficiency,core,core,18314,/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18399,energy efficiency,core,core,18399,:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:26,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18472,energy efficiency,core,core,18472,ng.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18559,energy efficiency,core,core,18559,.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Ret,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18629,energy efficiency,core,core,18629,ing.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18700,energy efficiency,core,core,18700,c/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18776,energy efficiency,core,core,18776,t_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18847,energy efficiency,core,core,18847,se in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18919,energy efficiency,core,core,18919,nch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:18987,energy efficiency,core,core,18987,tring::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19059,energy efficiency,core,core,19059,base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19143,energy efficiency,core,core,19143, is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19215,energy efficiency,core,core,19215, <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19301,energy efficiency,core,core,19301,t/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19373,energy efficiency,core,core,19373, false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'bas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19418,energy efficiency,alloc,allocated,19418,x:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19445,energy efficiency,core,core,19445, branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19489,energy efficiency,alloc,allocated,19489,cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/bas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19523,energy efficiency,core,core,19523,or for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19616,energy efficiency,core,core,19616,t/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false bra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19727,energy efficiency,core,core,19727,. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19843,energy efficiency,core,core,19843,c/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19889,energy efficiency,core,core,19889,lse branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20089,energy efficiency,core,core,20089,4: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20168,energy efficiency,core,core,20168,58. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not eq,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20248,energy efficiency,core,core,20248,Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20327,energy efficiency,core,core,20327,6. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20407,energy efficiency,core,core,20407,emory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking fals,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20486,energy efficiency,core,core,20486, allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20567,energy efficiency,core,core,20567,rom constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20639,energy efficiency,core,core,20639,:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20723,energy efficiency,core,core,20723,c/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20796,energy efficiency,core,core,20796, by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20869,energy efficiency,core,core,20869,35. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:20948,energy efficiency,core,core,20948,memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21033,energy efficiency,core,core,21033,eaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TStr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21106,energy efficiency,core,core,21106,ng.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21197,energy efficiency,core,core,21197, 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21277,energy efficiency,core,core,21277, 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21362,energy efficiency,core,core,21362,suming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/cor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21435,energy efficiency,core,core,21435,. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21517,energy efficiency,core,core,21517,: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TStr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21585,energy efficiency,core,core,21585,g.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21665,energy efficiency,core,core,21665,53. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21734,energy efficiency,core,core,21734,/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21807,energy efficiency,core,core,21807,/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21892,energy efficiency,core,core,21892,:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:27,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:21965,energy efficiency,core,core,21965,ng.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22057,energy efficiency,core,core,22057,2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22142,energy efficiency,core,core,22142,suming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22214,energy efficiency,core,core,22214,ng.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory po,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22290,energy efficiency,core,core,22290,String.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TStri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22361,energy efficiency,core,core,22361,ore/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22433,energy efficiency,core,core,22433,core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clan,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22501,energy efficiency,core,core,22501,/opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22573,energy efficiency,core,core,22573,/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22645,energy efficiency,core,core,22645, in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'bas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22722,energy efficiency,core,core,22722,/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22794,energy efficiency,core,core,22794,t/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Ass,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22839,energy efficiency,alloc,allocated,22839,ssuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22866,energy efficiency,core,core,22866, false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22910,energy efficiency,alloc,allocated,22910,xx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22944,energy efficiency,core,core,22944,h in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:215,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23042,energy efficiency,core,core,23042,opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking fals,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23153,energy efficiency,core,core,23153,/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23273,energy efficiency,core,core,23273, /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23319,energy efficiency,core,core,23319,30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23520,energy efficiency,core,core,23520,.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23599,energy efficiency,core,core,23599,4. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not eq,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23679,energy efficiency,core,core,23679,capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23758,energy efficiency,core,core,23758,ing false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23838,energy efficiency,core,core,23838,llocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking fals,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23917,energy efficiency,core,core,23917, memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23998,energy efficiency,core,core,23998,onstructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24070,energy efficiency,core,core,24070,. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24154,energy efficiency,core,core,24154,e/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24227,energy efficiency,core,core,24227,str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24300,energy efficiency,core,core,24300,5. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24379,energy efficiency,core,core,24379,emory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24464,energy efficiency,core,core,24464,eaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24537,energy efficiency,core,core,24537,ng.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24628,energy efficiency,core,core,24628, 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24708,energy efficiency,core,core,24708, 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24793,energy efficiency,core,core,24793,suming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24866,energy efficiency,core,core,24866,. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:24948,energy efficiency,core,core,24948,: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25016,energy efficiency,core,core,25016,g.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25096,energy efficiency,core,core,25096,53. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacit,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25165,energy efficiency,core,core,25165,/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25238,energy efficiency,core,core,25238,/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: M,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25323,energy efficiency,core,core,25323,:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned alloc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25396,energy efficiency,core,core,25396,ng.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25483,energy efficiency,core,core,25483,.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25553,energy efficiency,core,core,25553,ing.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25624,energy efficiency,core,core,25624,c/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25700,energy efficiency,core,core,25700,t_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25771,energy efficiency,core,core,25771,se in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Poten,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25843,energy efficiency,core,core,25843,nch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Calling 'TString::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25911,energy efficiency,core,core,25911,tring::IsInBaseN' in /opt/root_src/core/base/src/TString.cxx:2169. 20: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:25983,energy efficiency,core,core,25983,base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:1914. 21: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26055,energy efficiency,core,core,26055,side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1914. 22: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26132,energy efficiency,core,core,26132,ase' is <= 36 in /opt/root_src/core/base/src/TString.cxx:1914. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26204,energy efficiency,core,core,26204,g false branch in /opt/root_src/core/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26249,energy efficiency,alloc,allocated,26249,tring.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26276,energy efficiency,core,core,26276,ming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of ',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26320,energy efficiency,alloc,allocated,26320,re/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26354,energy efficiency,core,core,26354,5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'bas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26447,energy efficiency,core,core,26447,or for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26558,energy efficiency,core,core,26558,se/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26679,energy efficiency,core,core,26679,' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26725,energy efficiency,core,core,26725,08. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26911,energy efficiency,core,core,26911,re/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26990,energy efficiency,core,core,26990,/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not eq,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27070,energy efficiency,core,core,27070,ring.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27149,energy efficiency,core,core,27149,ng.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27229,energy efficiency,core,core,27229,66. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking fals,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27308,energy efficiency,core,core,27308, Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false bran,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27389,energy efficiency,core,core,27389,turning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27461,energy efficiency,core,core,27461,tring.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27545,energy efficiency,core,core,27545,t/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27618,energy efficiency,core,core,27618,ointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27691,energy efficiency,core,core,27691,TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27770,energy efficiency,core,core,27770,ntial leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27855,energy efficiency,core,core,27855,eaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TStrin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:27928,energy efficiency,core,core,27928,ng.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28019,energy efficiency,core,core,28019, 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28099,energy efficiency,core,core,28099, 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28184,energy efficiency,core,core,28184,suming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28257,energy efficiency,core,core,28257,. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28330,energy efficiency,core,core,28330,x:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TStr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28409,energy efficiency,core,core,28409,cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28477,energy efficiency,core,core,28477,ing.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28557,energy efficiency,core,core,28557,TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28626,energy efficiency,core,core,28626,src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28699,energy efficiency,core,core,28699,src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28790,energy efficiency,core,core,28790,cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TStrin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28877,energy efficiency,core,core,28877,x:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:28956,energy efficiency,core,core,28956,. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29027,energy efficiency,core,core,29027,src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/ba,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29103,energy efficiency,core,core,29103,ase/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29174,energy efficiency,core,core,29174,oot_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29246,energy efficiency,core,core,29246,root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory point,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29314,energy efficiency,core,core,29314,/opt/root_src/core/base/src/TString.cxx:2169. 20: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29386,energy efficiency,core,core,29386,oa' in /opt/root_src/core/base/src/TString.cxx:2174. 21: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29470,energy efficiency,core,core,29470,_src/core/base/src/TString.cxx:2130. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29542,energy efficiency,core,core,29542,opt/root_src/core/base/src/TString.cxx:2130. 23: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29628,energy efficiency,core,core,29628,/base/src/TString.cxx:2130. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29700,energy efficiency,core,core,29700,e/base/src/TString.cxx:2130. 25: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29745,energy efficiency,alloc,allocated,29745,is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29772,energy efficiency,core,core,29772,n /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29816,energy efficiency,alloc,allocated,29816, 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29850,energy efficiency,core,core,29850,String' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29943,energy efficiency,core,core,29943,t/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29988,energy efficiency,alloc,allocated,29988,king true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30022,energy efficiency,core,core,30022,rc/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:216,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30128,energy efficiency,core,core,30128,08. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30174,energy efficiency,core,core,30174,re/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30361,energy efficiency,core,core,30361,ranch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30440,energy efficiency,core,core,30440,n is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not eq,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30520,energy efficiency,core,core,30520,ch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30599,energy efficiency,core,core,30599,= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the con,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30679,energy efficiency,core,core,30679,h in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking fals,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30758,energy efficiency,core,core,30758,pt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false bran,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30839,energy efficiency,core,core,30839,root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30911,energy efficiency,core,core,30911,or 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30995,energy efficiency,core,core,30995, memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31068,energy efficiency,core,core,31068,ak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking fals,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31141,energy efficiency,core,core,31141,String.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31220,energy efficiency,core,core,31220,ntial leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31305,energy efficiency,core,core,31305,eaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31378,energy efficiency,core,core,31378,ng.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31469,energy efficiency,core,core,31469, 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31549,energy efficiency,core,core,31549, 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31634,energy efficiency,core,core,31634,suming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31707,energy efficiency,core,core,31707,. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31780,energy efficiency,core,core,31780,x:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31865,energy efficiency,core,core,31865,53. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:31938,energy efficiency,core,core,31938,3. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32023,energy efficiency,core,core,32023,. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32096,energy efficiency,core,core,32096,. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TStr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32175,energy efficiency,core,core,32175,Left side of '&&' is true in /opt/root_src/core/base/src/TString.cxx:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32243,energy efficiency,core,core,32243,:2164. 13: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32323,energy efficiency,core,core,32323,g.cxx:2164. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32392,energy efficiency,core,core,32392,tring.cxx:2164. 15: Assuming 'base_in' is not equal to 16 in /opt/root_src/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32465,energy efficiency,core,core,32465,c/core/base/src/TString.cxx:2165. 16: Left side of '&&' is false in /opt/root_src/core/base/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32556,energy efficiency,core,core,32556,/src/TString.cxx:2165. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TStrin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32643,energy efficiency,core,core,32643,rc/TString.cxx:2167. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32722,energy efficiency,core,core,32722,ring.cxx:2167. 19: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32793,energy efficiency,core,core,32793,String.cxx:2169. 20: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/ba,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32869,energy efficiency,core,core,32869,ase/src/TString.cxx:2175. 21: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:32940,energy efficiency,core,core,32940,/base/src/TString.cxx:2175. 22: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/bas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33012,energy efficiency,core,core,33012,root_src/core/base/src/TString.cxx:2179. 23: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33080,energy efficiency,core,core,33080,/opt/root_src/core/base/src/TString.cxx:2179. 24: Calling 'TString::ULLtoa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33152,energy efficiency,core,core,33152,oa' in /opt/root_src/core/base/src/TString.cxx:2191. 25: 'base' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33236,energy efficiency,core,core,33236,_src/core/base/src/TString.cxx:2130. 26: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33308,energy efficiency,core,core,33308,opt/root_src/core/base/src/TString.cxx:2130. 27: 'base' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33394,energy efficiency,core,core,33394,/base/src/TString.cxx:2130. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33466,energy efficiency,core,core,33466,e/base/src/TString.cxx:2130. 29: Loop condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33511,energy efficiency,alloc,allocated,33511,is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33538,energy efficiency,core,core,33538,n /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33582,energy efficiency,alloc,allocated,33582, 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop conditio,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33616,energy efficiency,core,core,33616,String' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33709,energy efficiency,core,core,33709,t/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33754,energy efficiency,alloc,allocated,33754,king true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33788,energy efficiency,core,core,33788,rc/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33861,energy efficiency,core,core,33861,t_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33934,energy efficiency,core,core,33934,src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34040,energy efficiency,core,core,34040, 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TSt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34086,energy efficiency,core,core,34086,e/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34288,energy efficiency,core,core,34288, in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34398,energy efficiency,core,core,34398,ase/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/bas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34467,energy efficiency,core,core,34467,e/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34539,energy efficiency,core,core,34539,e/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34634,energy efficiency,core,core,34634,g.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34717,energy efficiency,core,core,34717,src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34788,energy efficiency,core,core,34788,re/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TStr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34874,energy efficiency,core,core,34874,String.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34949,energy efficiency,core,core,34949,ring.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35025,energy efficiency,core,core,35025,opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35096,energy efficiency,core,core,35096,c/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uni,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35168,energy efficiency,core,core,35168,tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded fr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35236,energy efficiency,core,core,35236, Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35308,energy efficiency,core,core,35308,cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35392,energy efficiency,core,core,35392,src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35464,energy efficiency,core,core,35464,/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35550,energy efficiency,core,core,35550,/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35622,energy efficiency,core,core,35622,/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35667,energy efficiency,alloc,allocated,35667,uming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35694,energy efficiency,core,core,35694,rue in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35738,energy efficiency,alloc,allocated,35738,2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35772,energy efficiency,core,core,35772,/opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35865,energy efficiency,core,core,35865,ot_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35981,energy efficiency,core,core,35981, Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:36027,energy efficiency,core,core,36027,/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:36284,energy efficiency,core,core,36284,anch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:36453,energy efficiency,core,core,36453,root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:36536,energy efficiency,core,core,36536,pt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:36614,energy efficiency,core,core,36614,t_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:36685,energy efficiency,core,core,36685,ot_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:36751,energy efficiency,core,core,36751,y in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:36912,energy efficiency,core,core,36912,k of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is call,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:36998,energy efficiency,core,core,36998,ng.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: ex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37166,energy efficiency,core,core,37166,from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uni,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37251,energy efficiency,core,core,37251,lized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37331,energy efficiency,core,core,37331,macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37411,energy efficiency,core,core,37411,ing 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37484,energy efficiency,core,core,37484,: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37547,energy efficiency,core,core,37547,/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37619,energy efficiency,core,core,37619,se/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37686,energy efficiency,core,core,37686,e/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37862,energy efficiency,core,core,37862,.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37962,energy efficiency,core,core,37962,cro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:38097,energy efficiency,core,core,38097,clude/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:38354,energy efficiency,core,core,38354,:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:38523,energy efficiency,core,core,38523,is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:38606,energy efficiency,core,core,38606,t/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:38684,energy efficiency,core,core,38684,core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:38755,energy efficiency,core,core,38755,r/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:38821,energy efficiency,core,core,38821,om 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:38982,energy efficiency,core,core,38982,cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is call,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39068,energy efficiency,core,core,39068,stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2339:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: ex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39236,energy efficiency,core,core,39236,from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uni,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39321,energy efficiency,core,core,39321,lized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39401,energy efficiency,core,core,39401,macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39481,energy efficiency,core,core,39481,ing 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39554,energy efficiency,core,core,39554,: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39617,energy efficiency,core,core,39617,/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: ',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39689,energy efficiency,core,core,39689,se/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39756,energy efficiency,core,core,39756,e/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39932,energy efficiency,core,core,39932,.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:40032,energy efficiency,core,core,40032,cro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:40167,energy efficiency,core,core,40167,clude/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:40424,energy efficiency,core,core,40424,:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:40583,energy efficiency,core,core,40583, 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:40661,energy efficiency,core,core,40661,e branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:40732,energy efficiency,core,core,40732,list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSiz,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:40804,energy efficiency,core,core,40804,macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true bran,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:40888,energy efficiency,core,core,40888, from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:40967,energy efficiency,core,core,40967,a_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41050,energy efficiency,core,core,41050,g.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41122,energy efficiency,core,core,41122,x-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41189,energy efficiency,core,core,41189,x:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the conditio,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41351,energy efficiency,core,core,41351,nux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41437,energy efficiency,core,core,41437,String.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slow,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41599,energy efficiency,core,core,41599,ing.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41672,energy efficiency,core,core,41672,/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41754,energy efficiency,core,core,41754,x:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41826,energy efficiency,core,core,41826,x:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41894,energy efficiency,core,core,41894,e/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41974,energy efficiency,core,core,41974,/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42061,energy efficiency,core,core,42061,/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_cop,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42134,energy efficiency,core,core,42134,TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'S,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42218,energy efficiency,core,core,42218, 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42297,energy efficiency,core,core,42297,darg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42369,energy efficiency,core,core,42369,g.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42468,energy efficiency,core,core,42468,xpanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42541,energy efficiency,core,core,42541,/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42614,energy efficiency,core,core,42614,ring.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true bra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42687,energy efficiency,core,core,42687,ring.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42754,energy efficiency,core,core,42754,re/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:237,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42916,energy efficiency,core,core,42916,x:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43002,energy efficiency,core,core,43002,. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43164,energy efficiency,core,core,43164,25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43237,energy efficiency,core,core,43237,.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43329,energy efficiency,core,core,43329,: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43402,energy efficiency,core,core,43402, Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43486,energy efficiency,core,core,43486,g.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43565,energy efficiency,core,core,43565,2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43637,energy efficiency,core,core,43637,:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an u,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43727,energy efficiency,core,core,43727,va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from ma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43800,energy efficiency,core,core,43800,m macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43864,energy efficiency,core,core,43864,rg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43937,energy efficiency,core,core,43937,xx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:44004,energy efficiency,core,core,44004,/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:44166,energy efficiency,core,core,44166,/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:44252,energy efficiency,core,core,44252,ring.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:44407,energy efficiency,core,core,44407,se/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:44577,energy efficiency,core,core,44577,TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:44677,energy efficiency,core,core,44677, not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:44812,energy efficiency,core,core,44812,TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45069,energy efficiency,core,core,45069, /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45228,energy efficiency,core,core,45228,OPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45306,energy efficiency,core,core,45306,a_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45377,energy efficiency,core,core,45377,ed va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45449,energy efficiency,core,core,45449, from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45532,energy efficiency,core,core,45532,turning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45610,energy efficiency,core,core,45610, va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45677,energy efficiency,core,core,45677,re/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45839,energy efficiency,core,core,45839,7:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBuff,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45925,energy efficiency,core,core,45925,initialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46087,energy efficiency,core,core,46087,g.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46159,energy efficiency,core,core,46159,ux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false br,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46241,energy efficiency,core,core,46241,String.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46313,energy efficiency,core,core,46313,/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46381,energy efficiency,core,core,46381,ase/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46461,energy efficiency,core,core,46461,TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46539,energy efficiency,core,core,46539,/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46612,energy efficiency,core,core,46612,/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_CO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46697,energy efficiency,core,core,46697,cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46777,energy efficiency,core,core,46777,clude/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46866,energy efficiency,core,core,46866,4. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/g,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46938,energy efficiency,core,core,46938,arargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowForma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47011,energy efficiency,core,core,47011,inux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is calle,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47110,energy efficiency,core,core,47110,:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from ma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47183,energy efficiency,core,core,47183,2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47247,energy efficiency,core,core,47247,e/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47320,energy efficiency,core,core,47320,/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47387,energy efficiency,core,core,47387,e/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47549,energy efficiency,core,core,47549,c/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47635,energy efficiency,core,core,47635,:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47790,energy efficiency,core,core,47790,String.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47960,energy efficiency,core,core,47960,x:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:48060,energy efficiency,core,core,48060, not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:48195,energy efficiency,core,core,48195,TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:48452,energy efficiency,core,core,48452, /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:48611,energy efficiency,core,core,48611,OPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:48689,energy efficiency,core,core,48689,a_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /us,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:48760,energy efficiency,core,core,48760,ed va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:48832,energy efficiency,core,core,48832, from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:48916,energy efficiency,core,core,48916,urning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:48995,energy efficiency,core,core,48995,a_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/std,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:49078,energy efficiency,core,core,49078,g.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is call,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:49150,energy efficiency,core,core,49150,x-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:49217,energy efficiency,core,core,49217,x:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:49379,energy efficiency,core,core,49379,nux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:49465,energy efficiency,core,core,49465,String.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:49620,energy efficiency,core,core,49620,rc/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TStri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:49786,energy efficiency,core,core,49786,07. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:49886,energy efficiency,core,core,49886,n is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is tr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:50021,energy efficiency,core,core,50021,22. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:50278,energy efficiency,core,core,50278,' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:50462,energy efficiency,core,core,50462,/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/ba,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:50534,energy efficiency,core,core,50534,/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:50603,energy efficiency,core,core,50603, /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:50681,energy efficiency,core,core,50681,' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:50752,energy efficiency,core,core,50752, from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:50824,energy efficiency,core,core,50824,nd() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/inc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:50908,energy efficiency,core,core,50908,x:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:50987,energy efficiency,core,core,50987,lude/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Repl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51054,energy efficiency,core,core,51054,arning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51216,energy efficiency,core,core,51216,nclude/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [cl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51302,energy efficiency,core,core,51302,2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51457,energy efficiency,core,core,51457,"rc/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51623,energy efficiency,core,core,51623,"cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '|",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51723,energy efficiency,core,core,51723,"ue branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51858,energy efficiency,core,core,51858,"Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlob",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52115,energy efficiency,core,core,52115,"' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from mac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52231,energy efficiency,core,core,52231,"ring.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52304,energy efficiency,core,core,52304,"/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the conditi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52388,energy efficiency,core,core,52388,"inux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52493,energy efficiency,core,core,52493,"panded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'non",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52575,energy efficiency,core,core,52575," 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52654,energy efficiency,core,core,52654,"0: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52738,energy efficiency,core,core,52738,"ring.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with an",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52810,energy efficiency,core,core,52810,"inux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52894,energy efficiency,core,core,52894,"l to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is ins",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52982,energy efficiency,core,core,52982," Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy funct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53064,energy efficiency,core,core,53064,"uments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53153,energy efficiency,core,core,53153,"g: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53250,energy efficiency,core,core,53250,"ker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53335,energy efficiency,core,core,53335,": Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53408,energy efficiency,core,core,53408,"h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53518,energy efficiency,core,core,53518,. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-sof,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53564,energy efficiency,core,core,53564,root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /op,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54088,energy efficiency,core,core,54088,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54134,energy efficiency,core,core,54134,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54314,energy efficiency,core,core,54314,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54360,energy efficiency,core,core,54360,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54538,energy efficiency,core,core,54538,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54577,energy efficiency,core,core,54577,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54618,energy efficiency,core,core,54618,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54662,energy efficiency,core,core,54662,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54701,energy efficiency,core,core,54701,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54742,energy efficiency,core,core,54742,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54784,energy efficiency,core,core,54784,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54825,energy efficiency,core,core,54825,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54866,energy efficiency,core,core,54866,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2073,integrability,buffer,buffer,2073,2: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2329,integrability,buffer,buffer,2329, is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: L,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2644,integrability,buffer,buffer,2644, true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2900,integrability,buffer,buffer,2900,/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5169,integrability,buffer,buffer,5169,t char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5335,integrability,buffer,buffer,5335,on is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8526,integrability,buffer,buffer,8526,ue in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8782,integrability,buffer,buffer,8782,ut writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9094,integrability,buffer,buffer,9094,rc/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not eq,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9350,integrability,buffer,buffer,9350,c/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51977,integrability,buffer,buffer,51977,"ot_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53692,integrability,buffer,buffer,53692,ng the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53948,integrability,buffer,buffer,53948,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:40558,interoperability,Format,Format,40558,se/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2384:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:45203,interoperability,Format,Format,45203,nded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is >,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:48586,interoperability,Format,Format,48586,nded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:49761,interoperability,Format,Format,49761,/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:50578,interoperability,Format,Format,50578,54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2449. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2469:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2461. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Assuming 'gPrintViaErrorHandler' is false in /opt/root_src/core/base/src/TString.cxx:2462. 5: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2462. 6: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51598,interoperability,Format,Format,51598,"c/core/base/src/TString.cxx:2465. 7: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 9: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 10: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:3163,modifiability,paramet,parameter,3163, such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:4820,modifiability,paramet,parameter,4820, /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning from 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 11: Returning from 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 12: Calling 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5158,modifiability,paramet,parameter,5158,ator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 13: Calling 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5253,modifiability,Deco,DecodeNameCycle,5253,inter' in /opt/root_src/core/base/inc/TString.h:300. 14: Assuming the condition is true in /opt/root_src/core/base/inc/TString.h:248. 15: '?' condition is true in /opt/root_src/core/base/inc/TString.h:248. 16: Returning pointer in /opt/root_src/core/base/inc/TString.h:248. 17: Returning from 'TString::GetPointer' in /opt/root_src/core/base/inc/TString.h:300. 18: Returning pointer in /opt/root_src/core/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/ba,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:5658,modifiability,paramet,parameter,5658,re/base/inc/TString.h:300. 19: Returning from 'TString::operator const char *' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 20: Passing value via 1st parameter 'namecycle' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 21: Calling 'TDirectory::Delete' in /opt/root_src/core/base/src/TDirectory.cxx:1180. 22: Assuming 'gDebug' is 0 in /opt/root_src/core/base/src/TDirectory.cxx:662. 23: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:662. 24: Passing value via 1st parameter 'buffer' in /opt/root_src/core/base/src/TDirectory.cxx:669. 25: Calling 'TDirectory::DecodeNameCycle' in /opt/root_src/core/base/src/TDirectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9605,modifiability,paramet,parameter,9605,h arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is fals,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10260,modifiability,paramet,parameter,10260, Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:10423,modifiability,paramet,parameter,10423, length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11402,modifiability,paramet,parameter,11402,r passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:11565,modifiability,paramet,parameter,11565,ge.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is > 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:249. /opt/root_src/core/base/src/TStorage.cxx:252:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'non,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12546,modifiability,paramet,parameter,12546,passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocCHook' is null in /opt/root_src/core/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52185,modifiability,paramet,parameter,52185," va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53471,modifiability,paramet,parameter,53471,in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non tr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:165,performance,memor,memory,165,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:843,performance,Memor,Memory,843,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:935,performance,memor,memory,935,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1875,performance,memor,memory,1875,c/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2066,performance,memor,memory,2066,2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2322,performance,memor,memory,2322,ndition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:117,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2637,performance,memor,memory,2637,tion is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDir,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2893,performance,memor,memory,2893,oot_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8519,performance,memor,memory,8519,ial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8775,performance,memor,memory,8775,g without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9087,performance,memor,memory,9087,/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9343,performance,memor,memory,9343,root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12693,performance,memor,memory,12693,/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14310,performance,Memor,Memory,14310,g false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14401,performance,memor,memory,14401, for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16325,performance,memor,memory,16325,oot_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16461,performance,memor,memory,16461,t/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19408,performance,Memor,Memory,19408,c/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19499,performance,memor,memory,19499,. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19781,performance,memor,memory,19781,e/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19950,performance,memor,memory,19950, 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22829,performance,Memor,Memory,22829,:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22920,performance,memor,memory,22920, 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23207,performance,memor,memory,23207,src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23380,performance,memor,memory,23380,cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26239,performance,Memor,Memory,26239,/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26330,performance,memor,memory,26330,src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26612,performance,memor,memory,26612,root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26786,performance,memor,memory,26786,ing.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TStri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29735,performance,Memor,Memory,29735,p condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is fal,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29826,performance,memor,memory,29826,ling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29998,performance,memor,memory,29998,e branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30076,performance,memor,memory,30076,:Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30236,performance,memor,memory,30236,ot_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TStri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33501,performance,Memor,Memory,33501,p condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Ta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33592,performance,memor,memory,33592,ling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is tru,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33764,performance,memor,memory,33764,e branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true bra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33988,performance,memor,memory,33988,nch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34148,performance,memor,memory,34148,/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35657,performance,Memor,Memory,35657,2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35748,performance,memor,memory,35748, Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35919,performance,memor,memory,35919, is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51970,performance,memor,memory,51970,"/opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53685,performance,memor,memory,53685, Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53941,performance,memor,memory,53941,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2033,reliability,doe,does,2033,oot_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2289,reliability,doe,does,2289,ring.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2604,reliability,doe,does,2604,g.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2860,reliability,doe,does,2860,2: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8486,reliability,doe,does,8486,r_offset' declared without an initial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_sr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8742,reliability,doe,does,8742,c/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9054,reliability,doe,does,9054,ming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TSto,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9310,reliability,doe,does,9310,of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41570,reliability,Slo,SlowFormat,41570,oot_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41721,reliability,slo,slowBufferSize,41721,src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42020,reliability,slo,slowBufferSize,42020,size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:42435,reliability,slo,slowBufferSize,42435,base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43135,reliability,Slo,SlowFormat,43135,ase/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43296,reliability,slo,slowBufferSize,43296,ase/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43694,reliability,slo,slowBufferSize,43694,TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:44548,reliability,Slo,SlowFormat,44548,pt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 53: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 54: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 55: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 56: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2384. 57: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2427:7: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46058,reliability,Slo,SlowFormat,46058,t_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46208,reliability,slo,slowBufferSize,46208,opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46498,reliability,slo,slowBufferSize,46498,n is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:4,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46833,reliability,slo,slowBufferSize,46833,ore/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47077,reliability,slo,slowBufferSize,47077,rc/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:47931,reliability,Slo,SlowFormat,47931,c/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2384. 38: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 39: Returning from 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 40: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2427. 41: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:2449:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2447. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TStrin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51937,reliability,doe,does,51937," 11: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53652,reliability,doe,does,53652,core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53908,reliability,doe,does,53908,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2212,security,secur,security,2212,cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.No,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2783,security,secur,security,2783,TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8665,security,secur,security,8665,:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamC,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9233,security,secur,security,9233,ranch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37122,security,Control,Control,37122,alyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:233,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39192,security,Control,Control,39192,alyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:238,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53831,security,secur,security,53831,:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:37122,testability,Control,Control,37122,alyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2316. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:233,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:39192,testability,Control,Control,39192,alyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2336. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2285. 11: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 12: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 13: Control jumps to line 2275 in /opt/root_src/core/base/src/TString.cxx:2287. 14: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2278. 15: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2278. 16: Assuming 'n' is < 'buflen' in /opt/root_src/core/base/src/TString.cxx:2278. 17: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2278. 18: 'vc' is 1 in /opt/root_src/core/base/src/TString.cxx:2290. 19: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2290. 20: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2291. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 22: Returning from 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 23: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2339. 24: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TString.cxx:238,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:165,usability,memor,memory,165,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:843,usability,Memor,Memory,843,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:935,usability,memor,memory,935,"Looks much better now, thanks for the fixes! Now, at ROOT master, only 27 warnings appearing:. ```. /opt/root_src/core/base/inc/TString.h:242:67: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2338. 2: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2268. 3: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 5: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 6: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 7: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 8: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 9: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to fun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:1875,usability,memor,memory,1875,c/core/base/src/TString.cxx:1220. 10: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2268. 11: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2066,usability,memor,memory,2066,2278. 12: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2144,usability,support,support,2144,2278. 13: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 14: Calling 'TString::Clobber' in /opt/root_src/core/base/src/TString.cxx:2283. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2322,usability,memor,memory,2322,ndition is false in /opt/root_src/core/base/src/TString.cxx:1208. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:117,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2400,usability,support,support,2400,lse branch in /opt/root_src/core/base/src/TString.cxx:1208. 17: Assuming 'nc' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:1213. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1213. 19: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2637,usability,memor,memory,2637,tion is true in /opt/root_src/core/base/src/TString.cxx:1219. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDir,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2715,usability,support,support,2715,ranch in /opt/root_src/core/base/src/TString.cxx:1219. 21: Calling 'TString::SetLongPointer' in /opt/root_src/core/base/src/TString.cxx:1223. 22: Potential memory leak in /opt/root_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:5,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2893,usability,memor,memory,2893,oot_src/core/base/inc/TString.h:242. /opt/root_src/core/base/src/TDatime.cxx:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:2971,usability,support,support,2971,1:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDatime.cxx:141. /opt/root_src/core/base/src/TDirectory.cxx:1242:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TDirectory.cxx:1242. /opt/root_src/core/base/src/TDirectory.cxx:1264:13: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'name' is not equal to null in /opt/root_src/core/base/src/TDirectory.cxx:1176. 2: Left side of '||' is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 3: Assuming the condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1176. 4: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1176. 5: Calling 'TString::operator+=' in /opt/root_src/core/base/src/TDirectory.cxx:1179. 6: 'cs' is non-null in /opt/root_src/core/base/inc/TString.h:577. 7: '?' condition is true in /opt/root_src/core/base/inc/TString.h:577. 8: Calling 'TString::Append' in /opt/root_src/core/base/inc/TString.h:577. 9: Value assigned to 'mask.fRep..fLong.fData' in /opt/root_src/core/base/inc/TString.h:568. 10: Returning ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:6300,usability,Close,CloseFiles,6300,ectory.cxx:669. 26: Assuming 'buffer' is null in /opt/root_src/core/base/src/TDirectory.cxx:1256. 27: '?' condition is false in /opt/root_src/core/base/src/TDirectory.cxx:1256. 28: 'ni' is null in /opt/root_src/core/base/src/TDirectory.cxx:1258. 29: Taking false branch in /opt/root_src/core/base/src/TDirectory.cxx:1258. 30: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TDirectory.cxx:1264. /opt/root_src/core/base/src/TROOT.cxx:1169:75: warning: The right operand of '+' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:3050. 2: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 3: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:3050. 4: Calling 'TROOT::EndOfProcessCleanups' in /opt/root_src/core/base/src/TROOT.cxx:3051. 5: expanded from macro 'gROOT' in /opt/root_src/core/base/inc/TROOT.h:406. 6: Calling 'TROOT::CloseFiles' in /opt/root_src/core/base/src/TROOT.cxx:1207. 7: Assuming field 'fFiles' is null in /opt/root_src/core/base/src/TROOT.cxx:1127. 8: Left side of '&&' is false in /opt/root_src/core/base/src/TROOT.cxx:1127. 9: Assuming field 'fSockets' is non-null in /opt/root_src/core/base/src/TROOT.cxx:1133. 10: Left side of '&&' is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 11: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1133. 12: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1133. 13: Assuming the condition is false in /opt/root_src/core/base/src/TROOT.cxx:1134. 14: Taking false branch in /opt/root_src/core/base/src/TROOT.cxx:1134. 15: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1142. 16: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 17: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1142. 18: Loop condition is true. Entering loop body in /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8519,usability,memor,memory,8519,ial value in /opt/root_src/core/base/src/TROOT.cxx:1165. 22: Calling 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8597,usability,support,support,8597,ter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 23: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 24: Returning without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8775,usability,memor,memory,8775,g without writing to '*' in /opt/root_src/core/meta/inc/TInterpreter.h:391. 25: Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:8853,usability,support,support,8853, Returning from 'TInterpreter::CallFunc_SetFuncProto' in /opt/root_src/core/base/src/TROOT.cxx:1167. 26: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 27: Assuming the condition is true in /opt/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initial,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9087,usability,memor,memory,9087,/root_src/core/base/src/TROOT.cxx:1168. 28: expanded from macro 'gInterpreter' in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9165,usability,support,support,9165,in /opt/root_src/core/meta/inc/TInterpreter.h:560. 29: Taking true branch in /opt/root_src/core/base/src/TROOT.cxx:1168. 30: The right operand of '+' is a garbage value in /opt/root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9343,usability,memor,memory,9343,root_src/core/base/src/TROOT.cxx:1169. /opt/root_src/core/base/src/TRegexp.cxx:172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:9421,usability,support,support,9421,172:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:172. /opt/root_src/core/base/src/TRegexp.cxx:188:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TRegexp.cxx:188. /opt/root_src/core/base/src/TStorage.cxx:209:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming 'fgReAllocHook' is null in /opt/root_src/core/base/src/TStorage.cxx:192. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:192. 3: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:199. 4: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:203. 5: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:203. 6: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:206. 7: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:206. 8: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:209. /opt/root_src/core/base/src/TStorage.cxx:249:7: warning: Null pointer passed to 1st pa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:12693,usability,memor,memory,12693,/base/src/TStorage.cxx:228. 2: Left side of '&&' is false in /opt/root_src/core/base/src/TStorage.cxx:228. 3: Assuming 'oldsize' is not equal to 'size' in /opt/root_src/core/base/src/TStorage.cxx:234. 4: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:234. 5: 'vp' initialized here in /opt/root_src/core/base/src/TStorage.cxx:238. 6: Assuming 'vp' is equal to null in /opt/root_src/core/base/src/TStorage.cxx:242. 7: Taking true branch in /opt/root_src/core/base/src/TStorage.cxx:242. 8: Assuming 'ovp' is not equal to null in /opt/root_src/core/base/src/TStorage.cxx:245. 9: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:245. 10: Assuming 'size' is <= 'oldsize' in /opt/root_src/core/base/src/TStorage.cxx:248. 11: Taking false branch in /opt/root_src/core/base/src/TStorage.cxx:248. 12: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TStorage.cxx:252. /opt/root_src/core/base/src/TString.cxx:1032:16: warning: Potential memory leak [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14310,usability,Memor,Memory,14310,g false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:14401,usability,memor,memory,14401, for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 10: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 11: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 12: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 13: Assuming 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 15: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 17: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 19: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 20: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 21: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 22: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 23: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2158. 24: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2160. 25: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2160. 26: Calling 'TString::Remove' in /opt/root_src/core/base/src/TString.cxx:2162. 27: Calling 'TString::Replace' in /opt/root_src/core/base/inc/TString.h:677. 28: 'pos' is > 'kNPOS' in /opt/root_src/core/base/src/TString.cxx:1003. 29: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:1003. 30: 'pos' is <= 'len' in /opt/root_src/core/base/src/TString.cxx:1003. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1003. 32: 'n1' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1008. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1008. 34: 'n2' is >= 0 in /opt/root_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16325,usability,memor,memory,16325,oot_src/core/base/src/TString.cxx:1012. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1012. 36: 'cs' is null in /opt/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:16461,usability,memor,memory,16461,t/root_src/core/base/src/TString.cxx:1018. 37: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1018. 38: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:1026. 39: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1026. 40: 'n1' is not equal to 'n2' in /opt/root_src/core/base/src/TString.cxx:1027. 41: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1027. 42: 'rem' is not equal to 0 in /opt/root_src/core/base/src/TString.cxx:1028. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1028. 44: 'n1' is > 'n2' in /opt/root_src/core/base/src/TString.cxx:1029. 45: Taking true branch in /opt/root_src/core/base/src/TString.cxx:1029. 46: 'n2' is 0 in /opt/root_src/core/base/src/TString.cxx:1030. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1030. 48: Potential memory leak in /opt/root_src/core/base/src/TString.cxx:1032. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19408,usability,Memor,Memory,19408,c/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19499,usability,memor,memory,19499,. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19781,usability,memor,memory,19781,e/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:19950,usability,memor,memory,19950, 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1922. 41: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 42: Potential leak of memory pointed to by 'str.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22829,usability,Memor,Memory,22829,:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:22920,usability,memor,memory,22920, 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 27: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:174. 28: Taking false branch in /opt/root_src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23207,usability,memor,memory,23207,src/core/base/src/TString.cxx:174. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:178. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:23380,usability,memor,memory,23380,cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:178. 39: Returning from copy constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1925. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:1935:1: warning: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26239,usability,Memor,Memory,26239,/base/src/TString.cxx:1914. 24: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26330,usability,memor,memory,26330,src/TString.cxx:1918. 25: Taking false branch in /opt/root_src/core/base/src/TString.cxx:1918. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 27: 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26612,usability,memor,memory,26612,root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:26786,usability,memor,memory,26786,ing.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 35: 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 36: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 37: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 38: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 39: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:1924. 40: Loop condition is false. Execution continues on line 1934 in /opt/root_src/core/base/src/TString.cxx:1928. 41: Potential leak of memory pointed to by 'str_ref0.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:1935. /opt/root_src/core/base/src/TString.cxx:2175:8: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TStri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29735,usability,Memor,Memory,29735,p condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 26: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is fal,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29826,usability,memor,memory,29826,ling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 27: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 28: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:29998,usability,memor,memory,29998,e branch in /opt/root_src/core/base/src/TString.cxx:106. 29: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30076,usability,memor,memory,30076,:Init' in /opt/root_src/core/base/src/TString.cxx:108. 30: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:30236,usability,memor,memory,30236,ot_src/core/base/src/TString.cxx:250. 32: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 33: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 34: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 36: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 38: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 39: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 40: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 41: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2174. 42: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2175. /opt/root_src/core/base/src/TString.cxx:2193:12: warning: Potential leak of memory pointed to by field 'fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming 'base_in' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 2: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 3: Assuming 'base_in' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 4: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 5: Assuming 'base_out' is >= 2 in /opt/root_src/core/base/src/TString.cxx:2153. 6: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2153. 7: Assuming 'base_out' is <= 36 in /opt/root_src/core/base/src/TString.cxx:2153. 8: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2153. 9: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2160. 10: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2160. 11: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2164. 12: Left side of '&&' is true in /opt/root_src/core/base/src/TStri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33501,usability,Memor,Memory,33501,p condition is false. Exiting loop in /opt/root_src/core/base/src/TString.cxx:2137. 30: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Ta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33592,usability,memor,memory,33592,ling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 31: Assuming 'cs' is non-null in /opt/root_src/core/base/src/TString.cxx:106. 32: Taking true branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is tru,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33764,usability,memor,memory,33764,e branch in /opt/root_src/core/base/src/TString.cxx:106. 33: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:108. 34: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 35: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true bra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:33988,usability,memor,memory,33988,nch in /opt/root_src/core/base/src/TString.cxx:250. 36: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 37: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:34148,usability,memor,memory,34148,/core/base/src/TString.cxx:254. 38: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 39: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 40: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 41: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 42: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 43: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:108. 44: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2142. 45: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:2191. 46: 'isSigned' is false in /opt/root_src/core/base/src/TString.cxx:2192. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2192. 48: Potential leak of memory pointed to by field 'fData' in /opt/root_src/core/base/src/TString.cxx:2193. /opt/root_src/core/base/src/TString.cxx:2255:15: warning: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2224. 2: Loop condition is false. Execution continues on line 2234 in /opt/root_src/core/base/src/TString.cxx:2224. 3: 'nrDiff' is <= 1 in /opt/root_src/core/base/src/TString.cxx:2236. 4: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2236. 5: Loop condition is true. Entering loop body in /opt/root_src/core/base/src/TString.cxx:2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35657,usability,Memor,Memory,35657,2245. 6: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2250. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35748,usability,memor,memory,35748, Taking true branch in /opt/root_src/core/base/src/TString.cxx:2250. 8: Calling constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 9: '?' condition is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:35919,usability,memor,memory,35919, is false in /opt/root_src/core/base/src/TString.cxx:208. 10: Calling 'TString::Init' in /opt/root_src/core/base/src/TString.cxx:209. 11: 'capacity' is >= 0 in /opt/root_src/core/base/src/TString.cxx:250. 12: Taking false branch in /opt/root_src/core/base/src/TString.cxx:250. 13: 'nchar' is >= 0 in /opt/root_src/core/base/src/TString.cxx:254. 14: Taking false branch in /opt/root_src/core/base/src/TString.cxx:254. 15: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:258. 16: Taking false branch in /opt/root_src/core/base/src/TString.cxx:258. 17: Assuming 'capacity' is >= kMinCap in /opt/root_src/core/base/src/TString.cxx:266. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:266. 19: Memory is allocated in /opt/root_src/core/base/src/TString.cxx:271. 20: Returned allocated memory in /opt/root_src/core/base/src/TString.cxx:209. 21: Returning from constructor for 'TString' in /opt/root_src/core/base/src/TString.cxx:2251. 22: Potential leak of memory pointed to by 'tok.fRep..fLong.fData' in /opt/root_src/core/base/src/TString.cxx:2255. /opt/root_src/core/base/src/TString.cxx:2316:4: warning: va_end() is called on an uninitialized va_list [clang-analyzer-valist.Uninitialized]. 1: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 2: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2314. 3: expanded from macro 'va_start' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:47. 4: Calling 'TString::FormImp' in /opt/root_src/core/base/src/TString.cxx:2315. 5: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2278. 6: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2278. 7: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2279. 8: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2284. 9: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 10: Initialized va_list in /opt/root_src/core/base/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41709,usability,hint,hint,41709,nch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:41863,usability,hint,hint,41863,false in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2422. 10: Assuming 'n' is >= 'fld_size' in /opt/root_src/core/base/src/TString.cxx:2422. 11: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 18: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 19: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 20: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 21: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 24: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 25: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 26: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/std,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:43283,usability,hint,hint,43283,pt/root_src/core/base/src/TString.cxx:2373. 27: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: Assuming 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 32: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 33: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 34: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 35: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 36: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 37: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2382. 38: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2355. 39: Assuming 'hint' is <= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 40: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2356. 41: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2373. 42: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2373. 43: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2374. 44: 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 45: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 46: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 47: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. 48: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2380. 49: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 50: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2381. 51: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 52: e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46196,usability,hint,hint,46196,ing 'Format' in /opt/root_src/core/base/src/TString.cxx:2448. 5: 'gBfree' is equal to null in /opt/root_src/core/base/src/TString.cxx:2407. 6: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:46350,usability,hint,hint,46350, branch in /opt/root_src/core/base/src/TString.cxx:2407. 7: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2413. 8: Assuming the condition is true in /opt/root_src/core/base/src/TString.cxx:2422. 9: Left side of '||' is true in /opt/root_src/core/base/src/TString.cxx:2422. 10: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 11: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 12: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 13: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 14: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 15: Calling 'SlowFormat' in /opt/root_src/core/base/src/TString.cxx:2425. 16: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2355. 17: 'hint' is > 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2356. 18: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2356. 19: 'hint' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 20: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2359. 21: 'slowBufferSize' is >= 0 in /opt/root_src/core/base/src/TString.cxx:2359. 22: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2359. 23: Assuming the condition is false in /opt/root_src/core/base/src/TString.cxx:2373. 24: Left side of '||' is false in /opt/root_src/core/base/src/TString.cxx:2373. 25: Assuming 'n' is >= 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2373. 26: Taking true branch in /opt/root_src/core/base/src/TString.cxx:2373. 27: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2374. 28: Assuming 'n' is not equal to 'slowBufferSize' in /opt/root_src/core/base/src/TString.cxx:2375. 29: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2375. 30: 'n' is > 0 in /opt/root_src/core/base/src/TString.cxx:2376. 31: Taking false branch in /opt/root_src/core/base/src/TString.cxx:2376. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:51970,usability,memor,memory,51970,"/opt/root_src/core/base/src/TString.cxx:2422. 12: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:52048,usability,support,support,52048,"c/core/base/src/TString.cxx:2423. 13: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 14: Initialized va_list in /opt/root_src/core/base/src/TString.cxx:2424. 15: expanded from macro 'R__VA_COPY' in /opt/root_src/core/base/inc/Varargs.h:48. 16: expanded from macro '__va_copy' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:54. 17: Ended va_list in /opt/root_src/core/base/src/TString.cxx:2427. 18: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. 19: Returning from 'Format' in /opt/root_src/core/base/src/TString.cxx:2465. 20: va_end() is called on an uninitialized va_list in /opt/root_src/core/base/src/TString.cxx:2469. 21: expanded from macro 'va_end' in /usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h:48. /opt/root_src/core/base/src/TSystem.cxx:1243:13: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119. /opt/root_src/core/base/src/TSystem.cxx:1020:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Calling 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 2: Assuming the condition is false in /opt/root_src/core/base/inc/TString.h:407. 3: Returning zero, which participates in a condition later in /opt/root_src/core/base/inc/TString.h:407. 4: Returning from 'TString::IsNull' in /opt/root_src/core/base/src/TSystem.cxx:1008. 5: Left side of '||' is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 6: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53685,usability,memor,memory,53685, Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1008. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53763,usability,support,support,53763,8. 7: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1008. 8: Assuming 'gGlobalMutex' is null in /opt/root_src/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:53941,usability,memor,memory,53941,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/issues/7412:54019,usability,support,support,54019,/core/base/src/TSystem.cxx:1011. 9: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 10: Left side of '&&' is false in /opt/root_src/core/base/src/TSystem.cxx:1011. 11: expanded from macro 'R__LOCKGUARD2' in /opt/root_src/core/base/inc/TVirtualMutex.h:94. 12: 'buf' initialized to a null pointer value in /opt/root_src/core/base/src/TSystem.cxx:1014. 13: Assuming the condition is false in /opt/root_src/core/base/src/TSystem.cxx:1015. 14: Taking false branch in /opt/root_src/core/base/src/TSystem.cxx:1015. 15: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/core/base/src/TSystem.cxx:1020. /opt/root_src/core/base/src/TSystem.cxx:1243:13: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/core/base/src/TSystem.cxx:1243. /opt/root_src/core/base/src/TSystem.cxx:3795:10: warning: Value stored to 'result' is never read [clang-analyzer-deadcode.DeadStores]. 1: Value stored to 'result' is never read in /opt/root_src/core/base/src/TSystem.cxx:3795. /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]. /opt/root_src/core/base/inc/TString.h. /opt/root_src/core/base/src/TDatime.cxx. /opt/root_src/core/base/src/TDirectory.cxx. /opt/root_src/core/base/src/TROOT.cxx. /opt/root_src/core/base/src/TRegexp.cxx. /opt/root_src/core/base/src/TStorage.cxx. /opt/root_src/core/base/src/TString.cxx. /opt/root_src/core/base/src/TSystem.cxx. /opt/root_src/core/cont/inc/TBits.h. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
https://github.com/root-project/root/pull/7413:53,deployability,build,build,53,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:145,deployability,instal,installed,145,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:177,deployability,depend,dependencies,177,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:201,deployability,configurat,configuration,201,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:478,deployability,depend,dependencies,478,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:540,deployability,configurat,configuration,540,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:682,deployability,build,builds,682,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:715,deployability,patch,patch,715,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:177,integrability,depend,dependencies,177,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:201,integrability,configur,configuration,201,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:478,integrability,depend,dependencies,478,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:540,integrability,configur,configuration,540,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:390,interoperability,distribut,distributed,390,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:177,modifiability,depend,dependencies,177,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:201,modifiability,configur,configuration,201,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:478,modifiability,depend,dependencies,478,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:540,modifiability,configur,configuration,540,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:215,performance,time,time,215,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:554,performance,time,time,554,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:177,safety,depend,dependencies,177,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:327,safety,test,tests,327,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:478,safety,depend,dependencies,478,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:715,safety,patch,patch,715,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:201,security,configur,configuration,201,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:540,security,configur,configuration,540,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:715,security,patch,patch,715,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:177,testability,depend,dependencies,177,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:327,testability,test,tests,327,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:478,testability,depend,dependencies,478,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:354,usability,user,users,354,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:584,usability,user,user,584,"@MrCarroll we decided to clarify the meaning of this build option further by calling it `test_distrdf_pyspark`. Indeed, checking that pyspark is installed on the system and its dependencies are met at configuration time is needed only if it is foreseen that this feature will be actually used, e.g. when running the respective tests. In general, not all users will be interested in running distributed RDataFrame computations through pyspark, and for those who will the pyspark dependencies will be optional and only needed at runtime, not configuration time (i.e. what happens for a user of pyspark normally). The option is now OFF by default, could you please let me know if your builds run succesfully with this patch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7413:21,usability,help,help,21,"Thanks again for the help and sorry for the delay in getting back to you, it's all good on my side now and is working as expected :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7413
https://github.com/root-project/root/pull/7415:115,availability,down,downloading,115,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:420,availability,down,down,420,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:19,deployability,build,builds,19,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:311,energy efficiency,optim,optimal,311,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:31,interoperability,specif,specific,31,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:40,interoperability,architectur,architectures,40,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:484,interoperability,specif,specified,484,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:580,interoperability,mismatch,mismatch,580,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:622,interoperability,specif,specified,622,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:645,interoperability,specif,specific,645,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:654,interoperability,architectur,architecture,654,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:410,performance,throttl,throttled,410,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:745,safety,compl,completely,745,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:745,security,compl,completely,745,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:74,usability,user,users,74,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:400,usability,user,users,400,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:443,usability,support,supports,443,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:611,usability,user,users,611,"In regards to ROOT builds with specific architectures: I believe that the users explicitly setting ""-march=avx"" or downloading a binary tagged as ""avx"" would assume that the code they are running is always avx. So it might surprise them negatively that the default runtime option I introduced is ""find the most optimal computation library"". On the other hand, it would also be a negative surprise if users get throttled down if their hardware supports a faster library than what they specified. The solution discussed in the Monday meeting was issuing a warning for that possible mismatch in CMake, in case the users have specified themselves a specific architecture. BUT, if we provide binaries, it's just us that will get the warning, so it's completely useless. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:42,deployability,version,version,42,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:90,deployability,build,build,90,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:318,deployability,version,version,318,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:42,integrability,version,version,42,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:238,integrability,configur,configure,238,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:318,integrability,version,version,318,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:42,modifiability,version,version,42,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:238,modifiability,configur,configure,238,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:318,modifiability,version,version,318,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:31,performance,perform,performant,31,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:248,performance,time,time,248,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:307,performance,perform,performant,307,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:238,security,configur,configure,238,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:287,security,expos,exposed,287,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:31,usability,perform,performant,31,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:53,usability,user,users,53,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:277,usability,user,users,277,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:307,usability,perform,performant,307,"We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:50,deployability,log,logic,50,"> Looks good to me ! I agree with the implemented logic. > . > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:207,energy efficiency,load,loaded,207,"> Looks good to me ! I agree with the implemented logic. > . > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:144,integrability,messag,message,144,"> Looks good to me ! I agree with the implemented logic. > . > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:255,integrability,messag,message,255,"> Looks good to me ! I agree with the implemented logic. > . > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:144,interoperability,messag,message,144,"> Looks good to me ! I agree with the implemented logic. > . > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:255,interoperability,messag,message,255,"> Looks good to me ! I agree with the implemented logic. > . > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:207,performance,load,loaded,207,"> Looks good to me ! I agree with the implemented logic. > . > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:50,safety,log,logic,50,"> Looks good to me ! I agree with the implemented logic. > . > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:50,security,log,logic,50,"> Looks good to me ! I agree with the implemented logic. > . > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:50,testability,log,logic,50,"> Looks good to me ! I agree with the implemented logic. > . > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:44,deployability,version,version,44,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:92,deployability,build,build,92,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:320,deployability,version,version,320,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:44,integrability,version,version,44,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:240,integrability,configur,configure,240,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:320,integrability,version,version,320,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:44,modifiability,version,version,44,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:240,modifiability,configur,configure,240,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:320,modifiability,version,version,320,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:33,performance,perform,performant,33,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:250,performance,time,time,250,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:309,performance,perform,performant,309,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:240,security,configur,configure,240,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:289,security,expos,exposed,289,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:33,usability,perform,performant,33,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:55,usability,user,users,55,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:279,usability,user,users,279,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/pull/7415:309,usability,perform,performant,309,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7415
https://github.com/root-project/root/issues/7417:177,integrability,sub,submit,177,"@lmoneta Dear Mentor,. I'm interested in contributing to the RooFit and I would like to work on this issue. Can you please elaborate more on what needs to be done so that I can submit a Pull Request for the same? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:154,availability,error,error,154,"Hello @Harshalzzzzzzz ! In this case we need to inspect the model content and when we find two different nodes with the same name we emit a warning or an error message. . This could be done when calling `pdf.fitTo`, i.e. before creating the RooNLLVar object or during its creation. . See https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292. For inspecting the computational tree graph, you can look at functions like `RooAbsArg::servers()` or `RooAbsArg::getComponets`. Thank you for your offer to contribute to RooFit. Lorenzo. P.S. If you look for something easier, we have maybe this old issue, easier to fix and it is has some relation to the work you have done on the Pythonization. See https://sft.its.cern.ch/jira/browse/ROOT-2784.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:60,energy efficiency,model,model,60,"Hello @Harshalzzzzzzz ! In this case we need to inspect the model content and when we find two different nodes with the same name we emit a warning or an error message. . This could be done when calling `pdf.fitTo`, i.e. before creating the RooNLLVar object or during its creation. . See https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292. For inspecting the computational tree graph, you can look at functions like `RooAbsArg::servers()` or `RooAbsArg::getComponets`. Thank you for your offer to contribute to RooFit. Lorenzo. P.S. If you look for something easier, we have maybe this old issue, easier to fix and it is has some relation to the work you have done on the Pythonization. See https://sft.its.cern.ch/jira/browse/ROOT-2784.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:160,integrability,messag,message,160,"Hello @Harshalzzzzzzz ! In this case we need to inspect the model content and when we find two different nodes with the same name we emit a warning or an error message. . This could be done when calling `pdf.fitTo`, i.e. before creating the RooNLLVar object or during its creation. . See https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292. For inspecting the computational tree graph, you can look at functions like `RooAbsArg::servers()` or `RooAbsArg::getComponets`. Thank you for your offer to contribute to RooFit. Lorenzo. P.S. If you look for something easier, we have maybe this old issue, easier to fix and it is has some relation to the work you have done on the Pythonization. See https://sft.its.cern.ch/jira/browse/ROOT-2784.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:160,interoperability,messag,message,160,"Hello @Harshalzzzzzzz ! In this case we need to inspect the model content and when we find two different nodes with the same name we emit a warning or an error message. . This could be done when calling `pdf.fitTo`, i.e. before creating the RooNLLVar object or during its creation. . See https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292. For inspecting the computational tree graph, you can look at functions like `RooAbsArg::servers()` or `RooAbsArg::getComponets`. Thank you for your offer to contribute to RooFit. Lorenzo. P.S. If you look for something easier, we have maybe this old issue, easier to fix and it is has some relation to the work you have done on the Pythonization. See https://sft.its.cern.ch/jira/browse/ROOT-2784.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:66,performance,content,content,66,"Hello @Harshalzzzzzzz ! In this case we need to inspect the model content and when we find two different nodes with the same name we emit a warning or an error message. . This could be done when calling `pdf.fitTo`, i.e. before creating the RooNLLVar object or during its creation. . See https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292. For inspecting the computational tree graph, you can look at functions like `RooAbsArg::servers()` or `RooAbsArg::getComponets`. Thank you for your offer to contribute to RooFit. Lorenzo. P.S. If you look for something easier, we have maybe this old issue, easier to fix and it is has some relation to the work you have done on the Pythonization. See https://sft.its.cern.ch/jira/browse/ROOT-2784.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:154,performance,error,error,154,"Hello @Harshalzzzzzzz ! In this case we need to inspect the model content and when we find two different nodes with the same name we emit a warning or an error message. . This could be done when calling `pdf.fitTo`, i.e. before creating the RooNLLVar object or during its creation. . See https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292. For inspecting the computational tree graph, you can look at functions like `RooAbsArg::servers()` or `RooAbsArg::getComponets`. Thank you for your offer to contribute to RooFit. Lorenzo. P.S. If you look for something easier, we have maybe this old issue, easier to fix and it is has some relation to the work you have done on the Pythonization. See https://sft.its.cern.ch/jira/browse/ROOT-2784.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:154,safety,error,error,154,"Hello @Harshalzzzzzzz ! In this case we need to inspect the model content and when we find two different nodes with the same name we emit a warning or an error message. . This could be done when calling `pdf.fitTo`, i.e. before creating the RooNLLVar object or during its creation. . See https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292. For inspecting the computational tree graph, you can look at functions like `RooAbsArg::servers()` or `RooAbsArg::getComponets`. Thank you for your offer to contribute to RooFit. Lorenzo. P.S. If you look for something easier, we have maybe this old issue, easier to fix and it is has some relation to the work you have done on the Pythonization. See https://sft.its.cern.ch/jira/browse/ROOT-2784.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:60,security,model,model,60,"Hello @Harshalzzzzzzz ! In this case we need to inspect the model content and when we find two different nodes with the same name we emit a warning or an error message. . This could be done when calling `pdf.fitTo`, i.e. before creating the RooNLLVar object or during its creation. . See https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292. For inspecting the computational tree graph, you can look at functions like `RooAbsArg::servers()` or `RooAbsArg::getComponets`. Thank you for your offer to contribute to RooFit. Lorenzo. P.S. If you look for something easier, we have maybe this old issue, easier to fix and it is has some relation to the work you have done on the Pythonization. See https://sft.its.cern.ch/jira/browse/ROOT-2784.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:154,usability,error,error,154,"Hello @Harshalzzzzzzz ! In this case we need to inspect the model content and when we find two different nodes with the same name we emit a warning or an error message. . This could be done when calling `pdf.fitTo`, i.e. before creating the RooNLLVar object or during its creation. . See https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292. For inspecting the computational tree graph, you can look at functions like `RooAbsArg::servers()` or `RooAbsArg::getComponets`. Thank you for your offer to contribute to RooFit. Lorenzo. P.S. If you look for something easier, we have maybe this old issue, easier to fix and it is has some relation to the work you have done on the Pythonization. See https://sft.its.cern.ch/jira/browse/ROOT-2784.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:84,availability,error,error,84,@lmoneta Do I need to check cmdList parameter for same name and then emit a warning/error about the same? If yes then should I add the condition within [this](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292) itself ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:36,modifiability,paramet,parameter,36,@lmoneta Do I need to check cmdList parameter for same name and then emit a warning/error about the same? If yes then should I add the condition within [this](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292) itself ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:84,performance,error,error,84,@lmoneta Do I need to check cmdList parameter for same name and then emit a warning/error about the same? If yes then should I add the condition within [this](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292) itself ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:84,safety,error,error,84,@lmoneta Do I need to check cmdList parameter for same name and then emit a warning/error about the same? If yes then should I add the condition within [this](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292) itself ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:84,usability,error,error,84,@lmoneta Do I need to check cmdList parameter for same name and then emit a warning/error about the same? If yes then should I add the condition within [this](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1292) itself ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:77,availability,error,error,77,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:331,availability,failur,failure,331,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:331,deployability,fail,failure,331,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:83,integrability,messag,message,83,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:172,integrability,messag,messages,172,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:83,interoperability,messag,message,83,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:172,interoperability,messag,messages,172,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:77,performance,error,error,77,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:331,performance,failur,failure,331,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:331,reliability,fail,failure,331,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:77,safety,error,error,77,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:297,safety,except,exception,297,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7417:77,usability,error,error,77,"""when we find two different nodes with the same name we emit a warning or an error message"" - I'd like to add that when I make a fit with many pdfs (with many warnings and messages), such a warning can be easily unnoticed, while the results will be wrong (see the previous link). I vote for a C++ exception in this case and a loud failure as early as possible (but it's up to you, because I can't imagine all cases for RooFit).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7417
https://github.com/root-project/root/issues/7418:10,testability,simpl,simple,10,"@pcanal a simple work-around would be to check whether `gEnv` and / or `gROOT` are `nullptr` in `DefaultErrorHandler`, and if so, to assume sane defaults rather than initializing ""the system"". Comments, opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7418
https://github.com/root-project/root/issues/7418:10,usability,simpl,simple,10,"@pcanal a simple work-around would be to check whether `gEnv` and / or `gROOT` are `nullptr` in `DefaultErrorHandler`, and if so, to assume sane defaults rather than initializing ""the system"". Comments, opinions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7418
https://github.com/root-project/root/pull/7419:561,availability,consist,consistent,561,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:1062,deployability,fail,fails,1062,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:1263,deployability,releas,release,1263,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:458,energy efficiency,optim,optimization,458,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:1080,integrability,messag,message,1080,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:1080,interoperability,messag,message,1080,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:458,performance,optimiz,optimization,458,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:526,reliability,doe,does,526,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:881,reliability,doe,does,881,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:1062,reliability,fail,fails,1062,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:300,testability,simpl,simple,300,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:725,testability,Verif,Verify,725,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:300,usability,simpl,simple,300,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:561,usability,consist,consistent,561,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/pull/7419:1126,usability,confirm,confirms,1126,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:. ```c. #include <stdio.h>. int main() {. printf(""Hello from JIT\n"");. }. ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR. > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7419
https://github.com/root-project/root/issues/7421:78,interoperability,format,format,78,You would like to have the whole Reference Guide generated via Doxygen in pdf format ? . Doxygen is able to generate Latex (then pdf) ... We can try but I am afraid that will be a monster file...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:43,usability,Guid,Guide,43,You would like to have the whole Reference Guide generated via Doxygen in pdf format ? . Doxygen is able to generate Latex (then pdf) ... We can try but I am afraid that will be a monster file...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:198,interoperability,format,format,198,"I'm saying only about the Manual, not the reference guide. пн, 15 мар. 2021 г., 17:54 Olivier Couet ***@***.***>:. > You would like to have the whole Reference Guide generated via Doxygen in. > pdf format ? > Doxygen is able to generate Latex (then pdf) ... We can try but I am. > afraid that will be a monster file... >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/7421#issuecomment-799484591>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAJGF4TWOCCX734TA6DZN5LTDYNTFANCNFSM4Y4OKGDA>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:364,security,auth,authored,364,"I'm saying only about the Manual, not the reference guide. пн, 15 мар. 2021 г., 17:54 Olivier Couet ***@***.***>:. > You would like to have the whole Reference Guide generated via Doxygen in. > pdf format ? > Doxygen is able to generate Latex (then pdf) ... We can try but I am. > afraid that will be a monster file... >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/7421#issuecomment-799484591>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAJGF4TWOCCX734TA6DZN5LTDYNTFANCNFSM4Y4OKGDA>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:580,security,auth,auth,580,"I'm saying only about the Manual, not the reference guide. пн, 15 мар. 2021 г., 17:54 Olivier Couet ***@***.***>:. > You would like to have the whole Reference Guide generated via Doxygen in. > pdf format ? > Doxygen is able to generate Latex (then pdf) ... We can try but I am. > afraid that will be a monster file... >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/7421#issuecomment-799484591>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAJGF4TWOCCX734TA6DZN5LTDYNTFANCNFSM4Y4OKGDA>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:52,usability,guid,guide,52,"I'm saying only about the Manual, not the reference guide. пн, 15 мар. 2021 г., 17:54 Olivier Couet ***@***.***>:. > You would like to have the whole Reference Guide generated via Doxygen in. > pdf format ? > Doxygen is able to generate Latex (then pdf) ... We can try but I am. > afraid that will be a monster file... >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/7421#issuecomment-799484591>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAJGF4TWOCCX734TA6DZN5LTDYNTFANCNFSM4Y4OKGDA>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:160,usability,Guid,Guide,160,"I'm saying only about the Manual, not the reference guide. пн, 15 мар. 2021 г., 17:54 Olivier Couet ***@***.***>:. > You would like to have the whole Reference Guide generated via Doxygen in. > pdf format ? > Doxygen is able to generate Latex (then pdf) ... We can try but I am. > afraid that will be a monster file... >. > —. > You are receiving this because you authored the thread. > Reply to this email directly, view it on GitHub. > <https://github.com/root-project/root/issues/7421#issuecomment-799484591>,. > or unsubscribe. > <https://github.com/notifications/unsubscribe-auth/AAJGF4TWOCCX734TA6DZN5LTDYNTFANCNFSM4Y4OKGDA>. > . >.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:304,energy efficiency,draw,drawing-a-graph,304,There is some tools to convert Jekyll pages to pdf like for instance https://github.com/abeMedia/jekyll-pdf. But I am not sure it will work for us as the pictures we have in the manual are generated by jsroot and can be. interactively manipulated. For instance this one: https://root.cern/manual/graphs/#drawing-a-graph,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:14,usability,tool,tools,14,There is some tools to convert Jekyll pages to pdf like for instance https://github.com/abeMedia/jekyll-pdf. But I am not sure it will work for us as the pictures we have in the manual are generated by jsroot and can be. interactively manipulated. For instance this one: https://root.cern/manual/graphs/#drawing-a-graph,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:221,usability,interact,interactively,221,There is some tools to convert Jekyll pages to pdf like for instance https://github.com/abeMedia/jekyll-pdf. But I am not sure it will work for us as the pictures we have in the manual are generated by jsroot and can be. interactively manipulated. For instance this one: https://root.cern/manual/graphs/#drawing-a-graph,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:157,availability,down,download,157,"No, it seems I have no interactive (and maybe any) graphs. However, it's fine, because I need mostly only commands. Just for reference, this is a command to download all pages until they are not made for download elsewhere:. wget -c -np -E -p -r -l 0 -k -nH https://root.cern/manual/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:204,availability,down,download,204,"No, it seems I have no interactive (and maybe any) graphs. However, it's fine, because I need mostly only commands. Just for reference, this is a command to download all pages until they are not made for download elsewhere:. wget -c -np -E -p -r -l 0 -k -nH https://root.cern/manual/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:23,usability,interact,interactive,23,"No, it seems I have no interactive (and maybe any) graphs. However, it's fine, because I need mostly only commands. Just for reference, this is a command to download all pages until they are not made for download elsewhere:. wget -c -np -E -p -r -l 0 -k -nH https://root.cern/manual/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:106,usability,command,commands,106,"No, it seems I have no interactive (and maybe any) graphs. However, it's fine, because I need mostly only commands. Just for reference, this is a command to download all pages until they are not made for download elsewhere:. wget -c -np -E -p -r -l 0 -k -nH https://root.cern/manual/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:146,usability,command,command,146,"No, it seems I have no interactive (and maybe any) graphs. However, it's fine, because I need mostly only commands. Just for reference, this is a command to download all pages until they are not made for download elsewhere:. wget -c -np -E -p -r -l 0 -k -nH https://root.cern/manual/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:23,availability,down,download,23,> this is a command to download all pages. So we can consider this issue as resolved as you have the command doing what you are looking for ? can we close it ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:12,usability,command,command,12,> this is a command to download all pages. So we can consider this issue as resolved as you have the command doing what you are looking for ? can we close it ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:101,usability,command,command,101,> this is a command to download all pages. So we can consider this issue as resolved as you have the command doing what you are looking for ? can we close it ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:149,usability,close,close,149,> this is a command to download all pages. So we can consider this issue as resolved as you have the command doing what you are looking for ? can we close it ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:60,availability,down,downloaded,60,"No, I'm afraid not. It would be nice if the manual could be downloaded easier from the site, preferably with images. Ideally it should be included into other documentation package (the lesser files to download, the better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:201,availability,down,download,201,"No, I'm afraid not. It would be nice if the manual could be downloaded easier from the site, preferably with images. Ideally it should be included into other documentation package (the lesser files to download, the better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:172,modifiability,pac,package,172,"No, I'm afraid not. It would be nice if the manual could be downloaded easier from the site, preferably with images. Ideally it should be included into other documentation package (the lesser files to download, the better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:93,usability,prefer,preferably,93,"No, I'm afraid not. It would be nice if the manual could be downloaded easier from the site, preferably with images. Ideally it should be included into other documentation package (the lesser files to download, the better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:158,usability,document,documentation,158,"No, I'm afraid not. It would be nice if the manual could be downloaded easier from the site, preferably with images. Ideally it should be included into other documentation package (the lesser files to download, the better).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:146,availability,down,download,146,"Ok fine we leave it open. . BTW I am not sure tu understand _""Ideally it should be included into other documentation package (the lesser files to download, the better).""_... What do you mean by ""other documentation package"" ????",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:117,modifiability,pac,package,117,"Ok fine we leave it open. . BTW I am not sure tu understand _""Ideally it should be included into other documentation package (the lesser files to download, the better).""_... What do you mean by ""other documentation package"" ????",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:215,modifiability,pac,package,215,"Ok fine we leave it open. . BTW I am not sure tu understand _""Ideally it should be included into other documentation package (the lesser files to download, the better).""_... What do you mean by ""other documentation package"" ????",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:49,testability,understand,understand,49,"Ok fine we leave it open. . BTW I am not sure tu understand _""Ideally it should be included into other documentation package (the lesser files to download, the better).""_... What do you mean by ""other documentation package"" ????",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:103,usability,document,documentation,103,"Ok fine we leave it open. . BTW I am not sure tu understand _""Ideally it should be included into other documentation package (the lesser files to download, the better).""_... What do you mean by ""other documentation package"" ????",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:201,usability,document,documentation,201,"Ok fine we leave it open. . BTW I am not sure tu understand _""Ideally it should be included into other documentation package (the lesser files to download, the better).""_... What do you mean by ""other documentation package"" ????",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:84,integrability,topic,topic,84,I mean e.g. the Reference Guide at https://root.cern/reference/ . as I wrote in the topic.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:26,usability,Guid,Guide,26,I mean e.g. the Reference Guide at https://root.cern/reference/ . as I wrote in the topic.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:105,availability,down,downloading,105,"No, I don't know how to do that. I use sphinx when I have *rst* pages. Pdf is not so necessary, html for downloading would be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:97,availability,down,download-website-offline,97,"It seems that can be easily done with [recipes like this one](https://www.hongkiat.com/blog/read-download-website-offline/#:~:text=In%20the%20Chrome%20for%20Android,page%20in%20your%20default%20browser.) . And again, once you have the recipe, I do not see the point of providing a tar file with the static web site in it as you can download it yourself when you need using that recipe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:332,availability,down,download,332,"It seems that can be easily done with [recipes like this one](https://www.hongkiat.com/blog/read-download-website-offline/#:~:text=In%20the%20Chrome%20for%20Android,page%20in%20your%20default%20browser.) . And again, once you have the recipe, I do not see the point of providing a tar file with the static web site in it as you can download it yourself when you need using that recipe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:62,availability,avail,available,62,It can be done if you have Internet. Earlier User's Guide was available for download. It's much easier to download a prepared file. Especially if it is together with other documentation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:76,availability,down,download,76,It can be done if you have Internet. Earlier User's Guide was available for download. It's much easier to download a prepared file. Especially if it is together with other documentation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:106,availability,down,download,106,It can be done if you have Internet. Earlier User's Guide was available for download. It's much easier to download a prepared file. Especially if it is together with other documentation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:62,reliability,availab,available,62,It can be done if you have Internet. Earlier User's Guide was available for download. It's much easier to download a prepared file. Especially if it is together with other documentation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:62,safety,avail,available,62,It can be done if you have Internet. Earlier User's Guide was available for download. It's much easier to download a prepared file. Especially if it is together with other documentation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:62,security,availab,available,62,It can be done if you have Internet. Earlier User's Guide was available for download. It's much easier to download a prepared file. Especially if it is together with other documentation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:45,usability,User,User,45,It can be done if you have Internet. Earlier User's Guide was available for download. It's much easier to download a prepared file. Especially if it is together with other documentation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:52,usability,Guid,Guide,52,It can be done if you have Internet. Earlier User's Guide was available for download. It's much easier to download a prepared file. Especially if it is together with other documentation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:172,usability,document,documentation,172,It can be done if you have Internet. Earlier User's Guide was available for download. It's much easier to download a prepared file. Especially if it is together with other documentation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:45,availability,down,download,45,Of course you need internet at least once to download the pages on your local machine. That's also true if we would provide a tar ball of the html pages. I pointed you some recipes to download the Manual locally. The Manual is Web only. If you want it locally use the tools available on the web (you need internet at least once...) . I will close this issue I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:184,availability,down,download,184,Of course you need internet at least once to download the pages on your local machine. That's also true if we would provide a tar ball of the html pages. I pointed you some recipes to download the Manual locally. The Manual is Web only. If you want it locally use the tools available on the web (you need internet at least once...) . I will close this issue I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:274,availability,avail,available,274,Of course you need internet at least once to download the pages on your local machine. That's also true if we would provide a tar ball of the html pages. I pointed you some recipes to download the Manual locally. The Manual is Web only. If you want it locally use the tools available on the web (you need internet at least once...) . I will close this issue I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:274,reliability,availab,available,274,Of course you need internet at least once to download the pages on your local machine. That's also true if we would provide a tar ball of the html pages. I pointed you some recipes to download the Manual locally. The Manual is Web only. If you want it locally use the tools available on the web (you need internet at least once...) . I will close this issue I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:274,safety,avail,available,274,Of course you need internet at least once to download the pages on your local machine. That's also true if we would provide a tar ball of the html pages. I pointed you some recipes to download the Manual locally. The Manual is Web only. If you want it locally use the tools available on the web (you need internet at least once...) . I will close this issue I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:274,security,availab,available,274,Of course you need internet at least once to download the pages on your local machine. That's also true if we would provide a tar ball of the html pages. I pointed you some recipes to download the Manual locally. The Manual is Web only. If you want it locally use the tools available on the web (you need internet at least once...) . I will close this issue I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:268,usability,tool,tools,268,Of course you need internet at least once to download the pages on your local machine. That's also true if we would provide a tar ball of the html pages. I pointed you some recipes to download the Manual locally. The Manual is Web only. If you want it locally use the tools available on the web (you need internet at least once...) . I will close this issue I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:341,usability,close,close,341,Of course you need internet at least once to download the pages on your local machine. That's also true if we would provide a tar ball of the html pages. I pointed you some recipes to download the Manual locally. The Manual is Web only. If you want it locally use the tools available on the web (you need internet at least once...) . I will close this issue I guess.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:133,availability,down,download,133,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:352,availability,down,download,352,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:556,availability,down,downloaded,556,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:661,deployability,version,version,661,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:661,integrability,version,version,661,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:661,modifiability,version,version,661,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:90,performance,time,time,90,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:98,performance,time,time,98,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:778,safety,except,except,778,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:859,safety,except,except,859,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:681,security,revoc,revocation,681,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:399,usability,tool,tools,399,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:425,usability,close,close,425,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:472,usability,person,personally,472,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:523,usability,User,User,523,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:530,usability,Guid,Guide,530,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:578,usability,document,document,578,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:725,usability,user,users,725,"If you would provide a tar ball of the html pages, that would (hopefully) be changed from time to time. How do I know if I should re-download the manual or if I have the most up-to-date one? . In my very first post when I opened this issue, I wrote about `wget`. So some recipes were known before, but anyway thanks for the links. The thing is that to download an archive is much easier than to use tools or recipes. ""I will close this issue I guess."" - is it because you personally don't need this feature? When there was User's Guide, it could be always downloaded as one pdf document (there was also an html archive of that). When you move to 'pure internet version', this is a revocation of an existing feature, and some users will not be happy with this. I think if no one except me needs this feature, than probably it is not needed. Maybe other people except me and you should be asked about their opinion on this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:141,deployability,version,version,141,"You said you know you can use `wget` ... so you have a solution ? . I do not see what I can bring more. We do not intend to generate an html version of the ""Web site ""called Manual"" .... Since the beginning we decided it will be a web site in order to offer the most up to date version of the documentation. I think we are discussing in a loop here ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:278,deployability,version,version,278,"You said you know you can use `wget` ... so you have a solution ? . I do not see what I can bring more. We do not intend to generate an html version of the ""Web site ""called Manual"" .... Since the beginning we decided it will be a web site in order to offer the most up to date version of the documentation. I think we are discussing in a loop here ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:141,integrability,version,version,141,"You said you know you can use `wget` ... so you have a solution ? . I do not see what I can bring more. We do not intend to generate an html version of the ""Web site ""called Manual"" .... Since the beginning we decided it will be a web site in order to offer the most up to date version of the documentation. I think we are discussing in a loop here ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:278,integrability,version,version,278,"You said you know you can use `wget` ... so you have a solution ? . I do not see what I can bring more. We do not intend to generate an html version of the ""Web site ""called Manual"" .... Since the beginning we decided it will be a web site in order to offer the most up to date version of the documentation. I think we are discussing in a loop here ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:141,modifiability,version,version,141,"You said you know you can use `wget` ... so you have a solution ? . I do not see what I can bring more. We do not intend to generate an html version of the ""Web site ""called Manual"" .... Since the beginning we decided it will be a web site in order to offer the most up to date version of the documentation. I think we are discussing in a loop here ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:278,modifiability,version,version,278,"You said you know you can use `wget` ... so you have a solution ? . I do not see what I can bring more. We do not intend to generate an html version of the ""Web site ""called Manual"" .... Since the beginning we decided it will be a web site in order to offer the most up to date version of the documentation. I think we are discussing in a loop here ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7421:293,usability,document,documentation,293,"You said you know you can use `wget` ... so you have a solution ? . I do not see what I can bring more. We do not intend to generate an html version of the ""Web site ""called Manual"" .... Since the beginning we decided it will be a web site in order to offer the most up to date version of the documentation. I think we are discussing in a loop here ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7421
https://github.com/root-project/root/issues/7422:1081,deployability,build,builds,1081,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1088,deployability,build,build-,1088,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1230,deployability,build,builds,1230,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1237,deployability,build,build-,1237,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:715,interoperability,semant,semantic-interposition,715,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:749,interoperability,semant,semantic-interposition,749,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1160,performance,I/o,I/opt,1160,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1305,performance,I/o,I/opt,1305,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:443,reliability,diagno,diagnostic,443,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:574,reliability,pra,pragmas,574,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:912,safety,except,exceptions,912,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:180,security,secur,security,180,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:443,testability,diagno,diagnostic,443,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:359,usability,Tool,Tools,359,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:615,usability,document,documentation-unknown-command,615,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1076,usability,user,user,1076,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1151,usability,Support,Support,1151,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1209,usability,Support,Support,1209,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1225,usability,user,user,1225,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1516,usability,Tool,Tools,1516,"Hi! I get these warnings when using QtCreator:. ![image](https://github.com/root-project/root/assets/10653970/05a84b87-d2c6-44a0-b556-4a32d097b157). Clang-tidy defaults enable the security analyzer:. ![image](https://github.com/root-project/root/assets/10653970/f9bf48e8-6875-46b4-ab2c-4f264e4937fb). Behind the scenes, it calls something like:. ```. /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/bin/clang-tidy '-config={}' '-checks=-clang-diagnostic-*' -export-fixes=/tmp/QtCreator-mNGsvX/clangtools-BaPBuq/report-gawkapi.h-jpJtvv /usr/include/gawkapi.h -- -Wno-unknown-pragmas -Wno-unknown-warning-option -Wno-documentation-unknown-command -w -nostdinc -nostdinc++ -std=c++17 -pipe -fsigned-char -pthread -fno-semantic-interposition -fPIC -fno-semantic-interposition -fvisibility-inlines-hidden -ffunction-sections -fdata-sections -g -fvisibility=hidden -fvisibility-inlines-hidden -UNDEBUG -std=c++17 -fno-exceptions -fsyntax-only -m64 --target=x86_64-linux-gnu -x c++ -D_DEBUG -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/lib/Support -I/opt/root_src/interpreter/llvm-project/llvm/lib/Support -I/home/user/builds/build-root_src-Desktop-Debug/interpreter/llvm-project/llvm/include -I/opt/root_src/interpreter/llvm-project/llvm/include -isystem /usr/include/c++/11 -isystem /usr/include/x86_64-linux-gnu/c++/11 -isystem /usr/include/c++/11/backward -isystem /usr/local/include -isystem /opt/Qt/Tools/QtCreator/libexec/qtcreator/clang/lib/clang/16/include -isystem /usr/include/x86_64-linux-gnu -isystem /usr/include. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:48,reliability,diagno,diagnostic,48,"Thanks! Especially for the the `'-checks=-clang-diagnostic-*'`, which is the important ingredient here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:48,testability,diagno,diagnostic,48,"Thanks! Especially for the the `'-checks=-clang-diagnostic-*'`, which is the important ingredient here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:69,deployability,version,version,69,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:748,deployability,build,build,748,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:923,deployability,Instal,Install,923,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1411,deployability,build,building,1411,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1464,deployability,build,build,1464,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1487,deployability,build,build,1487,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:69,integrability,version,version,69,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:141,integrability,sub,subdirectory,141,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1444,integrability,sub,subdirectory,1444,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1891,integrability,sub,subdirectories,1891,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:69,modifiability,version,version,69,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:10,usability,learn,learned,10,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:89,usability,tool,tools,89,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:219,usability,help,helps,219,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:958,usability,tool,tool,958,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:995,usability,tool,tools,995,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1706,usability,close,close,1706,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1789,usability,confirm,confirmed,1789,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7422:1972,usability,learn,learned,1972,"I finally learned how to reproduce these kind of warnings with a new version of the LLVM tools. You need to make sure that the relevant ROOT subdirectory is compiled with `set(CMAKE_EXPORT_COMPILE_COMMANDS 1)` (it also helps to disable this for llvm-project to not get spammed by warnings from LLVM). For example, if you want to scan the `math` directory, you can do:. ```diff. diff --git a/interpreter/llvm-project/llvm/CMakeLists.txt b/interpreter/llvm-project/llvm/CMakeLists.txt. index 0b046717ba..b685291490 100644. --- a/interpreter/llvm-project/llvm/CMakeLists.txt. +++ b/interpreter/llvm-project/llvm/CMakeLists.txt. @@ -283,7 +283,7 @@ list(INSERT CMAKE_MODULE_PATH 0. # Generate a CompilationDatabase (compile_commands.json file) for our build,. # for use by clang_complete, YouCompleteMe, etc. -set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +set(CMAKE_EXPORT_COMPILE_COMMANDS 0). option(LLVM_INSTALL_BINUTILS_SYMLINKS. ""Install symlinks from the binutils tool names to the corresponding LLVM tools."" OFF). diff --git a/math/CMakeLists.txt b/math/CMakeLists.txt. index 543adbf6b1..12f5930901 100644. --- a/math/CMakeLists.txt. +++ b/math/CMakeLists.txt. @@ -4,6 +4,10 @@. # For the licensing terms see $ROOTSYS/LICENSE. # For the list of contributors see $ROOTSYS/README/CREDITS. +set(CMAKE_EXPORT_COMPILE_COMMANDS 1). +. add_subdirectory(mathcore). if(mathmore). add_subdirectory(mathmore). ```. Then, after building, you go into equivalent subdirectory in the build directory (e.g. `build/math`) and run this:. ```bash. run-clang-tidy -checks='clang-analyzer-*' . -j20. ```. So the warnings are easy to reproduce and we are aware that these exist for all for ROOT in general. Therefore, I'd suggest to close this particular issue so that we can focus on feature development and fixing confirmed bugs. We can't afford separate GitHub issues for all groups of `clang-tidy` warnings in all subdirectories. Thank you very much @ferdymercury for the initiative thought! We learned a lot from this!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7422
https://github.com/root-project/root/issues/7426:286,availability,error,error,286,Those report are challenging to parse with a human eye (where does one report end and the next start). Also they seems to be sorted by source file (which is good we have enough effort to address all of them) rather than categories (which is good if we need to prioritize the functional error (using an object after deletion) over the performance one (unused assigned variable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:367,modifiability,variab,variable,367,Those report are challenging to parse with a human eye (where does one report end and the next start). Also they seems to be sorted by source file (which is good we have enough effort to address all of them) rather than categories (which is good if we need to prioritize the functional error (using an object after deletion) over the performance one (unused assigned variable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:286,performance,error,error,286,Those report are challenging to parse with a human eye (where does one report end and the next start). Also they seems to be sorted by source file (which is good we have enough effort to address all of them) rather than categories (which is good if we need to prioritize the functional error (using an object after deletion) over the performance one (unused assigned variable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:334,performance,perform,performance,334,Those report are challenging to parse with a human eye (where does one report end and the next start). Also they seems to be sorted by source file (which is good we have enough effort to address all of them) rather than categories (which is good if we need to prioritize the functional error (using an object after deletion) over the performance one (unused assigned variable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:62,reliability,doe,does,62,Those report are challenging to parse with a human eye (where does one report end and the next start). Also they seems to be sorted by source file (which is good we have enough effort to address all of them) rather than categories (which is good if we need to prioritize the functional error (using an object after deletion) over the performance one (unused assigned variable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:286,safety,error,error,286,Those report are challenging to parse with a human eye (where does one report end and the next start). Also they seems to be sorted by source file (which is good we have enough effort to address all of them) rather than categories (which is good if we need to prioritize the functional error (using an object after deletion) over the performance one (unused assigned variable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:286,usability,error,error,286,Those report are challenging to parse with a human eye (where does one report end and the next start). Also they seems to be sorted by source file (which is good we have enough effort to address all of them) rather than categories (which is good if we need to prioritize the functional error (using an object after deletion) over the performance one (unused assigned variable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:334,usability,perform,performance,334,Those report are challenging to parse with a human eye (where does one report end and the next start). Also they seems to be sorted by source file (which is good we have enough effort to address all of them) rather than categories (which is good if we need to prioritize the functional error (using an object after deletion) over the performance one (unused assigned variable).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:338,deployability,instal,install,338,"Yes, I agree they are harsh to read. A trick is to run this visualizer script over it: https://github.com/austinbhale/Clang-Visualizer. And then you get it filtered by category:. ![image](https://user-images.githubusercontent.com/10653970/110546796-f8402780-80fc-11eb-8a31-bc8b77e90d25.png). Although the best way I would recommend is to install QtCreator, then you get a lot of filter options, clicking takes you the exact line, the GUI there is very helpful, here a screenshot:. ![image](https://user-images.githubusercontent.com/10653970/110546932-2f163d80-80fd-11eb-87e3-ecf8ec7b1a76.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:156,integrability,filter,filtered,156,"Yes, I agree they are harsh to read. A trick is to run this visualizer script over it: https://github.com/austinbhale/Clang-Visualizer. And then you get it filtered by category:. ![image](https://user-images.githubusercontent.com/10653970/110546796-f8402780-80fc-11eb-8a31-bc8b77e90d25.png). Although the best way I would recommend is to install QtCreator, then you get a lot of filter options, clicking takes you the exact line, the GUI there is very helpful, here a screenshot:. ![image](https://user-images.githubusercontent.com/10653970/110546932-2f163d80-80fd-11eb-87e3-ecf8ec7b1a76.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:379,integrability,filter,filter,379,"Yes, I agree they are harsh to read. A trick is to run this visualizer script over it: https://github.com/austinbhale/Clang-Visualizer. And then you get it filtered by category:. ![image](https://user-images.githubusercontent.com/10653970/110546796-f8402780-80fc-11eb-8a31-bc8b77e90d25.png). Although the best way I would recommend is to install QtCreator, then you get a lot of filter options, clicking takes you the exact line, the GUI there is very helpful, here a screenshot:. ![image](https://user-images.githubusercontent.com/10653970/110546932-2f163d80-80fd-11eb-87e3-ecf8ec7b1a76.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:60,usability,visual,visualizer,60,"Yes, I agree they are harsh to read. A trick is to run this visualizer script over it: https://github.com/austinbhale/Clang-Visualizer. And then you get it filtered by category:. ![image](https://user-images.githubusercontent.com/10653970/110546796-f8402780-80fc-11eb-8a31-bc8b77e90d25.png). Although the best way I would recommend is to install QtCreator, then you get a lot of filter options, clicking takes you the exact line, the GUI there is very helpful, here a screenshot:. ![image](https://user-images.githubusercontent.com/10653970/110546932-2f163d80-80fd-11eb-87e3-ecf8ec7b1a76.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:124,usability,Visual,Visualizer,124,"Yes, I agree they are harsh to read. A trick is to run this visualizer script over it: https://github.com/austinbhale/Clang-Visualizer. And then you get it filtered by category:. ![image](https://user-images.githubusercontent.com/10653970/110546796-f8402780-80fc-11eb-8a31-bc8b77e90d25.png). Although the best way I would recommend is to install QtCreator, then you get a lot of filter options, clicking takes you the exact line, the GUI there is very helpful, here a screenshot:. ![image](https://user-images.githubusercontent.com/10653970/110546932-2f163d80-80fd-11eb-87e3-ecf8ec7b1a76.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:196,usability,user,user-images,196,"Yes, I agree they are harsh to read. A trick is to run this visualizer script over it: https://github.com/austinbhale/Clang-Visualizer. And then you get it filtered by category:. ![image](https://user-images.githubusercontent.com/10653970/110546796-f8402780-80fc-11eb-8a31-bc8b77e90d25.png). Although the best way I would recommend is to install QtCreator, then you get a lot of filter options, clicking takes you the exact line, the GUI there is very helpful, here a screenshot:. ![image](https://user-images.githubusercontent.com/10653970/110546932-2f163d80-80fd-11eb-87e3-ecf8ec7b1a76.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:452,usability,help,helpful,452,"Yes, I agree they are harsh to read. A trick is to run this visualizer script over it: https://github.com/austinbhale/Clang-Visualizer. And then you get it filtered by category:. ![image](https://user-images.githubusercontent.com/10653970/110546796-f8402780-80fc-11eb-8a31-bc8b77e90d25.png). Although the best way I would recommend is to install QtCreator, then you get a lot of filter options, clicking takes you the exact line, the GUI there is very helpful, here a screenshot:. ![image](https://user-images.githubusercontent.com/10653970/110546932-2f163d80-80fd-11eb-87e3-ecf8ec7b1a76.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7426:498,usability,user,user-images,498,"Yes, I agree they are harsh to read. A trick is to run this visualizer script over it: https://github.com/austinbhale/Clang-Visualizer. And then you get it filtered by category:. ![image](https://user-images.githubusercontent.com/10653970/110546796-f8402780-80fc-11eb-8a31-bc8b77e90d25.png). Although the best way I would recommend is to install QtCreator, then you get a lot of filter options, clicking takes you the exact line, the GUI there is very helpful, here a screenshot:. ![image](https://user-images.githubusercontent.com/10653970/110546932-2f163d80-80fd-11eb-87e3-ecf8ec7b1a76.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7426
https://github.com/root-project/root/issues/7429:19,performance,memor,memory,19,There are two real memory leaks #7504 and #7508. And one other problem #7507 . Thanks for preparing this report,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7429:19,usability,memor,memory,19,There are two real memory leaks #7504 and #7508. And one other problem #7507 . Thanks for preparing this report,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7429
https://github.com/root-project/root/issues/7430:80,performance,perform,performance,80,"> To suppress them, one need to initialize array:. Note that this code path is 'performance critical'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:80,usability,perform,performance,80,"> To suppress them, one need to initialize array:. Note that this code path is 'performance critical'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:31,performance,perform,performance,31,> Note that this code path is 'performance critical'. Yes. I see. And array too large (500 entries) to initialize it. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:31,usability,perform,performance,31,> Note that this code path is 'performance critical'. Yes. I see. And array too large (500 entries) to initialize it. .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:69,availability,error,errors,69,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:33,integrability,messag,messages,33,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:33,interoperability,messag,messages,33,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:245,modifiability,variab,variable,245,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:69,performance,error,errors,69,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:169,performance,perform,performance,169,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:209,performance,memor,memory,209,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:69,safety,error,errors,69,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:95,security,access,access,95,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:69,usability,error,errors,69,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:169,usability,perform,performance,169,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:209,usability,memor,memory,209,"@ferdymercury I look through the messages and did not found critical errors. . Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. . But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:62,availability,error,error,62,Makes sense. What about adding a //NOLINT comment to suppress error on T tab[maxFound] ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:62,performance,error,error,62,Makes sense. What about adding a //NOLINT comment to suppress error on T tab[maxFound] ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:62,safety,error,error,62,Makes sense. What about adding a //NOLINT comment to suppress error on T tab[maxFound] ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:62,usability,error,error,62,Makes sense. What about adding a //NOLINT comment to suppress error on T tab[maxFound] ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:51,availability,error,error,51,"> What about adding a //NOLINT comment to suppress error on T tab[maxFound] ? While it is not array itself, but its usage. Mostly each of ~100 lines where it used should be provided with such comments - too ugly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:51,performance,error,error,51,"> What about adding a //NOLINT comment to suppress error on T tab[maxFound] ? While it is not array itself, but its usage. Mostly each of ~100 lines where it used should be provided with such comments - too ugly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:51,safety,error,error,51,"> What about adding a //NOLINT comment to suppress error on T tab[maxFound] ? While it is not array itself, but its usage. Mostly each of ~100 lines where it used should be provided with such comments - too ugly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:51,usability,error,error,51,"> What about adding a //NOLINT comment to suppress error on T tab[maxFound] ? While it is not array itself, but its usage. Mostly each of ~100 lines where it used should be provided with such comments - too ugly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:53,availability,error,error,53,"> > What about adding a //NOLINT comment to suppress error on T tab[maxFound] ? > . > While it is not array itself, but its usage. Mostly each of ~100 lines where it used should be provided with such comments - too ugly. Just fyi, Clang now supports multi-line NOLINTs:. https://llvm.discourse.group/t/clang-tidy-multi-line-nolint/3041",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:53,performance,error,error,53,"> > What about adding a //NOLINT comment to suppress error on T tab[maxFound] ? > . > While it is not array itself, but its usage. Mostly each of ~100 lines where it used should be provided with such comments - too ugly. Just fyi, Clang now supports multi-line NOLINTs:. https://llvm.discourse.group/t/clang-tidy-multi-line-nolint/3041",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:53,safety,error,error,53,"> > What about adding a //NOLINT comment to suppress error on T tab[maxFound] ? > . > While it is not array itself, but its usage. Mostly each of ~100 lines where it used should be provided with such comments - too ugly. Just fyi, Clang now supports multi-line NOLINTs:. https://llvm.discourse.group/t/clang-tidy-multi-line-nolint/3041",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:53,usability,error,error,53,"> > What about adding a //NOLINT comment to suppress error on T tab[maxFound] ? > . > While it is not array itself, but its usage. Mostly each of ~100 lines where it used should be provided with such comments - too ugly. Just fyi, Clang now supports multi-line NOLINTs:. https://llvm.discourse.group/t/clang-tidy-multi-line-nolint/3041",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7430:241,usability,support,supports,241,"> > What about adding a //NOLINT comment to suppress error on T tab[maxFound] ? > . > While it is not array itself, but its usage. Mostly each of ~100 lines where it used should be provided with such comments - too ugly. Just fyi, Clang now supports multi-line NOLINTs:. https://llvm.discourse.group/t/clang-tidy-multi-line-nolint/3041",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7430
https://github.com/root-project/root/issues/7432:24,performance,memor,memory,24,"Indirectly, but I found memory leak in TASImage https://github.com/root-project/root/pull/7529",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7432:24,usability,memor,memory,24,"Indirectly, but I found memory leak in TASImage https://github.com/root-project/root/pull/7529",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7432
https://github.com/root-project/root/issues/7433:70,availability,error,error,70,@Axel-Naumann I tested your fix with my CUDA system. The segmentation error is gone and all tests passes. Thanks for fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:70,performance,error,error,70,@Axel-Naumann I tested your fix with my CUDA system. The segmentation error is gone and all tests passes. Thanks for fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:16,safety,test,tested,16,@Axel-Naumann I tested your fix with my CUDA system. The segmentation error is gone and all tests passes. Thanks for fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:70,safety,error,error,70,@Axel-Naumann I tested your fix with my CUDA system. The segmentation error is gone and all tests passes. Thanks for fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:92,safety,test,tests,92,@Axel-Naumann I tested your fix with my CUDA system. The segmentation error is gone and all tests passes. Thanks for fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:16,testability,test,tested,16,@Axel-Naumann I tested your fix with my CUDA system. The segmentation error is gone and all tests passes. Thanks for fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:92,testability,test,tests,92,@Axel-Naumann I tested your fix with my CUDA system. The segmentation error is gone and all tests passes. Thanks for fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7433:70,usability,error,error,70,@Axel-Naumann I tested your fix with my CUDA system. The segmentation error is gone and all tests passes. Thanks for fixing it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7433
https://github.com/root-project/root/issues/7435:40,testability,simpl,simply,40,"This is not really a bug, the layout is simply not set to expand X & Y, The PR #7516 solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7435
https://github.com/root-project/root/issues/7435:40,usability,simpl,simply,40,"This is not really a bug, the layout is simply not set to expand X & Y, The PR #7516 solves it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7435
https://github.com/root-project/root/issues/7436:891,energy efficiency,load,loaded,891,"Indeed TPyDispatcher is present in ROOT:. ```. vpadulan@fedorathinkpad-T550 [~]: python. Python 3.8.7 (default, Jan 20 2021, 00:00:00) . [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.TPyDispatcher. <class cppyy.gbl.TPyDispatcher at 0x55b264067990>. ```. But in the tutorial `numberEntry.py` the ROOT objects are imported via `from ROOT import *` which somehow doesn't import `TPyDispatcher` in the python session. Indeed, changing that line with `import ROOT` and then explicitly instantiating `ROOT.TPyDispatcher` solves this issue. Now in general `from <package> import *` is discouraged so I would change the tutorial, but it is true that ROOT also has its own machinery to decide which names are imported into the namespace in this case and I still don't know why TPyDispatcher is not loaded along all the other classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7436
https://github.com/root-project/root/issues/7436:658,modifiability,pac,package,658,"Indeed TPyDispatcher is present in ROOT:. ```. vpadulan@fedorathinkpad-T550 [~]: python. Python 3.8.7 (default, Jan 20 2021, 00:00:00) . [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.TPyDispatcher. <class cppyy.gbl.TPyDispatcher at 0x55b264067990>. ```. But in the tutorial `numberEntry.py` the ROOT objects are imported via `from ROOT import *` which somehow doesn't import `TPyDispatcher` in the python session. Indeed, changing that line with `import ROOT` and then explicitly instantiating `ROOT.TPyDispatcher` solves this issue. Now in general `from <package> import *` is discouraged so I would change the tutorial, but it is true that ROOT also has its own machinery to decide which names are imported into the namespace in this case and I still don't know why TPyDispatcher is not loaded along all the other classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7436
https://github.com/root-project/root/issues/7436:891,performance,load,loaded,891,"Indeed TPyDispatcher is present in ROOT:. ```. vpadulan@fedorathinkpad-T550 [~]: python. Python 3.8.7 (default, Jan 20 2021, 00:00:00) . [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.TPyDispatcher. <class cppyy.gbl.TPyDispatcher at 0x55b264067990>. ```. But in the tutorial `numberEntry.py` the ROOT objects are imported via `from ROOT import *` which somehow doesn't import `TPyDispatcher` in the python session. Indeed, changing that line with `import ROOT` and then explicitly instantiating `ROOT.TPyDispatcher` solves this issue. Now in general `from <package> import *` is discouraged so I would change the tutorial, but it is true that ROOT also has its own machinery to decide which names are imported into the namespace in this case and I still don't know why TPyDispatcher is not loaded along all the other classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7436
https://github.com/root-project/root/issues/7436:462,reliability,doe,doesn,462,"Indeed TPyDispatcher is present in ROOT:. ```. vpadulan@fedorathinkpad-T550 [~]: python. Python 3.8.7 (default, Jan 20 2021, 00:00:00) . [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.TPyDispatcher. <class cppyy.gbl.TPyDispatcher at 0x55b264067990>. ```. But in the tutorial `numberEntry.py` the ROOT objects are imported via `from ROOT import *` which somehow doesn't import `TPyDispatcher` in the python session. Indeed, changing that line with `import ROOT` and then explicitly instantiating `ROOT.TPyDispatcher` solves this issue. Now in general `from <package> import *` is discouraged so I would change the tutorial, but it is true that ROOT also has its own machinery to decide which names are imported into the namespace in this case and I still don't know why TPyDispatcher is not loaded along all the other classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7436
https://github.com/root-project/root/issues/7436:507,security,session,session,507,"Indeed TPyDispatcher is present in ROOT:. ```. vpadulan@fedorathinkpad-T550 [~]: python. Python 3.8.7 (default, Jan 20 2021, 00:00:00) . [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.TPyDispatcher. <class cppyy.gbl.TPyDispatcher at 0x55b264067990>. ```. But in the tutorial `numberEntry.py` the ROOT objects are imported via `from ROOT import *` which somehow doesn't import `TPyDispatcher` in the python session. Indeed, changing that line with `import ROOT` and then explicitly instantiating `ROOT.TPyDispatcher` solves this issue. Now in general `from <package> import *` is discouraged so I would change the tutorial, but it is true that ROOT also has its own machinery to decide which names are imported into the namespace in this case and I still don't know why TPyDispatcher is not loaded along all the other classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7436
https://github.com/root-project/root/issues/7436:194,usability,help,help,194,"Indeed TPyDispatcher is present in ROOT:. ```. vpadulan@fedorathinkpad-T550 [~]: python. Python 3.8.7 (default, Jan 20 2021, 00:00:00) . [GCC 10.2.1 20201125 (Red Hat 10.2.1-9)] on linux. Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import ROOT. >>> ROOT.TPyDispatcher. <class cppyy.gbl.TPyDispatcher at 0x55b264067990>. ```. But in the tutorial `numberEntry.py` the ROOT objects are imported via `from ROOT import *` which somehow doesn't import `TPyDispatcher` in the python session. Indeed, changing that line with `import ROOT` and then explicitly instantiating `ROOT.TPyDispatcher` solves this issue. Now in general `from <package> import *` is discouraged so I would change the tutorial, but it is true that ROOT also has its own machinery to decide which names are imported into the namespace in this case and I still don't know why TPyDispatcher is not loaded along all the other classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7436
https://github.com/root-project/root/issues/7440:21,safety,input,input,21,"@lmoneta we need you input there. I already saw that ""Numerical Algo"" appears in both. But it was like that already before I did the changes. Do we need really need num-algo in both ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:21,usability,input,input,21,"@lmoneta we need you input there. I already saw that ""Numerical Algo"" appears in both. But it was like that already before I did the changes. Do we need really need num-algo in both ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:181,deployability,Integr,Integrator,181,"@couet The problem is that we have now a common ""NumAlgo"" (Numerical Algorithm group) which is included in both MathCore and MathMore classes. For example in math/mathcore/inc/Math/Integrator.h we have : . ```. /**. @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore. @ingroup MathMore. */. ``` . It is probably cleaner to create two Numerical algorithm groups, one for MathCore and one for Mathmore which contain the respective classes, and referencing each other, so the user is aware that both groups exist. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:493,deployability,contain,contain,493,"@couet The problem is that we have now a common ""NumAlgo"" (Numerical Algorithm group) which is included in both MathCore and MathMore classes. For example in math/mathcore/inc/Math/Integrator.h we have : . ```. /**. @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore. @ingroup MathMore. */. ``` . It is probably cleaner to create two Numerical algorithm groups, one for MathCore and one for Mathmore which contain the respective classes, and referencing each other, so the user is aware that both groups exist. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:181,integrability,Integr,Integrator,181,"@couet The problem is that we have now a common ""NumAlgo"" (Numerical Algorithm group) which is included in both MathCore and MathMore classes. For example in math/mathcore/inc/Math/Integrator.h we have : . ```. /**. @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore. @ingroup MathMore. */. ``` . It is probably cleaner to create two Numerical algorithm groups, one for MathCore and one for Mathmore which contain the respective classes, and referencing each other, so the user is aware that both groups exist. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:181,interoperability,Integr,Integrator,181,"@couet The problem is that we have now a common ""NumAlgo"" (Numerical Algorithm group) which is included in both MathCore and MathMore classes. For example in math/mathcore/inc/Math/Integrator.h we have : . ```. /**. @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore. @ingroup MathMore. */. ``` . It is probably cleaner to create two Numerical algorithm groups, one for MathCore and one for Mathmore which contain the respective classes, and referencing each other, so the user is aware that both groups exist. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:181,modifiability,Integr,Integrator,181,"@couet The problem is that we have now a common ""NumAlgo"" (Numerical Algorithm group) which is included in both MathCore and MathMore classes. For example in math/mathcore/inc/Math/Integrator.h we have : . ```. /**. @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore. @ingroup MathMore. */. ``` . It is probably cleaner to create two Numerical algorithm groups, one for MathCore and one for Mathmore which contain the respective classes, and referencing each other, so the user is aware that both groups exist. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:181,reliability,Integr,Integrator,181,"@couet The problem is that we have now a common ""NumAlgo"" (Numerical Algorithm group) which is included in both MathCore and MathMore classes. For example in math/mathcore/inc/Math/Integrator.h we have : . ```. /**. @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore. @ingroup MathMore. */. ``` . It is probably cleaner to create two Numerical algorithm groups, one for MathCore and one for Mathmore which contain the respective classes, and referencing each other, so the user is aware that both groups exist. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:181,security,Integr,Integrator,181,"@couet The problem is that we have now a common ""NumAlgo"" (Numerical Algorithm group) which is included in both MathCore and MathMore classes. For example in math/mathcore/inc/Math/Integrator.h we have : . ```. /**. @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore. @ingroup MathMore. */. ``` . It is probably cleaner to create two Numerical algorithm groups, one for MathCore and one for Mathmore which contain the respective classes, and referencing each other, so the user is aware that both groups exist. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:181,testability,Integr,Integrator,181,"@couet The problem is that we have now a common ""NumAlgo"" (Numerical Algorithm group) which is included in both MathCore and MathMore classes. For example in math/mathcore/inc/Math/Integrator.h we have : . ```. /**. @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore. @ingroup MathMore. */. ``` . It is probably cleaner to create two Numerical algorithm groups, one for MathCore and one for Mathmore which contain the respective classes, and referencing each other, so the user is aware that both groups exist. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:560,usability,user,user,560,"@couet The problem is that we have now a common ""NumAlgo"" (Numerical Algorithm group) which is included in both MathCore and MathMore classes. For example in math/mathcore/inc/Math/Integrator.h we have : . ```. /**. @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore. @ingroup MathMore. */. ``` . It is probably cleaner to create two Numerical algorithm groups, one for MathCore and one for Mathmore which contain the respective classes, and referencing each other, so the user is aware that both groups exist. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:473,deployability,Integr,Integrator,473,"@lmoneta it is not that we have it ""now"", it has always been like that. I fully agree that two group like ""NumAlgoCore"" and ""NumAlgoMore"" would be much better. Like:. ```. // the next classe should be in NumAlgoCore ? math/mathcore/inc/Math/DistSamplerOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/GenAlgoOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/IMinimizer1D.h: @ingroup NumAlgo. math/mathcore/inc/Math/IOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/Integrator.h:@ingroup NumAlgo. math/mathcore/inc/Math/Minimizer.h: @ingroup NumAlgo. math/mathcore/inc/Math/RichardsonDerivator.h: @ingroup NumAlgo. math/mathcore/inc/Math/RootFinder.h: @ingroup NumAlgo. // the next classe should be in NumAlgoMore ? math/mathmore/inc/Math/ChebyshevApprox.h: @ingroup NumAlgo. math/mathmore/inc/Math/GSLMultiRootFinder.h: @ingroup NumAlgo. math/mathmore/inc/Math/Interpolator.h:@ingroup NumAlgo. ```. I can do it but then you should provide me the little headers for NumAlgoCore and NumAlgoMore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:473,integrability,Integr,Integrator,473,"@lmoneta it is not that we have it ""now"", it has always been like that. I fully agree that two group like ""NumAlgoCore"" and ""NumAlgoMore"" would be much better. Like:. ```. // the next classe should be in NumAlgoCore ? math/mathcore/inc/Math/DistSamplerOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/GenAlgoOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/IMinimizer1D.h: @ingroup NumAlgo. math/mathcore/inc/Math/IOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/Integrator.h:@ingroup NumAlgo. math/mathcore/inc/Math/Minimizer.h: @ingroup NumAlgo. math/mathcore/inc/Math/RichardsonDerivator.h: @ingroup NumAlgo. math/mathcore/inc/Math/RootFinder.h: @ingroup NumAlgo. // the next classe should be in NumAlgoMore ? math/mathmore/inc/Math/ChebyshevApprox.h: @ingroup NumAlgo. math/mathmore/inc/Math/GSLMultiRootFinder.h: @ingroup NumAlgo. math/mathmore/inc/Math/Interpolator.h:@ingroup NumAlgo. ```. I can do it but then you should provide me the little headers for NumAlgoCore and NumAlgoMore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:473,interoperability,Integr,Integrator,473,"@lmoneta it is not that we have it ""now"", it has always been like that. I fully agree that two group like ""NumAlgoCore"" and ""NumAlgoMore"" would be much better. Like:. ```. // the next classe should be in NumAlgoCore ? math/mathcore/inc/Math/DistSamplerOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/GenAlgoOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/IMinimizer1D.h: @ingroup NumAlgo. math/mathcore/inc/Math/IOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/Integrator.h:@ingroup NumAlgo. math/mathcore/inc/Math/Minimizer.h: @ingroup NumAlgo. math/mathcore/inc/Math/RichardsonDerivator.h: @ingroup NumAlgo. math/mathcore/inc/Math/RootFinder.h: @ingroup NumAlgo. // the next classe should be in NumAlgoMore ? math/mathmore/inc/Math/ChebyshevApprox.h: @ingroup NumAlgo. math/mathmore/inc/Math/GSLMultiRootFinder.h: @ingroup NumAlgo. math/mathmore/inc/Math/Interpolator.h:@ingroup NumAlgo. ```. I can do it but then you should provide me the little headers for NumAlgoCore and NumAlgoMore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:473,modifiability,Integr,Integrator,473,"@lmoneta it is not that we have it ""now"", it has always been like that. I fully agree that two group like ""NumAlgoCore"" and ""NumAlgoMore"" would be much better. Like:. ```. // the next classe should be in NumAlgoCore ? math/mathcore/inc/Math/DistSamplerOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/GenAlgoOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/IMinimizer1D.h: @ingroup NumAlgo. math/mathcore/inc/Math/IOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/Integrator.h:@ingroup NumAlgo. math/mathcore/inc/Math/Minimizer.h: @ingroup NumAlgo. math/mathcore/inc/Math/RichardsonDerivator.h: @ingroup NumAlgo. math/mathcore/inc/Math/RootFinder.h: @ingroup NumAlgo. // the next classe should be in NumAlgoMore ? math/mathmore/inc/Math/ChebyshevApprox.h: @ingroup NumAlgo. math/mathmore/inc/Math/GSLMultiRootFinder.h: @ingroup NumAlgo. math/mathmore/inc/Math/Interpolator.h:@ingroup NumAlgo. ```. I can do it but then you should provide me the little headers for NumAlgoCore and NumAlgoMore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:420,performance,IOp,IOptions,420,"@lmoneta it is not that we have it ""now"", it has always been like that. I fully agree that two group like ""NumAlgoCore"" and ""NumAlgoMore"" would be much better. Like:. ```. // the next classe should be in NumAlgoCore ? math/mathcore/inc/Math/DistSamplerOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/GenAlgoOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/IMinimizer1D.h: @ingroup NumAlgo. math/mathcore/inc/Math/IOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/Integrator.h:@ingroup NumAlgo. math/mathcore/inc/Math/Minimizer.h: @ingroup NumAlgo. math/mathcore/inc/Math/RichardsonDerivator.h: @ingroup NumAlgo. math/mathcore/inc/Math/RootFinder.h: @ingroup NumAlgo. // the next classe should be in NumAlgoMore ? math/mathmore/inc/Math/ChebyshevApprox.h: @ingroup NumAlgo. math/mathmore/inc/Math/GSLMultiRootFinder.h: @ingroup NumAlgo. math/mathmore/inc/Math/Interpolator.h:@ingroup NumAlgo. ```. I can do it but then you should provide me the little headers for NumAlgoCore and NumAlgoMore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:473,reliability,Integr,Integrator,473,"@lmoneta it is not that we have it ""now"", it has always been like that. I fully agree that two group like ""NumAlgoCore"" and ""NumAlgoMore"" would be much better. Like:. ```. // the next classe should be in NumAlgoCore ? math/mathcore/inc/Math/DistSamplerOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/GenAlgoOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/IMinimizer1D.h: @ingroup NumAlgo. math/mathcore/inc/Math/IOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/Integrator.h:@ingroup NumAlgo. math/mathcore/inc/Math/Minimizer.h: @ingroup NumAlgo. math/mathcore/inc/Math/RichardsonDerivator.h: @ingroup NumAlgo. math/mathcore/inc/Math/RootFinder.h: @ingroup NumAlgo. // the next classe should be in NumAlgoMore ? math/mathmore/inc/Math/ChebyshevApprox.h: @ingroup NumAlgo. math/mathmore/inc/Math/GSLMultiRootFinder.h: @ingroup NumAlgo. math/mathmore/inc/Math/Interpolator.h:@ingroup NumAlgo. ```. I can do it but then you should provide me the little headers for NumAlgoCore and NumAlgoMore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:473,security,Integr,Integrator,473,"@lmoneta it is not that we have it ""now"", it has always been like that. I fully agree that two group like ""NumAlgoCore"" and ""NumAlgoMore"" would be much better. Like:. ```. // the next classe should be in NumAlgoCore ? math/mathcore/inc/Math/DistSamplerOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/GenAlgoOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/IMinimizer1D.h: @ingroup NumAlgo. math/mathcore/inc/Math/IOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/Integrator.h:@ingroup NumAlgo. math/mathcore/inc/Math/Minimizer.h: @ingroup NumAlgo. math/mathcore/inc/Math/RichardsonDerivator.h: @ingroup NumAlgo. math/mathcore/inc/Math/RootFinder.h: @ingroup NumAlgo. // the next classe should be in NumAlgoMore ? math/mathmore/inc/Math/ChebyshevApprox.h: @ingroup NumAlgo. math/mathmore/inc/Math/GSLMultiRootFinder.h: @ingroup NumAlgo. math/mathmore/inc/Math/Interpolator.h:@ingroup NumAlgo. ```. I can do it but then you should provide me the little headers for NumAlgoCore and NumAlgoMore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:473,testability,Integr,Integrator,473,"@lmoneta it is not that we have it ""now"", it has always been like that. I fully agree that two group like ""NumAlgoCore"" and ""NumAlgoMore"" would be much better. Like:. ```. // the next classe should be in NumAlgoCore ? math/mathcore/inc/Math/DistSamplerOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/GenAlgoOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/IMinimizer1D.h: @ingroup NumAlgo. math/mathcore/inc/Math/IOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/Integrator.h:@ingroup NumAlgo. math/mathcore/inc/Math/Minimizer.h: @ingroup NumAlgo. math/mathcore/inc/Math/RichardsonDerivator.h: @ingroup NumAlgo. math/mathcore/inc/Math/RootFinder.h: @ingroup NumAlgo. // the next classe should be in NumAlgoMore ? math/mathmore/inc/Math/ChebyshevApprox.h: @ingroup NumAlgo. math/mathmore/inc/Math/GSLMultiRootFinder.h: @ingroup NumAlgo. math/mathmore/inc/Math/Interpolator.h:@ingroup NumAlgo. ```. I can do it but then you should provide me the little headers for NumAlgoCore and NumAlgoMore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:527,usability,Minim,Minimizer,527,"@lmoneta it is not that we have it ""now"", it has always been like that. I fully agree that two group like ""NumAlgoCore"" and ""NumAlgoMore"" would be much better. Like:. ```. // the next classe should be in NumAlgoCore ? math/mathcore/inc/Math/DistSamplerOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/GenAlgoOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/IMinimizer1D.h: @ingroup NumAlgo. math/mathcore/inc/Math/IOptions.h: @ingroup NumAlgo. math/mathcore/inc/Math/Integrator.h:@ingroup NumAlgo. math/mathcore/inc/Math/Minimizer.h: @ingroup NumAlgo. math/mathcore/inc/Math/RichardsonDerivator.h: @ingroup NumAlgo. math/mathcore/inc/Math/RootFinder.h: @ingroup NumAlgo. // the next classe should be in NumAlgoMore ? math/mathmore/inc/Math/ChebyshevApprox.h: @ingroup NumAlgo. math/mathmore/inc/Math/GSLMultiRootFinder.h: @ingroup NumAlgo. math/mathmore/inc/Math/Interpolator.h:@ingroup NumAlgo. ```. I can do it but then you should provide me the little headers for NumAlgoCore and NumAlgoMore",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:81,security,access,access,81,I agree that it would be best for users to have all functions in one place. Menu access to that place should be good and clear though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:34,usability,user,users,34,I agree that it would be best for users to have all functions in one place. Menu access to that place should be good and clear though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:76,usability,Menu,Menu,76,I agree that it would be best for users to have all functions in one place. Menu access to that place should be good and clear though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:121,usability,clear,clear,121,I agree that it would be best for users to have all functions in one place. Menu access to that place should be good and clear though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:113,deployability,Integr,Integrator,113,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:144,deployability,Integr,Integrator,144,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:198,deployability,Integr,Integrator,198,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:669,deployability,Integr,Integrator,669,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:113,integrability,Integr,Integrator,113,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:144,integrability,Integr,Integrator,144,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:198,integrability,Integr,Integrator,198,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:669,integrability,Integr,Integrator,669,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:113,interoperability,Integr,Integrator,113,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:144,interoperability,Integr,Integrator,144,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:198,interoperability,Integr,Integrator,198,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:669,interoperability,Integr,Integrator,669,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:113,modifiability,Integr,Integrator,113,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:144,modifiability,Integr,Integrator,144,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:198,modifiability,Integr,Integrator,198,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:616,modifiability,pac,package,616,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:669,modifiability,Integr,Integrator,669,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:113,reliability,Integr,Integrator,113,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:144,reliability,Integr,Integrator,144,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:198,reliability,Integr,Integrator,198,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:669,reliability,Integr,Integrator,669,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:113,security,Integr,Integrator,113,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:144,security,Integr,Integrator,144,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:198,security,Integr,Integrator,198,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:669,security,Integr,Integrator,669,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:113,testability,Integr,Integrator,113,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:144,testability,Integr,Integrator,144,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:198,testability,Integr,Integrator,198,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:669,testability,Integr,Integrator,669,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:221,usability,document,documentation,221,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:347,usability,document,documentation,347,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:435,usability,document,documentation,435,"I faced another problem. From https://root.cern.ch/doc/master/mathmoreIntegration_8C.html I copy. #include ""Math/Integrator.h"". ... ROOT::Math::Integrator ig(f1 );. but I don't know what the class ""Integrator"" is. In the documentation it is absent! https://root.cern.ch/doc/master/group__Integration.html. I think it should either be added to the documentation or removed from ROOT and tutorials if it's obsolete. O, thanks to the web documentation, I see in the tutorial that it points to https://root.cern.ch/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html . However, I initially used tutorials from my ROOT package, and they gave no clue where to look for the Integrator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:38,security,modif,modify,38,I let @lmoneta comment. I can help to modify the doc if needed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:30,usability,help,help,30,I let @lmoneta comment. I can help to modify the doc if needed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:70,deployability,Integr,Integrator,70,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:171,deployability,Integr,Integrator,171,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:70,integrability,Integr,Integrator,70,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:171,integrability,Integr,Integrator,171,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:70,interoperability,Integr,Integrator,70,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:171,interoperability,Integr,Integrator,171,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:70,modifiability,Integr,Integrator,70,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:171,modifiability,Integr,Integrator,171,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:282,modifiability,maintain,maintain,282,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:70,reliability,Integr,Integrator,70,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:171,reliability,Integr,Integrator,171,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:282,safety,maintain,maintain,282,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:70,security,Integr,Integrator,70,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:171,security,Integr,Integrator,171,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:70,testability,Integr,Integrator,70,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:171,testability,Integr,Integrator,171,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7440:130,usability,hint,hint,130,"Thank you. And one more point. The include directives. #include ""Math/Integrator.h"". or the namespace. Math::. give absolutely no hint where one should look for the class Integrator (or another one from that namespace). Is it MathCore, MathMore or what? Maybe it would be better to maintain the docs also in accord with code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7440
https://github.com/root-project/root/issues/7441:0,deployability,Updat,Update,0,Update: We've found out that we actually never installed it but you got it via the source (via `thisroot.sh`) from the build directory. The focus now shifted toward whether we should disable building them at all to encourage everyone installing the xrootd CLI tools via the official sources.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:47,deployability,instal,installed,47,Update: We've found out that we actually never installed it but you got it via the source (via `thisroot.sh`) from the build directory. The focus now shifted toward whether we should disable building them at all to encourage everyone installing the xrootd CLI tools via the official sources.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:119,deployability,build,build,119,Update: We've found out that we actually never installed it but you got it via the source (via `thisroot.sh`) from the build directory. The focus now shifted toward whether we should disable building them at all to encourage everyone installing the xrootd CLI tools via the official sources.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:191,deployability,build,building,191,Update: We've found out that we actually never installed it but you got it via the source (via `thisroot.sh`) from the build directory. The focus now shifted toward whether we should disable building them at all to encourage everyone installing the xrootd CLI tools via the official sources.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:234,deployability,instal,installing,234,Update: We've found out that we actually never installed it but you got it via the source (via `thisroot.sh`) from the build directory. The focus now shifted toward whether we should disable building them at all to encourage everyone installing the xrootd CLI tools via the official sources.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:0,safety,Updat,Update,0,Update: We've found out that we actually never installed it but you got it via the source (via `thisroot.sh`) from the build directory. The focus now shifted toward whether we should disable building them at all to encourage everyone installing the xrootd CLI tools via the official sources.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:0,security,Updat,Update,0,Update: We've found out that we actually never installed it but you got it via the source (via `thisroot.sh`) from the build directory. The focus now shifted toward whether we should disable building them at all to encourage everyone installing the xrootd CLI tools via the official sources.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:260,usability,tool,tools,260,Update: We've found out that we actually never installed it but you got it via the source (via `thisroot.sh`) from the build directory. The focus now shifted toward whether we should disable building them at all to encourage everyone installing the xrootd CLI tools via the official sources.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:25,deployability,build,builds,25,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:103,deployability,instal,install,103,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:237,deployability,build,build,237,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:247,deployability,instal,install,247,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:333,deployability,instal,install,333,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:374,deployability,build,build,374,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:403,modifiability,pac,package,403,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:497,modifiability,exten,extending,497,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:530,modifiability,pac,packages,530,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:3,usability,person,personal,3,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:441,usability,experien,experience,441,"My personal view: if one builds ROOT with `builtin_xrootd=ON` it means that they can't / don't want to install xrootd on their own, that also goes for xrootd binaries like `xrootd`,`xrdcp`. Thus, I would keep xrootd binaries in the ROOT build and install directories both. Following this reasoning, any other `builtin` option should install any binaries produced during the build process of the builtin package. I think this from my limited experience with xrootd. I might be wrong, especially in extending the reasoning to other packages that I'm not expert of.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:75,deployability,instal,install,75,"From the dedicated team meeting discussion, the decision was: ""we will not install - and ideally not even build - binary artifacts of our builtins""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:106,deployability,build,build,106,"From the dedicated team meeting discussion, the decision was: ""we will not install - and ideally not even build - binary artifacts of our builtins""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:121,deployability,artifact,artifacts,121,"From the dedicated team meeting discussion, the decision was: ""we will not install - and ideally not even build - binary artifacts of our builtins""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:19,security,team,team,19,"From the dedicated team meeting discussion, the decision was: ""we will not install - and ideally not even build - binary artifacts of our builtins""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:99,deployability,build,build,99,"Looks like somehow at some point the behavior switched to not copy `xrdcp` & friends into the ROOT build's `bin` directory. They are still being built though, and they can be used from `<builddir>/builtins/xrootd/XROOTD-prefix/bin/xrdcp`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:187,deployability,build,builddir,187,"Looks like somehow at some point the behavior switched to not copy `xrdcp` & friends into the ROOT build's `bin` directory. They are still being built though, and they can be used from `<builddir>/builtins/xrootd/XROOTD-prefix/bin/xrdcp`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:37,usability,behavi,behavior,37,"Looks like somehow at some point the behavior switched to not copy `xrdcp` & friends into the ROOT build's `bin` directory. They are still being built though, and they can be used from `<builddir>/builtins/xrootd/XROOTD-prefix/bin/xrdcp`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:144,deployability,build,build,144,"Since https://github.com/root-project/root/pull/7335 , xrootd is treated as other builtins in ROOT. That means it gets its own directory in the build process under `<builddir>/builtins/xrootd`. Before this change, the install directory for xrootd corresponded to the ROOT build directory, hence why the xrootd command line executables like `xrdcp` were installed in `<builddir>/bin`. Now all the build process of xrootd is properly confined in its builtin directory, so that in practice this issue is solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:166,deployability,build,builddir,166,"Since https://github.com/root-project/root/pull/7335 , xrootd is treated as other builtins in ROOT. That means it gets its own directory in the build process under `<builddir>/builtins/xrootd`. Before this change, the install directory for xrootd corresponded to the ROOT build directory, hence why the xrootd command line executables like `xrdcp` were installed in `<builddir>/bin`. Now all the build process of xrootd is properly confined in its builtin directory, so that in practice this issue is solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:218,deployability,instal,install,218,"Since https://github.com/root-project/root/pull/7335 , xrootd is treated as other builtins in ROOT. That means it gets its own directory in the build process under `<builddir>/builtins/xrootd`. Before this change, the install directory for xrootd corresponded to the ROOT build directory, hence why the xrootd command line executables like `xrdcp` were installed in `<builddir>/bin`. Now all the build process of xrootd is properly confined in its builtin directory, so that in practice this issue is solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:272,deployability,build,build,272,"Since https://github.com/root-project/root/pull/7335 , xrootd is treated as other builtins in ROOT. That means it gets its own directory in the build process under `<builddir>/builtins/xrootd`. Before this change, the install directory for xrootd corresponded to the ROOT build directory, hence why the xrootd command line executables like `xrdcp` were installed in `<builddir>/bin`. Now all the build process of xrootd is properly confined in its builtin directory, so that in practice this issue is solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:353,deployability,instal,installed,353,"Since https://github.com/root-project/root/pull/7335 , xrootd is treated as other builtins in ROOT. That means it gets its own directory in the build process under `<builddir>/builtins/xrootd`. Before this change, the install directory for xrootd corresponded to the ROOT build directory, hence why the xrootd command line executables like `xrdcp` were installed in `<builddir>/bin`. Now all the build process of xrootd is properly confined in its builtin directory, so that in practice this issue is solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:368,deployability,build,builddir,368,"Since https://github.com/root-project/root/pull/7335 , xrootd is treated as other builtins in ROOT. That means it gets its own directory in the build process under `<builddir>/builtins/xrootd`. Before this change, the install directory for xrootd corresponded to the ROOT build directory, hence why the xrootd command line executables like `xrdcp` were installed in `<builddir>/bin`. Now all the build process of xrootd is properly confined in its builtin directory, so that in practice this issue is solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:396,deployability,build,build,396,"Since https://github.com/root-project/root/pull/7335 , xrootd is treated as other builtins in ROOT. That means it gets its own directory in the build process under `<builddir>/builtins/xrootd`. Before this change, the install directory for xrootd corresponded to the ROOT build directory, hence why the xrootd command line executables like `xrdcp` were installed in `<builddir>/bin`. Now all the build process of xrootd is properly confined in its builtin directory, so that in practice this issue is solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:478,reliability,pra,practice,478,"Since https://github.com/root-project/root/pull/7335 , xrootd is treated as other builtins in ROOT. That means it gets its own directory in the build process under `<builddir>/builtins/xrootd`. Before this change, the install directory for xrootd corresponded to the ROOT build directory, hence why the xrootd command line executables like `xrdcp` were installed in `<builddir>/bin`. Now all the build process of xrootd is properly confined in its builtin directory, so that in practice this issue is solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/issues/7441:310,usability,command,command,310,"Since https://github.com/root-project/root/pull/7335 , xrootd is treated as other builtins in ROOT. That means it gets its own directory in the build process under `<builddir>/builtins/xrootd`. Before this change, the install directory for xrootd corresponded to the ROOT build directory, hence why the xrootd command line executables like `xrdcp` were installed in `<builddir>/bin`. Now all the build process of xrootd is properly confined in its builtin directory, so that in practice this issue is solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7441
https://github.com/root-project/root/pull/7442:167,availability,error,error,167,"@pcanal @Axel-Naumann Please check last commit: https://github.com/root-project/root/pull/7442/commits/00eba76434f292bb83e222f6cd9d0521b242fc2b Seems to be, potential error from `ExtractAutoloadKeys` was ignored",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7442
https://github.com/root-project/root/pull/7442:167,performance,error,error,167,"@pcanal @Axel-Naumann Please check last commit: https://github.com/root-project/root/pull/7442/commits/00eba76434f292bb83e222f6cd9d0521b242fc2b Seems to be, potential error from `ExtractAutoloadKeys` was ignored",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7442
https://github.com/root-project/root/pull/7442:167,safety,error,error,167,"@pcanal @Axel-Naumann Please check last commit: https://github.com/root-project/root/pull/7442/commits/00eba76434f292bb83e222f6cd9d0521b242fc2b Seems to be, potential error from `ExtractAutoloadKeys` was ignored",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7442
https://github.com/root-project/root/pull/7442:167,usability,error,error,167,"@pcanal @Axel-Naumann Please check last commit: https://github.com/root-project/root/pull/7442/commits/00eba76434f292bb83e222f6cd9d0521b242fc2b Seems to be, potential error from `ExtractAutoloadKeys` was ignored",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7442
https://github.com/root-project/root/pull/7443:44,deployability,instal,install,44,Let's move the discussion whether we should install or disable the xrootd CLI tools to #7441.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7443
https://github.com/root-project/root/pull/7443:78,usability,tool,tools,78,Let's move the discussion whether we should install or disable the xrootd CLI tools to #7441.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7443
https://github.com/root-project/root/pull/7443:19,security,team,team,19,Closing this after team discussion https://github.com/root-project/root/issues/7441#issuecomment-821060362,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7443
https://github.com/root-project/root/pull/7446:38,deployability,patch,patches,38,"> @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:23,integrability,sub,submit,23,"> @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:38,safety,patch,patches,38,"> @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:70,safety,review,reviews,70,"> @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:115,safety,review,review,115,"> @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:219,safety,review,reviews,219,"> @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:38,security,patch,patches,38,"> @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:70,testability,review,reviews,70,"> @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:115,testability,review,review,115,"> @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:194,testability,understand,understand,194,"> @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:219,testability,review,reviews,219,"> @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:40,deployability,patch,patches,40,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:656,deployability,patch,patch,656,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:25,integrability,sub,submit,25,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:683,integrability,sub,subscriber,683,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:40,safety,patch,patches,40,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:72,safety,review,reviews,72,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:123,safety,review,review,123,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:227,safety,review,reviews,227,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:256,safety,review,reviews,256,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:309,safety,review,reviewed,309,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:541,safety,review,review,541,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:656,safety,patch,patch,656,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:694,safety,review,reviewer,694,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:743,safety,review,reviewing,743,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:40,security,patch,patches,40,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:635,security,hash,hash,635,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:656,security,patch,patch,656,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:72,testability,review,reviews,72,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:123,testability,review,review,123,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:202,testability,understand,understand,202,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:227,testability,review,reviews,227,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:256,testability,review,reviews,256,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:309,testability,review,reviewed,309,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:541,testability,review,review,541,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:694,testability,review,reviewer,694,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:743,testability,review,reviewing,743,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7446:566,usability,guidanc,guidance,566,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org? > . > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7446
https://github.com/root-project/root/pull/7447:92,energy efficiency,alloc,allocation,92,"Whoops, sorry about that! Went too quick. The other fix is nicer and avoids the short-lived allocation altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7447
https://github.com/root-project/root/pull/7447:69,safety,avoid,avoids,69,"Whoops, sorry about that! Went too quick. The other fix is nicer and avoids the short-lived allocation altogether.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7447
https://github.com/root-project/root/pull/7453:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7453
https://github.com/root-project/root/pull/7455:5,availability,failur,failures,5,Test failures are unrelated to this change. Likely related to #7433 and 2c4a756d38d9b5f0348f645a116b3014159f03d6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7455
https://github.com/root-project/root/pull/7455:5,deployability,fail,failures,5,Test failures are unrelated to this change. Likely related to #7433 and 2c4a756d38d9b5f0348f645a116b3014159f03d6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7455
https://github.com/root-project/root/pull/7455:5,performance,failur,failures,5,Test failures are unrelated to this change. Likely related to #7433 and 2c4a756d38d9b5f0348f645a116b3014159f03d6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7455
https://github.com/root-project/root/pull/7455:5,reliability,fail,failures,5,Test failures are unrelated to this change. Likely related to #7433 and 2c4a756d38d9b5f0348f645a116b3014159f03d6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7455
https://github.com/root-project/root/pull/7455:0,safety,Test,Test,0,Test failures are unrelated to this change. Likely related to #7433 and 2c4a756d38d9b5f0348f645a116b3014159f03d6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7455
https://github.com/root-project/root/pull/7455:0,testability,Test,Test,0,Test failures are unrelated to this change. Likely related to #7433 and 2c4a756d38d9b5f0348f645a116b3014159f03d6,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7455
https://github.com/root-project/root/pull/7456:20,deployability,version,version,20,I think bumping the version number is part of making the release. @Axel-Naumann might comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7456
https://github.com/root-project/root/pull/7456:57,deployability,releas,release,57,I think bumping the version number is part of making the release. @Axel-Naumann might comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7456
https://github.com/root-project/root/pull/7456:20,integrability,version,version,20,I think bumping the version number is part of making the release. @Axel-Naumann might comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7456
https://github.com/root-project/root/pull/7456:20,modifiability,version,version,20,I think bumping the version number is part of making the release. @Axel-Naumann might comment.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7456
https://github.com/root-project/root/pull/7456:63,deployability,releas,release-candidate,63,That will only happen for the 6.24/00 tag. We are currently in release-candidate phase as signaled by the trailing 99.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7456
https://github.com/root-project/root/pull/7456:50,energy efficiency,current,currently,50,That will only happen for the 6.24/00 tag. We are currently in release-candidate phase as signaled by the trailing 99.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7456
https://github.com/root-project/root/pull/7456:90,security,sign,signaled,90,That will only happen for the 6.24/00 tag. We are currently in release-candidate phase as signaled by the trailing 99.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7456
https://github.com/root-project/root/pull/7457:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7457
https://github.com/root-project/root/pull/7457:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7457
https://github.com/root-project/root/pull/7457:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7457
https://github.com/root-project/root/pull/7457:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7457
https://github.com/root-project/root/pull/7457:91,deployability,automat,automated,91,"@ferdymercury sorry for the delay. Would you be able to rebase onto master, apparently the automated merge is failing. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7457
https://github.com/root-project/root/pull/7457:110,deployability,fail,failing,110,"@ferdymercury sorry for the delay. Would you be able to rebase onto master, apparently the automated merge is failing. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7457
https://github.com/root-project/root/pull/7457:110,reliability,fail,failing,110,"@ferdymercury sorry for the delay. Would you be able to rebase onto master, apparently the automated merge is failing. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7457
https://github.com/root-project/root/pull/7457:91,testability,automat,automated,91,"@ferdymercury sorry for the delay. Would you be able to rebase onto master, apparently the automated merge is failing. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7457
https://github.com/root-project/root/issues/7460:22,usability,close,closed,22,This should have been closed by the relevant commits...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7460
https://github.com/root-project/root/pull/7461:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7461
https://github.com/root-project/root/pull/7461:99,deployability,build,build,99,@evonreis please fork also [roottest](https://github.com/root-project/roottest) to prevent Windows build timeout. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7461
https://github.com/root-project/root/pull/7461:105,performance,time,timeout,105,@evonreis please fork also [roottest](https://github.com/root-project/roottest) to prevent Windows build timeout. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7461
https://github.com/root-project/root/pull/7461:83,safety,prevent,prevent,83,@evonreis please fork also [roottest](https://github.com/root-project/roottest) to prevent Windows build timeout. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7461
https://github.com/root-project/root/pull/7461:105,safety,timeout,timeout,105,@evonreis please fork also [roottest](https://github.com/root-project/roottest) to prevent Windows build timeout. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7461
https://github.com/root-project/root/pull/7461:83,security,preven,prevent,83,@evonreis please fork also [roottest](https://github.com/root-project/roottest) to prevent Windows build timeout. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7461
https://github.com/root-project/root/pull/7463:98,usability,clear,clear,98,> Only lingering question is whether a `out.reserve(strlen(in)*2)` would be useful ... (it is not clear if it would). It would be really strange.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7463
https://github.com/root-project/root/pull/7464:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7464
https://github.com/root-project/root/pull/7464:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7464
https://github.com/root-project/root/pull/7464:103,security,auth,author,103,"> @chrisburr, apologies for the delay. Is this PR still relevant? If so could you rebase it? Since the author of the PR didn't follow up on this request from one and a half years ago, I'll close this PR as stalled. But of course, should this be relevant for you again, feel free to re-open it or create a new PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7464
https://github.com/root-project/root/pull/7464:189,usability,close,close,189,"> @chrisburr, apologies for the delay. Is this PR still relevant? If so could you rebase it? Since the author of the PR didn't follow up on this request from one and a half years ago, I'll close this PR as stalled. But of course, should this be relevant for you again, feel free to re-open it or create a new PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7464
https://github.com/root-project/root/pull/7465:52,deployability,instal,installed,52,"@Axel-Naumann, do we have on any Jenkins nodes OCCI installed? Is it tested by chance while I only can prove on my single platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7465
https://github.com/root-project/root/pull/7465:122,interoperability,platform,platform,122,"@Axel-Naumann, do we have on any Jenkins nodes OCCI installed? Is it tested by chance while I only can prove on my single platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7465
https://github.com/root-project/root/pull/7465:69,safety,test,tested,69,"@Axel-Naumann, do we have on any Jenkins nodes OCCI installed? Is it tested by chance while I only can prove on my single platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7465
https://github.com/root-project/root/pull/7465:69,testability,test,tested,69,"@Axel-Naumann, do we have on any Jenkins nodes OCCI installed? Is it tested by chance while I only can prove on my single platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7465
https://github.com/root-project/root/pull/7465:11,deployability,build,build,11,On this PR build for all nodes `-Doracle=off` :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7465
https://github.com/root-project/root/pull/7469:129,availability,error,errors,129,@eguiraud Can be https://github.com/root-project/root/pull/7469/commits/cb41756658bf8046f41ec60f126e680fba19c4fc reason for last errors I saw in Jenkins?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:129,performance,error,errors,129,@eguiraud Can be https://github.com/root-project/root/pull/7469/commits/cb41756658bf8046f41ec60f126e680fba19c4fc reason for last errors I saw in Jenkins?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:129,safety,error,errors,129,@eguiraud Can be https://github.com/root-project/root/pull/7469/commits/cb41756658bf8046f41ec60f126e680fba19c4fc reason for last errors I saw in Jenkins?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:129,usability,error,errors,129,@eguiraud Can be https://github.com/root-project/root/pull/7469/commits/cb41756658bf8046f41ec60f126e680fba19c4fc reason for last errors I saw in Jenkins?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:26,availability,error,errors,26,"@linev I don't know, what errors? :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:26,performance,error,errors,26,"@linev I don't know, what errors? :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:26,safety,error,errors,26,"@linev I don't know, what errors? :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:26,usability,error,errors,26,"@linev I don't know, what errors? :D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:54,availability,error,errors,54,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:88,availability,servic,services,88,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:88,deployability,servic,services,88,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:140,deployability,build,build,140,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:16,integrability,sub,submit,16,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:88,integrability,servic,services,88,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:88,modifiability,servic,services,88,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:54,performance,error,errors,54,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:54,safety,error,errors,54,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:198,safety,test,test-testActionHelpers,198,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:198,testability,test,test-testActionHelpers,198,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:54,usability,error,errors,54,"@eguiraud Why I submit too many PRs, I see very often errors like here:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/110020/console. And `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` appears very often",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:40,safety,test,test-testActionHelpers,40,"Uhm no, `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` is unrelated to the changes in cb41756 (which I will review properly as soon as possible)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:117,safety,review,review,117,"Uhm no, `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` is unrelated to the changes in cb41756 (which I will review properly as soon as possible)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:40,testability,test,test-testActionHelpers,40,"Uhm no, `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` is unrelated to the changes in cb41756 (which I will review properly as soon as possible)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:117,testability,review,review,117,"Uhm no, `gtest-roofit-RDataFrameHelpers-test-testActionHelpers` is unrelated to the changes in cb41756 (which I will review properly as soon as possible)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:123,availability,operat,operation,123,@eguiraud . Can you approve too? Only in RDF it is not only reset pointers to nullptr after deletion (which should be safe operation). but also memory leak in ActionHelpers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:144,performance,memor,memory,144,@eguiraud . Can you approve too? Only in RDF it is not only reset pointers to nullptr after deletion (which should be safe operation). but also memory leak in ActionHelpers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:118,safety,safe,safe,118,@eguiraud . Can you approve too? Only in RDF it is not only reset pointers to nullptr after deletion (which should be safe operation). but also memory leak in ActionHelpers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:144,usability,memor,memory,144,@eguiraud . Can you approve too? Only in RDF it is not only reset pointers to nullptr after deletion (which should be safe operation). but also memory leak in ActionHelpers.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:16,safety,review,review,16,"@linev yes I'll review tomorrow, please wait until then to merge :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/pull/7469:16,testability,review,review,16,"@linev yes I'll review tomorrow, please wait until then to merge :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7469
https://github.com/root-project/root/issues/7470:33,energy efficiency,current,currently,33,Any news on this issue? (This is currently blocking a Merge Request on our project),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7470
https://github.com/root-project/root/issues/7470:150,modifiability,refact,refactoring,150,"The real case is a bit more convoluted than the example so, if this is a temporary workaround, we'd prefer to wait a little bit more to avoid heavily refactoring the code. . Unless this is a ""won't fix"" :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7470
https://github.com/root-project/root/issues/7470:150,performance,refactor,refactoring,150,"The real case is a bit more convoluted than the example so, if this is a temporary workaround, we'd prefer to wait a little bit more to avoid heavily refactoring the code. . Unless this is a ""won't fix"" :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7470
https://github.com/root-project/root/issues/7470:136,safety,avoid,avoid,136,"The real case is a bit more convoluted than the example so, if this is a temporary workaround, we'd prefer to wait a little bit more to avoid heavily refactoring the code. . Unless this is a ""won't fix"" :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7470
https://github.com/root-project/root/issues/7470:100,usability,prefer,prefer,100,"The real case is a bit more convoluted than the example so, if this is a temporary workaround, we'd prefer to wait a little bit more to avoid heavily refactoring the code. . Unless this is a ""won't fix"" :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7470
https://github.com/root-project/root/pull/7473:40,deployability,fail,failed,40,@eguiraud Here only `testActionHelpers` failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7473
https://github.com/root-project/root/pull/7473:40,reliability,fail,failed,40,@eguiraud Here only `testActionHelpers` failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7473
https://github.com/root-project/root/pull/7473:21,safety,test,testActionHelpers,21,@eguiraud Here only `testActionHelpers` failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7473
https://github.com/root-project/root/pull/7473:21,testability,test,testActionHelpers,21,@eguiraud Here only `testActionHelpers` failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7473
https://github.com/root-project/root/pull/7473:50,availability,failur,failures,50,"It's a recent RooFit addition by @hageboeck , the failures seem to be due to precision issues",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7473
https://github.com/root-project/root/pull/7473:50,deployability,fail,failures,50,"It's a recent RooFit addition by @hageboeck , the failures seem to be due to precision issues",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7473
https://github.com/root-project/root/pull/7473:50,performance,failur,failures,50,"It's a recent RooFit addition by @hageboeck , the failures seem to be due to precision issues",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7473
https://github.com/root-project/root/pull/7473:50,reliability,fail,failures,50,"It's a recent RooFit addition by @hageboeck , the failures seem to be due to precision issues",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7473
https://github.com/root-project/root/pull/7477:19,usability,close,closed,19,This PR is will be closed for now because the problem was solved already in https://github.com/root-project/root/pull/7478. So it's not really necessary at this point to skip the cloning of the tree. Maybe this will be revisited in the future if other problems with cloning the tree might pop up.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7477
https://github.com/root-project/root/pull/7480:102,deployability,fail,fails,102,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:306,deployability,fail,fails,306,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:261,energy efficiency,model,model,261,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:325,energy efficiency,model,model,325,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:404,energy efficiency,model,model,404,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:66,integrability,sub,subfields,66,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:45,reliability,doe,doesn,45,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:102,reliability,fail,fails,102,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:306,reliability,fail,fails,306,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:97,safety,test,test,97,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:261,security,model,model,261,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:325,security,model,model,325,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:404,security,model,model,404,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:97,testability,test,test,97,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:126,usability,Custom,CustomStruct,126,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:278,usability,Custom,CustomStruct,278,"As discussed, this PR isn't ready because it doesn't handle class subfields correctly, e.g. this test fails: . ```cpp. struct CustomStruct {. float a = 0.0;. std::vector<float> v1;. std::vector<std::vector<float>> v2;. std::string s;. };. ... . auto ptrKlass = model->MakeField<CustomStruct>(""klass"");. // fails. EXPECT_TRUE(model->HasField(""klass.a"")); . ```. A better approach might be to traverse the model tree to check field names.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:0,deployability,Updat,Updated,0,"Updated with a full tree search, which also lets us remove the `RNTupleModel` field name set member entirely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:0,safety,Updat,Updated,0,"Updated with a full tree search, which also lets us remove the `RNTupleModel` field name set member entirely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:0,security,Updat,Updated,0,"Updated with a full tree search, which also lets us remove the `RNTupleModel` field name set member entirely.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:5,deployability,API,API,5,"This API's use case is somewhat addressed by the existing method `Get<T>`, ie: . `HasField(""field.name"") ~ model->Get<T>(""field.name"") != nullptr`. but `Get` requires a template parameter and I think `HasField` is a nice surface-level API (if the type is wrong but a field with that name exists, what does `Get` return?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:235,deployability,API,API,235,"This API's use case is somewhat addressed by the existing method `Get<T>`, ie: . `HasField(""field.name"") ~ model->Get<T>(""field.name"") != nullptr`. but `Get` requires a template parameter and I think `HasField` is a nice surface-level API (if the type is wrong but a field with that name exists, what does `Get` return?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:107,energy efficiency,model,model,107,"This API's use case is somewhat addressed by the existing method `Get<T>`, ie: . `HasField(""field.name"") ~ model->Get<T>(""field.name"") != nullptr`. but `Get` requires a template parameter and I think `HasField` is a nice surface-level API (if the type is wrong but a field with that name exists, what does `Get` return?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:5,integrability,API,API,5,"This API's use case is somewhat addressed by the existing method `Get<T>`, ie: . `HasField(""field.name"") ~ model->Get<T>(""field.name"") != nullptr`. but `Get` requires a template parameter and I think `HasField` is a nice surface-level API (if the type is wrong but a field with that name exists, what does `Get` return?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:235,integrability,API,API,235,"This API's use case is somewhat addressed by the existing method `Get<T>`, ie: . `HasField(""field.name"") ~ model->Get<T>(""field.name"") != nullptr`. but `Get` requires a template parameter and I think `HasField` is a nice surface-level API (if the type is wrong but a field with that name exists, what does `Get` return?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:5,interoperability,API,API,5,"This API's use case is somewhat addressed by the existing method `Get<T>`, ie: . `HasField(""field.name"") ~ model->Get<T>(""field.name"") != nullptr`. but `Get` requires a template parameter and I think `HasField` is a nice surface-level API (if the type is wrong but a field with that name exists, what does `Get` return?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:235,interoperability,API,API,235,"This API's use case is somewhat addressed by the existing method `Get<T>`, ie: . `HasField(""field.name"") ~ model->Get<T>(""field.name"") != nullptr`. but `Get` requires a template parameter and I think `HasField` is a nice surface-level API (if the type is wrong but a field with that name exists, what does `Get` return?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:178,modifiability,paramet,parameter,178,"This API's use case is somewhat addressed by the existing method `Get<T>`, ie: . `HasField(""field.name"") ~ model->Get<T>(""field.name"") != nullptr`. but `Get` requires a template parameter and I think `HasField` is a nice surface-level API (if the type is wrong but a field with that name exists, what does `Get` return?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:301,reliability,doe,does,301,"This API's use case is somewhat addressed by the existing method `Get<T>`, ie: . `HasField(""field.name"") ~ model->Get<T>(""field.name"") != nullptr`. but `Get` requires a template parameter and I think `HasField` is a nice surface-level API (if the type is wrong but a field with that name exists, what does `Get` return?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7480:107,security,model,model,107,"This API's use case is somewhat addressed by the existing method `Get<T>`, ie: . `HasField(""field.name"") ~ model->Get<T>(""field.name"") != nullptr`. but `Get` requires a template parameter and I think `HasField` is a nice surface-level API (if the type is wrong but a field with that name exists, what does `Get` return?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7480
https://github.com/root-project/root/pull/7484:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7484
https://github.com/root-project/root/pull/7488:121,availability,reliab,reliably,121,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:396,availability,failur,failures,396,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2364,availability,down,down,2364,"atorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +317,7 @@ CompoundStmt *CompoundStmt::CreateEmpty(const ASTContext &C,. void *Mem =. C.Allocate(totalSizeToAlloc<Stmt *>(NumStmts), alignof(CompoundStmt));. CompoundStmt *New = new (Mem) CompoundStmt(EmptyShell());. + New->CompoundStmtBits.WasReplaced = 0;. New->CompoundStmtBits.NumStmts = NumStmts;. return New;. }. ```. which smells fishy (but I don't want to go down that rabbit hole if the patch is not deemed suitable for other reasons)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:60,deployability,upgrad,upgrading,60,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:279,deployability,patch,patch,279,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:396,deployability,fail,failures,396,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:568,deployability,patch,patch,568,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2393,deployability,patch,patch,2393,"atorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +317,7 @@ CompoundStmt *CompoundStmt::CreateEmpty(const ASTContext &C,. void *Mem =. C.Allocate(totalSizeToAlloc<Stmt *>(NumStmts), alignof(CompoundStmt));. CompoundStmt *New = new (Mem) CompoundStmt(EmptyShell());. + New->CompoundStmtBits.WasReplaced = 0;. New->CompoundStmtBits.NumStmts = NumStmts;. return New;. }. ```. which smells fishy (but I don't want to go down that rabbit hole if the patch is not deemed suitable for other reasons)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:356,energy efficiency,current,currently,356,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2085,energy efficiency,Alloc,Allocate,2085,"atorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +317,7 @@ CompoundStmt *CompoundStmt::CreateEmpty(const ASTContext &C,. void *Mem =. C.Allocate(totalSizeToAlloc<Stmt *>(NumStmts), alignof(CompoundStmt));. CompoundStmt *New = new (Mem) CompoundStmt(EmptyShell());. + New->CompoundStmtBits.WasReplaced = 0;. New->CompoundStmtBits.NumStmts = NumStmts;. return New;. }. ```. which smells fishy (but I don't want to go down that rabbit hole if the patch is not deemed suitable for other reasons)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1225,integrability,pub,public,1225,"). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +317,7 @@ CompoundStmt *CompoundStmt::CreateEmpty(const ASTContext &C,. void *Mem =. C.Allocate(totalSizeToAlloc<Stmt *>(NumStmts), alignof(CompoundStmt));. CompoundStmt *New = new (Mem) CompoundStmt(EmptyShell());. + New->Compoun",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:60,modifiability,upgrad,upgrading,60,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:85,performance,time,time,85,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:187,performance,time,time,187,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:267,performance,content,contentious,267,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:396,performance,failur,failures,396,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:121,reliability,reliab,reliably,121,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:396,reliability,fail,failures,396,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:279,safety,patch,patch,279,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:391,safety,test,test,391,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:429,safety,test,test-CladDerivatorTests,429,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:475,safety,test,test-TFormulaGradientTests,475,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:568,safety,patch,patch,568,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:590,safety,test,tests,590,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2393,safety,patch,patch,2393,"atorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +317,7 @@ CompoundStmt *CompoundStmt::CreateEmpty(const ASTContext &C,. void *Mem =. C.Allocate(totalSizeToAlloc<Stmt *>(NumStmts), alignof(CompoundStmt));. CompoundStmt *New = new (Mem) CompoundStmt(EmptyShell());. + New->CompoundStmtBits.WasReplaced = 0;. New->CompoundStmtBits.NumStmts = NumStmts;. return New;. }. ```. which smells fishy (but I don't want to go down that rabbit hole if the patch is not deemed suitable for other reasons)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:217,security,auth,authorships,217,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:279,security,patch,patch,279,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:568,security,patch,patch,568,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2393,security,patch,patch,2393,"atorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +317,7 @@ CompoundStmt *CompoundStmt::CreateEmpty(const ASTContext &C,. void *Mem =. C.Allocate(totalSizeToAlloc<Stmt *>(NumStmts), alignof(CompoundStmt));. CompoundStmt *New = new (Mem) CompoundStmt(EmptyShell());. + New->CompoundStmtBits.WasReplaced = 0;. New->CompoundStmtBits.NumStmts = NumStmts;. return New;. }. ```. which smells fishy (but I don't want to go down that rabbit hole if the patch is not deemed suitable for other reasons)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:372,testability,understand,understand,372,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:391,testability,test,test,391,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:429,testability,test,test-CladDerivatorTests,429,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:475,testability,test,test-TFormulaGradientTests,475,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:590,testability,test,tests,590,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:334,usability,feedback,feedback,334,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:694,usability,tool,tools,694,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:754,usability,tool,tools,754,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:856,usability,tool,tools,856,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:921,usability,tool,tools,921,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1465,usability,tool,tools,1465,"atorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +317,7 @@ CompoundStmt *CompoundStmt::CreateEmpty(const ASTContext &C,. void *Mem =. C.Allocate(totalSizeToAlloc<Stmt *>(NumStmts), alignof(CompoundStmt));. CompoundStmt *New = new (Mem) CompoundStmt(EmptyShell());. + New->CompoundStmtBits.WasReplaced = 0;. New->CompoundStmtBits.NumStmts = NumStmts;. return New;. }. ```. which smells fishy (but I don't want to go down that rabbit hole if the patch is not deemed suitable for other reasons)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1517,usability,tool,tools,1517,"atorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +317,7 @@ CompoundStmt *CompoundStmt::CreateEmpty(const ASTContext &C,. void *Mem =. C.Allocate(totalSizeToAlloc<Stmt *>(NumStmts), alignof(CompoundStmt));. CompoundStmt *New = new (Mem) CompoundStmt(EmptyShell());. + New->CompoundStmtBits.WasReplaced = 0;. New->CompoundStmtBits.NumStmts = NumStmts;. return New;. }. ```. which smells fishy (but I don't want to go down that rabbit hole if the patch is not deemed suitable for other reasons)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1611,usability,tool,tools,1611,"atorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +317,7 @@ CompoundStmt *CompoundStmt::CreateEmpty(const ASTContext &C,. void *Mem =. C.Allocate(totalSizeToAlloc<Stmt *>(NumStmts), alignof(CompoundStmt));. CompoundStmt *New = new (Mem) CompoundStmt(EmptyShell());. + New->CompoundStmtBits.WasReplaced = 0;. New->CompoundStmtBits.NumStmts = NumStmts;. return New;. }. ```. which smells fishy (but I don't want to go down that rabbit hole if the patch is not deemed suitable for other reasons)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1668,usability,tool,tools,1668,"atorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:. ```diff. diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. index 403b88ac3a..5e1581f098 100644. --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h. @@ -131,7 +131,8 @@ protected:. . unsigned : NumStmtBits;. . - unsigned NumStmts : 32 - NumStmtBits;. + unsigned WasReplaced : 1;. + unsigned NumStmts : 32 - (NumStmtBits + 1);. . /// The location of the opening ""{"". SourceLocation LBraceLoc;. @@ -1328,6 +1329,7 @@ public:. explicit CompoundStmt(SourceLocation Loc). : Stmt(CompoundStmtClass), RBraceLoc(Loc) {. CompoundStmtBits.NumStmts = 0;. + CompoundStmtBits.WasReplaced = 0;. CompoundStmtBits.LBraceLoc = Loc;. }. . diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. index 0a4d403106..cc8c6888b8 100644. --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp. @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,. SourceLocation RB). : Stmt(CompoundStmtClass), RBraceLoc(RB) {. CompoundStmtBits.NumStmts = Stmts.size();. + CompoundStmtBits.WasReplaced = 0;. setStmts(Stmts);. CompoundStmtBits.LBraceLoc = LB;. }. @@ -316,6 +317,7 @@ CompoundStmt *CompoundStmt::CreateEmpty(const ASTContext &C,. void *Mem =. C.Allocate(totalSizeToAlloc<Stmt *>(NumStmts), alignof(CompoundStmt));. CompoundStmt *New = new (Mem) CompoundStmt(EmptyShell());. + New->CompoundStmtBits.WasReplaced = 0;. New->CompoundStmtBits.NumStmts = NumStmts;. return New;. }. ```. which smells fishy (but I don't want to go down that rabbit hole if the patch is not deemed suitable for other reasons)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:172,deployability,fail,failing,172,"I *think* that we don't actually need the recursive visits in `EvaluateTSynthesizer`, which removes the need for the temporary AST node. However, I can still reproduce the failing clad tests... Edit: And applying the ""fix"" from https://github.com/root-project/root/pull/7488#issuecomment-797417462 still works - WHY?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:172,reliability,fail,failing,172,"I *think* that we don't actually need the recursive visits in `EvaluateTSynthesizer`, which removes the need for the temporary AST node. However, I can still reproduce the failing clad tests... Edit: And applying the ""fix"" from https://github.com/root-project/root/pull/7488#issuecomment-797417462 still works - WHY?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:185,safety,test,tests,185,"I *think* that we don't actually need the recursive visits in `EvaluateTSynthesizer`, which removes the need for the temporary AST node. However, I can still reproduce the failing clad tests... Edit: And applying the ""fix"" from https://github.com/root-project/root/pull/7488#issuecomment-797417462 still works - WHY?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:185,testability,test,tests,185,"I *think* that we don't actually need the recursive visits in `EvaluateTSynthesizer`, which removes the need for the temporary AST node. However, I can still reproduce the failing clad tests... Edit: And applying the ""fix"" from https://github.com/root-project/root/pull/7488#issuecomment-797417462 still works - WHY?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:90,availability,failur,failures,90,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:394,availability,failur,failures,394,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:90,deployability,fail,failures,90,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:373,deployability,patch,patch,373,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:394,deployability,fail,failures,394,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:386,energy efficiency,current,current,386,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:47,interoperability,share,share,47,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:90,performance,failur,failures,90,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:394,performance,failur,failures,394,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:90,reliability,fail,failures,90,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:322,reliability,doe,does,322,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:394,reliability,fail,failures,394,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:85,safety,test,test,85,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:155,safety,test,tests,155,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:373,safety,patch,patch,373,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:373,security,patch,patch,373,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:85,testability,test,test,85,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:155,testability,test,tests,155,"@hahnjo, thanks for working on this! Could you share some more information about the test failures? . Just like you, I am quite puzzled why that fixes any tests... The only reason that I can think of is we did not properly reverted https://github.com/vgvassilev/clang/commit/fce26074d415c33196632442e344b5c43efba6e2 which does not seem the case... Can you remove the fixup patch to see current failures? PS: Maybe somehow clad picks up old headers/libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:577,availability,Failur,Failure,577,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:888,availability,Failur,Failure,888,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1198,availability,Failur,Failure,1198,"ing main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1976,availability,down,down,1976,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2338,availability,failur,failures,2338,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:238,deployability,build,build,238,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:577,deployability,Fail,Failure,577,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:721,deployability,FAIL,FAILED,721,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:888,deployability,Fail,Failure,888,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1025,deployability,FAIL,FAILED,1025,"h-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1198,deployability,Fail,Failure,1198,"ing main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1336,deployability,FAIL,FAILED,1336,"s from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2079,deployability,FAIL,FAILED,2079,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2119,deployability,FAIL,FAILED,2119,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2163,deployability,FAIL,FAILED,2163,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2213,deployability,FAIL,FAILED,2213,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2271,deployability,FAIL,FAILED,2271,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2317,deployability,patch,patch,2317,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2338,deployability,fail,failures,2338,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2387,deployability,contain,contain,2387,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2626,deployability,build,building,2626,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2651,deployability,version,version,2651,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2330,energy efficiency,current,current,2330,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2556,energy efficiency,load,loads,2556,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2616,energy efficiency,current,currently,2616,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2651,integrability,version,version,2651,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2651,modifiability,version,version,2651,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:577,performance,Failur,Failure,577,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:888,performance,Failur,Failure,888,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1198,performance,Failur,Failure,1198,"ing main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2338,performance,failur,failures,2338,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2556,performance,load,loads,2556,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2579,performance,memor,memory,2579,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:577,reliability,Fail,Failure,577,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:721,reliability,FAIL,FAILED,721,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:888,reliability,Fail,Failure,888,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1025,reliability,FAIL,FAILED,1025,"h-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ra",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1198,reliability,Fail,Failure,1198,"ing main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1336,reliability,FAIL,FAILED,1336,"s from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2079,reliability,FAIL,FAILED,2079,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2119,reliability,FAIL,FAILED,2119,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2163,reliability,FAIL,FAILED,2163,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2213,reliability,FAIL,FAILED,2213,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2271,reliability,FAIL,FAILED,2271,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2338,reliability,fail,failures,2338,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2379,reliability,doe,doesn,2379,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2455,reliability,doe,doesn,2455,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:39,safety,test,test-CladDerivatorTests,39,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:152,safety,test,test-TFormulaGradientTests,152,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:335,safety,test,tests,335,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:348,safety,test,test,348,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:385,safety,test,test,385,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:430,safety,test,tests,430,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:495,safety,Sanit,Sanity,495,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:542,safety,test,test,542,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:750,safety,Sanit,Sanity,750,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:853,safety,test,test,853,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1163,safety,test,test,1163,"GradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1876,safety,test,tests,1876,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1954,safety,test,test,1954,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2002,safety,test,tests,2002,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2015,safety,test,test,2015,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2065,safety,test,tests,2065,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2090,safety,test,tests,2090,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2148,safety,Sanit,Sanity,2148,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2278,safety,TEST,TESTS,2278,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2317,safety,patch,patch,2317,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:495,security,Sanit,Sanity,495,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:750,security,Sanit,Sanity,750,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2148,security,Sanit,Sanity,2148,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2317,security,patch,patch,2317,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:39,testability,test,test-CladDerivatorTests,39,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:152,testability,test,test-TFormulaGradientTests,152,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:335,testability,test,tests,335,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:348,testability,test,test,348,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:385,testability,test,test,385,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:430,testability,test,tests,430,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:542,testability,test,test,542,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:853,testability,test,test,853,"@vgvassilev sure: `gtest-math-mathcore-test-CladDerivatorTests` crashes with an illegal instruction somewhere in the JITed code, while `gtest-hist-hist-test-TFormulaGradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1163,testability,test,test,1163,"GradientTests` shows:. ```. 105: Running main() from /home/jhahnfel/ROOT/build/googletest-prefix/src/googletest/googletest/src/gtest_main.cc. 105: [==========] Running 7 tests from 1 test suite. 105: [----------] Global test environment set-up. 105: [----------] 7 tests from TFormulaGradientPar. 105: [ RUN ] TFormulaGradientPar.Sanity. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:34: Failure. 105: Expected equality of these values:. 105: x[0] * std::cos(30). 105: Which is: 0.15425146. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FA",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1876,testability,test,tests,1876,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:1954,testability,test,test,1954,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2002,testability,test,tests,2002,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2015,testability,test,test,2015,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2065,testability,test,tests,2065,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2090,testability,test,tests,2090,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2278,testability,TEST,TESTS,2278,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2638,testability,instrument,instrumented,2638,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:2579,usability,memor,memory,2579,"[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.Sanity (134 ms). 105: [ RUN ] TFormulaGradientPar.ResultUpsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:52: Failure. 105: Expected equality of these values:. 105: std::cos(30). 105: Which is: 0.15425146. 105: result[1]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize (6 ms). 105: [ RUN ] TFormulaGradientPar.ResultDownsize. 105: /home/jhahnfel/ROOT/src/hist/hist/test/TFormulaGradientTests.cxx:69: Failure. 105: Expected equality of these values:. 105: std::cos(60). 105: Which is: -0.95241296. 105: result[0]. 105: Which is: 0. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize (6 ms). 105: [ RUN ] TFormulaGradientPar.GausCrossCheck. 105: [ OK ] TFormulaGradientPar.GausCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheck. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheck (6 ms). 105: [ RUN ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo. 105: [ OK ] TFormulaGradientPar.BreitWignerCrossCheckAccuracyDemo (0 ms). 105: [ RUN ] TFormulaGradientPar.GetGradFormula. 105: [ OK ] TFormulaGradientPar.GetGradFormula (1 ms). 105: [----------] 7 tests from TFormulaGradientPar (159 ms total). 105:. 105: [----------] Global test environment tear-down. 105: [==========] 7 tests from 1 test suite ran. (159 ms total). 105: [ PASSED ] 4 tests. 105: [ FAILED ] 3 tests, listed below:. 105: [ FAILED ] TFormulaGradientPar.Sanity. 105: [ FAILED ] TFormulaGradientPar.ResultUpsize. 105: [ FAILED ] TFormulaGradientPar.ResultDownsize. 105:. 105: 3 FAILED TESTS. ```. > Can you remove the fixup patch to see current failures? That's the funny thing: the PR doesn't contain the fixup, but Jenkins is happy anyway. It could be that it doesn't include clad (which would be bad) or that some of my changes either introduce or uncover bad loads of uninitialized memory or use-after-free issues. I'm currently building an instrumented version of ROOT with AddressSanitizer...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:17,deployability,build,build,17,"@hahnjo, is your build incremental? Like, you built the master, then rebuild the PR code? If so, clad won't be rebuilt as any of the other `ExternalProject_Add`s in cmake...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:19,deployability,build,build,19,"> @hahnjo, is your build incremental? Like, you built the master, then rebuild the PR code? If so, clad won't be rebuilt as any of the other `ExternalProject_Add`s in cmake... Yes, I'm building incrementally, but even removing `interpreter/cling/tools/plugins/clad/clad-prefix/` and forcing a rebuild of Clad doesn't solve the issue. I think ASan found an issue in Clad, but now I need to rebuild with debug symbols in order to locate it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:185,deployability,build,building,185,"> @hahnjo, is your build incremental? Like, you built the master, then rebuild the PR code? If so, clad won't be rebuilt as any of the other `ExternalProject_Add`s in cmake... Yes, I'm building incrementally, but even removing `interpreter/cling/tools/plugins/clad/clad-prefix/` and forcing a rebuild of Clad doesn't solve the issue. I think ASan found an issue in Clad, but now I need to rebuild with debug symbols in order to locate it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:252,interoperability,plug,plugins,252,"> @hahnjo, is your build incremental? Like, you built the master, then rebuild the PR code? If so, clad won't be rebuilt as any of the other `ExternalProject_Add`s in cmake... Yes, I'm building incrementally, but even removing `interpreter/cling/tools/plugins/clad/clad-prefix/` and forcing a rebuild of Clad doesn't solve the issue. I think ASan found an issue in Clad, but now I need to rebuild with debug symbols in order to locate it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:309,reliability,doe,doesn,309,"> @hahnjo, is your build incremental? Like, you built the master, then rebuild the PR code? If so, clad won't be rebuilt as any of the other `ExternalProject_Add`s in cmake... Yes, I'm building incrementally, but even removing `interpreter/cling/tools/plugins/clad/clad-prefix/` and forcing a rebuild of Clad doesn't solve the issue. I think ASan found an issue in Clad, but now I need to rebuild with debug symbols in order to locate it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:246,usability,tool,tools,246,"> @hahnjo, is your build incremental? Like, you built the master, then rebuild the PR code? If so, clad won't be rebuilt as any of the other `ExternalProject_Add`s in cmake... Yes, I'm building incrementally, but even removing `interpreter/cling/tools/plugins/clad/clad-prefix/` and forcing a rebuild of Clad doesn't solve the issue. I think ASan found an issue in Clad, but now I need to rebuild with debug symbols in order to locate it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:10,usability,progress,progress,10,"Ok, good, progress! I'd propose to move forward with this change and address the clad issue separately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:82,deployability,fail,failing,82,"Eventually yes (feel free to review the current changes), but I don't like having failing tests. Green Jenkins being one thing, but I also want all to pass locally :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:40,energy efficiency,current,current,40,"Eventually yes (feel free to review the current changes), but I don't like having failing tests. Green Jenkins being one thing, but I also want all to pass locally :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:97,energy efficiency,Green,Green,97,"Eventually yes (feel free to review the current changes), but I don't like having failing tests. Green Jenkins being one thing, but I also want all to pass locally :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:0,integrability,Event,Eventually,0,"Eventually yes (feel free to review the current changes), but I don't like having failing tests. Green Jenkins being one thing, but I also want all to pass locally :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:82,reliability,fail,failing,82,"Eventually yes (feel free to review the current changes), but I don't like having failing tests. Green Jenkins being one thing, but I also want all to pass locally :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:29,safety,review,review,29,"Eventually yes (feel free to review the current changes), but I don't like having failing tests. Green Jenkins being one thing, but I also want all to pass locally :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:90,safety,test,tests,90,"Eventually yes (feel free to review the current changes), but I don't like having failing tests. Green Jenkins being one thing, but I also want all to pass locally :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:29,testability,review,review,29,"Eventually yes (feel free to review the current changes), but I don't like having failing tests. Green Jenkins being one thing, but I also want all to pass locally :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:90,testability,test,tests,90,"Eventually yes (feel free to review the current changes), but I don't like having failing tests. Green Jenkins being one thing, but I also want all to pass locally :smiley:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:380,availability,error,errors,380,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:254,deployability,fail,fail,254,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:83,performance,memor,memory,83,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:380,performance,error,errors,380,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:120,reliability,doe,doesn,120,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:254,reliability,fail,fail,254,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:99,safety,sanit,sanitizer,99,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:145,safety,test,tests,145,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:173,safety,test,test-CladDerivatorTests,173,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:219,safety,test,test-TFormulaGradientTests,219,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:327,safety,detect,detect,327,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:380,safety,error,errors,380,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:99,security,sanit,sanitizer,99,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:327,security,detect,detect,327,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:145,testability,test,tests,145,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:173,testability,test,test-CladDerivatorTests,173,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:219,testability,test,test-TFormulaGradientTests,219,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:83,usability,memor,memory,83,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:380,usability,error,errors,380,"Hm, the ""finding"" from ASan was #7968 aka Clad built without ASan and setting some memory that the sanitizer afterwards doesn't know about. Both tests, `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests`, still fail in the same way as before, but ASan stays silent so it either can't detect the problem or there's none from the class of errors it checks. Back to the beginning...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:22,deployability,build,build,22,"Could you delete your build folder, reconfigure and rebuild?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:406,availability,failur,failures,406,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:279,deployability,build,build,279,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:338,deployability,build,build,338,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:406,deployability,fail,failures,406,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:441,deployability,build,build,441,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:85,interoperability,plug,plugins,85,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:199,interoperability,plug,plugin,199,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:406,performance,failur,failures,406,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:130,reliability,doe,does,130,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:406,reliability,fail,failures,406,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:253,safety,test,tests,253,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:219,testability,understand,understand,219,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:253,testability,test,tests,253,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:79,usability,tool,tools,79,"Okay, I just found where I made the mistake: While deleting `interpreter/cling/tools/plugins/clad/clad-prefix/` rebuilds Clad, it does *NOT* rebuild `libCling.so` which includes the statically built plugin (as far as I understand). It's now passing all tests with an incremental build when taking this into consideration. I'll do a clean build over the night and re-think tomorrow morning, but I think the failures were indeed caused by the build system.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:13,deployability,build,build,13,"Yep, a clean build passed all tests. And to prove the point, I then switched back to `master` (without additional measures) and now the tests are failing there (because Clad wasn't rebuilt for changed-back headers). So everything checks out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:146,deployability,fail,failing,146,"Yep, a clean build passed all tests. And to prove the point, I then switched back to `master` (without additional measures) and now the tests are failing there (because Clad wasn't rebuilt for changed-back headers). So everything checks out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:114,energy efficiency,measur,measures,114,"Yep, a clean build passed all tests. And to prove the point, I then switched back to `master` (without additional measures) and now the tests are failing there (because Clad wasn't rebuilt for changed-back headers). So everything checks out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:146,reliability,fail,failing,146,"Yep, a clean build passed all tests. And to prove the point, I then switched back to `master` (without additional measures) and now the tests are failing there (because Clad wasn't rebuilt for changed-back headers). So everything checks out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:30,safety,test,tests,30,"Yep, a clean build passed all tests. And to prove the point, I then switched back to `master` (without additional measures) and now the tests are failing there (because Clad wasn't rebuilt for changed-back headers). So everything checks out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:136,safety,test,tests,136,"Yep, a clean build passed all tests. And to prove the point, I then switched back to `master` (without additional measures) and now the tests are failing there (because Clad wasn't rebuilt for changed-back headers). So everything checks out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:30,testability,test,tests,30,"Yep, a clean build passed all tests. And to prove the point, I then switched back to `master` (without additional measures) and now the tests are failing there (because Clad wasn't rebuilt for changed-back headers). So everything checks out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7488:136,testability,test,tests,136,"Yep, a clean build passed all tests. And to prove the point, I then switched back to `master` (without additional measures) and now the tests are failing there (because Clad wasn't rebuilt for changed-back headers). So everything checks out.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7488
https://github.com/root-project/root/pull/7494:11,deployability,build,build,11,@phsft-bot build! @Axel-Naumann can you add @henryiii to the known people to the bot?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7494
https://github.com/root-project/root/pull/7494:9,performance,time,times,9,The test times out. I do not see how that can be related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7494
https://github.com/root-project/root/pull/7494:4,safety,test,test,4,The test times out. I do not see how that can be related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7494
https://github.com/root-project/root/pull/7494:4,testability,test,test,4,The test times out. I do not see how that can be related to this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7494
https://github.com/root-project/root/pull/7495:474,energy efficiency,alloc,allocated,474,"## DeepCode's analysis on [#d0d750](https://www.deepcode.ai/app/gh/root-project/root/d8c788993d4ea2cefee4a3b2c7e351f602d7001d/root-project/root/d0d750da86b8920b6bcb0ef8959398725342909d/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGFileDialog is allocated on the heap and never freed. In function SaveFileAs. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/d0d750da86b8920b6bcb0ef8959398725342909d/gui/guihtml/src/TGHtml.cxx#L1363"">TGHtml.cxx:1363</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/d8c788993d4ea2cefee4a3b2c7e351f602d7001d/root-project/root/d0d750da86b8920b6bcb0ef8959398725342909d/pr/_/%2Fgui%2Fguihtml%2Fsrc%2FTGHtml.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d8c788993d4ea2cefee4a3b2c7e351f602d7001d/root-project/root/d0d750da86b8920b6bcb0ef8959398725342909d/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7495
https://github.com/root-project/root/pull/7495:450,performance,memor,memory,450,"## DeepCode's analysis on [#d0d750](https://www.deepcode.ai/app/gh/root-project/root/d8c788993d4ea2cefee4a3b2c7e351f602d7001d/root-project/root/d0d750da86b8920b6bcb0ef8959398725342909d/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGFileDialog is allocated on the heap and never freed. In function SaveFileAs. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/d0d750da86b8920b6bcb0ef8959398725342909d/gui/guihtml/src/TGHtml.cxx#L1363"">TGHtml.cxx:1363</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/d8c788993d4ea2cefee4a3b2c7e351f602d7001d/root-project/root/d0d750da86b8920b6bcb0ef8959398725342909d/pr/_/%2Fgui%2Fguihtml%2Fsrc%2FTGHtml.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d8c788993d4ea2cefee4a3b2c7e351f602d7001d/root-project/root/d0d750da86b8920b6bcb0ef8959398725342909d/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7495
https://github.com/root-project/root/pull/7495:450,usability,memor,memory,450,"## DeepCode's analysis on [#d0d750](https://www.deepcode.ai/app/gh/root-project/root/d8c788993d4ea2cefee4a3b2c7e351f602d7001d/root-project/root/d0d750da86b8920b6bcb0ef8959398725342909d/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) found:. - :warning: **1** warning :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">Leaking memory. TGFileDialog is allocated on the heap and never freed. In function SaveFileAs. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/d0d750da86b8920b6bcb0ef8959398725342909d/gui/guihtml/src/TGHtml.cxx#L1363"">TGHtml.cxx:1363</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/d8c788993d4ea2cefee4a3b2c7e351f602d7001d/root-project/root/d0d750da86b8920b6bcb0ef8959398725342909d/pr/_/%2Fgui%2Fguihtml%2Fsrc%2FTGHtml.cxx/cpp%2Fdc%2FCppMemoryLeak/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/d8c788993d4ea2cefee4a3b2c7e351f602d7001d/root-project/root/d0d750da86b8920b6bcb0ef8959398725342909d/pr/_/%2F/code/?utm_source=gh_review&c=0&w=1&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7495
https://github.com/root-project/root/pull/7495:90,safety,review,review,90,"> I guess, `Print` menu item left unimplemented intentionally? Absolutely, thanks for the review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7495
https://github.com/root-project/root/pull/7495:90,testability,review,review,90,"> I guess, `Print` menu item left unimplemented intentionally? Absolutely, thanks for the review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7495
https://github.com/root-project/root/pull/7495:19,usability,menu,menu,19,"> I guess, `Print` menu item left unimplemented intentionally? Absolutely, thanks for the review!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7495
https://github.com/root-project/root/issues/7496:55,deployability,version,version,55,"Please provide more context - platform, compiler, ROOT version and how to reproduce problem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:55,integrability,version,version,55,"Please provide more context - platform, compiler, ROOT version and how to reproduce problem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:30,interoperability,platform,platform,30,"Please provide more context - platform, compiler, ROOT version and how to reproduce problem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:55,modifiability,version,version,55,"Please provide more context - platform, compiler, ROOT version and how to reproduce problem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:20,testability,context,context,20,"Please provide more context - platform, compiler, ROOT version and how to reproduce problem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:105,energy efficiency,reduc,reduce,105,"This happens when you iterate a loop to much. I'm assuming this is a for-loop, in which case you need to reduce the number of iterations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:57,availability,error,error,57,"I was running an old code on CMSSW_10, it gave the above error but then i downgraded to CMSSW_8 and the code ran fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:74,availability,down,downgraded,74,"I was running an old code on CMSSW_10, it gave the above error but then i downgraded to CMSSW_8 and the code ran fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:57,performance,error,error,57,"I was running an old code on CMSSW_10, it gave the above error but then i downgraded to CMSSW_8 and the code ran fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:57,safety,error,error,57,"I was running an old code on CMSSW_10, it gave the above error but then i downgraded to CMSSW_8 and the code ran fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/issues/7496:57,usability,error,error,57,"I was running an old code on CMSSW_10, it gave the above error but then i downgraded to CMSSW_8 and the code ran fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7496
https://github.com/root-project/root/pull/7499:20,safety,review,review,20,We need @lmoneta to review the changes in THn and TNDArray,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:20,testability,review,review,20,We need @lmoneta to review the changes in THn and TNDArray,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:66,performance,time,timescale,66,"@bendavid about a), a move to C++14 for ROOT6 is foreseen but the timescale is too long to matter for this PR, I'm afraid.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:17,deployability,build,build,17,(will start a PR build after merge conflicts are resolved),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:35,interoperability,conflict,conflicts,35,(will start a PR build after merge conflicts are resolved),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:95,availability,operat,operations,95,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:705,availability,slo,slower,705,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:9,energy efficiency,draw,drawback,9,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:767,energy efficiency,optim,optimization,767,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:475,modifiability,concern,concerns,475,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:648,modifiability,concern,concern,648,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:767,performance,optimiz,optimization,767,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:705,reliability,slo,slower,705,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:36,security,hack,hack,36,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:475,testability,concern,concerns,475,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:648,testability,concern,concern,648,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:371,usability,prefer,preferred,371,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:544,usability,help,help,544,"The main drawback of the ""temporary hack"" is that there is some duplication of information and operations now between the size of the vector and separate integer data members in the class which were previously needed to keep track of the size of the arrays. If migrating from bare arrays to ```std::vector``` to allow the compiler to autogenerate the constructors is the preferred solution (rather than implementing them by hand) then I can of course clean this up. For what concerns the readability of the code in C++11, one thing which could help a little bit and might be feasible is if ```std::apply``` were added to the STL backports. Another concern I had is that this implementation might be a bit slower than the previous individual cases if compiled without optimization (e.g. when jitted).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:33,performance,time,time,33,@bendavid whenever you will have time can you please rebase on master? I will retrigger CI after...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:205,interoperability,conflict,conflicts,205,@Axel-Naumann is it ok to switch THn to std::vectors instead of C-style arrays as it's done in this PR? We get compiler-defined constructors out of it. @bendavid can you please rebase on master to fix the conflicts when you have time?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:229,performance,time,time,229,@Axel-Naumann is it ok to switch THn to std::vectors instead of C-style arrays as it's done in this PR? We get compiler-defined constructors out of it. @bendavid can you please rebase on master to fix the conflicts when you have time?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:193,availability,redund,redundant,193,"Yes I would like some feedback on the use of std::vector so I can take care of that appropriately together with rebasing. If this strategy is agreed I can also clean up a bit more to avoid the redundant size counters, etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:193,deployability,redundan,redundant,193,"Yes I would like some feedback on the use of std::vector so I can take care of that appropriately together with rebasing. If this strategy is agreed I can also clean up a bit more to avoid the redundant size counters, etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:193,reliability,redundan,redundant,193,"Yes I would like some feedback on the use of std::vector so I can take care of that appropriately together with rebasing. If this strategy is agreed I can also clean up a bit more to avoid the redundant size counters, etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:183,safety,avoid,avoid,183,"Yes I would like some feedback on the use of std::vector so I can take care of that appropriately together with rebasing. If this strategy is agreed I can also clean up a bit more to avoid the redundant size counters, etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:193,safety,redund,redundant,193,"Yes I would like some feedback on the use of std::vector so I can take care of that appropriately together with rebasing. If this strategy is agreed I can also clean up a bit more to avoid the redundant size counters, etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:22,usability,feedback,feedback,22,"Yes I would like some feedback on the use of std::vector so I can take care of that appropriately together with rebasing. If this strategy is agreed I can also clean up a bit more to avoid the redundant size counters, etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:175,availability,slo,slot,175,"There's something weird going on with clang-format here, where running locally seems to give a different result from the online checks for e.g. ```cpp. void Exec(unsigned int slot, const Xs &...xs). ```. vs. ```cpp. void Exec(unsigned int slot, const Xs &... xs). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:239,availability,slo,slot,239,"There's something weird going on with clang-format here, where running locally seems to give a different result from the online checks for e.g. ```cpp. void Exec(unsigned int slot, const Xs &...xs). ```. vs. ```cpp. void Exec(unsigned int slot, const Xs &... xs). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:44,interoperability,format,format,44,"There's something weird going on with clang-format here, where running locally seems to give a different result from the online checks for e.g. ```cpp. void Exec(unsigned int slot, const Xs &...xs). ```. vs. ```cpp. void Exec(unsigned int slot, const Xs &... xs). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:175,reliability,slo,slot,175,"There's something weird going on with clang-format here, where running locally seems to give a different result from the online checks for e.g. ```cpp. void Exec(unsigned int slot, const Xs &...xs). ```. vs. ```cpp. void Exec(unsigned int slot, const Xs &... xs). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:239,reliability,slo,slot,239,"There's something weird going on with clang-format here, where running locally seems to give a different result from the online checks for e.g. ```cpp. void Exec(unsigned int slot, const Xs &...xs). ```. vs. ```cpp. void Exec(unsigned int slot, const Xs &... xs). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:111,deployability,version,versions,111,"Thanks Josh, I'll do one last review pass as soon as I have spare cycles. Re: clang-format, probably different versions disagree on some edge cases, you can ignore the CI complaints.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:111,integrability,version,versions,111,"Thanks Josh, I'll do one last review pass as soon as I have spare cycles. Re: clang-format, probably different versions disagree on some edge cases, you can ignore the CI complaints.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:84,interoperability,format,format,84,"Thanks Josh, I'll do one last review pass as soon as I have spare cycles. Re: clang-format, probably different versions disagree on some edge cases, you can ignore the CI complaints.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:111,modifiability,version,versions,111,"Thanks Josh, I'll do one last review pass as soon as I have spare cycles. Re: clang-format, probably different versions disagree on some edge cases, you can ignore the CI complaints.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:30,safety,review,review,30,"Thanks Josh, I'll do one last review pass as soon as I have spare cycles. Re: clang-format, probably different versions disagree on some edge cases, you can ignore the CI complaints.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:171,safety,compl,complaints,171,"Thanks Josh, I'll do one last review pass as soon as I have spare cycles. Re: clang-format, probably different versions disagree on some edge cases, you can ignore the CI complaints.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:171,security,compl,complaints,171,"Thanks Josh, I'll do one last review pass as soon as I have spare cycles. Re: clang-format, probably different versions disagree on some edge cases, you can ignore the CI complaints.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:30,testability,review,review,30,"Thanks Josh, I'll do one last review pass as soon as I have spare cycles. Re: clang-format, probably different versions disagree on some edge cases, you can ignore the CI complaints.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:6,deployability,updat,update,6,"Small update to this to make the new Fill method for THnBase also work with integers (ie allowing the normal set of implicit type conversions, rather than excluding narrowing ones).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:130,interoperability,convers,conversions,130,"Small update to this to make the new Fill method for THnBase also work with integers (ie allowing the normal set of implicit type conversions, rather than excluding narrowing ones).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:6,safety,updat,update,6,"Small update to this to make the new Fill method for THnBase also work with integers (ie allowing the normal set of implicit type conversions, rather than excluding narrowing ones).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:6,security,updat,update,6,"Small update to this to make the new Fill method for THnBase also work with integers (ie allowing the normal set of implicit type conversions, rather than excluding narrowing ones).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:50,availability,redund,redundant,50,Rebased and addressed the remaining comments. The redundant size variables have also been removed from TNDArray and TNDArrayT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:50,deployability,redundan,redundant,50,Rebased and addressed the remaining comments. The redundant size variables have also been removed from TNDArray and TNDArrayT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:65,modifiability,variab,variables,65,Rebased and addressed the remaining comments. The redundant size variables have also been removed from TNDArray and TNDArrayT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:50,reliability,redundan,redundant,50,Rebased and addressed the remaining comments. The redundant size variables have also been removed from TNDArray and TNDArrayT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:50,safety,redund,redundant,50,Rebased and addressed the remaining comments. The redundant size variables have also been removed from TNDArray and TNDArrayT.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:5,interoperability,format,formatting,5,(The formatting complaints are the same particular case of the parameter pack arguments as before.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:63,modifiability,paramet,parameter,63,(The formatting complaints are the same particular case of the parameter pack arguments as before.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:73,modifiability,pac,pack,73,(The formatting complaints are the same particular case of the parameter pack arguments as before.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:16,safety,compl,complaints,16,(The formatting complaints are the same particular case of the parameter pack arguments as before.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:16,security,compl,complaints,16,(The formatting complaints are the same particular case of the parameter pack arguments as before.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:9,availability,failur,failure,9,The test failure is related to the std::string case. Is the desired behaviour here really to loop over characters? (and allow them to be implicitly converted to doubles when filling a TH1D for example),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:9,deployability,fail,failure,9,The test failure is related to the std::string case. Is the desired behaviour here really to loop over characters? (and allow them to be implicitly converted to doubles when filling a TH1D for example),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:9,performance,failur,failure,9,The test failure is related to the std::string case. Is the desired behaviour here really to loop over characters? (and allow them to be implicitly converted to doubles when filling a TH1D for example),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:9,reliability,fail,failure,9,The test failure is related to the std::string case. Is the desired behaviour here really to loop over characters? (and allow them to be implicitly converted to doubles when filling a TH1D for example),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:4,safety,test,test,4,The test failure is related to the std::string case. Is the desired behaviour here really to loop over characters? (and allow them to be implicitly converted to doubles when filling a TH1D for example),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:4,testability,test,test,4,The test failure is related to the std::string case. Is the desired behaviour here really to loop over characters? (and allow them to be implicitly converted to doubles when filling a TH1D for example),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:68,usability,behavi,behaviour,68,The test failure is related to the std::string case. Is the desired behaviour here really to loop over characters? (and allow them to be implicitly converted to doubles when filling a TH1D for example),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:99,availability,servic,services,99,@Axel-Naumann any idea why jenkins keeps checking out an older commit for roottest? https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132494/consoleFull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:99,deployability,servic,services,99,@Axel-Naumann any idea why jenkins keeps checking out an older commit for roottest? https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132494/consoleFull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:151,deployability,build,build,151,@Axel-Naumann any idea why jenkins keeps checking out an older commit for roottest? https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132494/consoleFull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:99,integrability,servic,services,99,@Axel-Naumann any idea why jenkins keeps checking out an older commit for roottest? https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132494/consoleFull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:99,modifiability,servic,services,99,@Axel-Naumann any idea why jenkins keeps checking out an older commit for roottest? https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/132494/consoleFull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:11,deployability,build,build,11,@phsft-bot build. Should be fixed (caused by server migration),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:24,availability,failur,failures,24,"@bendavid the remaining failures are real (ignoring tmva), can you please take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:24,deployability,fail,failures,24,"@bendavid the remaining failures are real (ignoring tmva), can you please take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:24,performance,failur,failures,24,"@bendavid the remaining failures are real (ignoring tmva), can you please take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:24,reliability,fail,failures,24,"@bendavid the remaining failures are real (ignoring tmva), can you please take a look?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:38,safety,test,test,38,Should be fixed now. The ND histogram test was using a huge number of bins by mistake.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:38,testability,test,test,38,Should be fixed now. The ND histogram test was using a huge number of bins by mistake.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:8,availability,failur,failure,8,"Windows failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:8,deployability,fail,failure,8,"Windows failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:8,performance,failur,failure,8,"Windows failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/pull/7499:8,reliability,fail,failure,8,"Windows failure is unrelated, merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7499
https://github.com/root-project/root/issues/7500:25,performance,time,time,25,"thank you for taking the time to open the issue with a repro, I will take a look as soon as possible",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:180,availability,ping,ping,180,"I think what you are seeing is #7547, which is very real and it will be soon fixed by #7550 . That problem does not have to do with multiple simultaneous Snapshots however. I will ping you here when we have nightly builds with #7547 fixed so you can check whether you still see problems with simultaneous Snapshots, is that ok?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:215,deployability,build,builds,215,"I think what you are seeing is #7547, which is very real and it will be soon fixed by #7550 . That problem does not have to do with multiple simultaneous Snapshots however. I will ping you here when we have nightly builds with #7547 fixed so you can check whether you still see problems with simultaneous Snapshots, is that ok?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:107,reliability,doe,does,107,"I think what you are seeing is #7547, which is very real and it will be soon fixed by #7550 . That problem does not have to do with multiple simultaneous Snapshots however. I will ping you here when we have nightly builds with #7547 fixed so you can check whether you still see problems with simultaneous Snapshots, is that ok?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:141,testability,simul,simultaneous,141,"I think what you are seeing is #7547, which is very real and it will be soon fixed by #7550 . That problem does not have to do with multiple simultaneous Snapshots however. I will ping you here when we have nightly builds with #7547 fixed so you can check whether you still see problems with simultaneous Snapshots, is that ok?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:292,testability,simul,simultaneous,292,"I think what you are seeing is #7547, which is very real and it will be soon fixed by #7550 . That problem does not have to do with multiple simultaneous Snapshots however. I will ping you here when we have nightly builds with #7547 fixed so you can check whether you still see problems with simultaneous Snapshots, is that ok?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:20,energy efficiency,reduc,reduced,20,Ah! I had not fully reduced the problem. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:71,deployability,contain,contain,71,"@NJManganelli tomorrow's [nightlies](https://root.cern/nightlies) will contain the fix for #7547, please let me know if you still see a crash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:433,availability,sli,slightly,433,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:330,deployability,releas,release,330,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:469,deployability,version,version,469,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:147,integrability,event,event,147,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:469,integrability,version,version,469,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:578,integrability,wrap,wraps,578,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:469,modifiability,version,version,469,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:222,performance,content,contents,222,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:433,reliability,sli,slightly,433,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:162,usability,confirm,confirm,162,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:554,usability,close,close,554,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7500:606,usability,satisfa,satisfaction,606,"@eguiraud This works (Mar 18 nightly /dev3/, trying in the real analysis code, where I booked 3 snapshots lazily, then a non-lazy one to start the event loop; to confirm explicitly, the files look good and have reasonable contents. Thanks for the fast turnaround on this! I suppose it'll be a while before this is in a stable LCG release. Not sure if there's a good way to source whatever the latest stable LCG is and then pull in a slightly later but not-nightly root version, but if so that would be great to know about. Otherwise, thanks again, I can close the issue if this wraps up everything to your satisfaction as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7500
https://github.com/root-project/root/issues/7501:193,integrability,pub,public,193,"cppyy-only reproducer. ```python. #!/usr/bin/python. import numpy as np. import cppyy. cppyy.cppdef("""""". #ifndef _test_class_h. #define _test_class_h. #include <iostream>. class test_class. {. public:. int track_length=0;. float *v1 = nullptr; //[track_length]. float *v2 = nullptr; //[track_length]. test_class(). {	. std::cout << ""default constr"" << std::endl;. };. test_class(float *x, float *y, int tl). {. v1 = x;. v2 = y;. track_length = tl;. };. void Set(float *x, float *y, int tl). {. v1 = x;. v2 = y;. track_length = tl;. };. };. #endif. """"""). # Working. b = cppyy.gbl.test_class(np.array([24, 26], dtype=np.float32), np.array(. [324, 25], dtype=np.float32), 2). print(b.v1[0], b.v2[0]). # Working. b = cppyy.gbl.test_class(). b.Set(np.array([24, 26], dtype=np.float32),. np.array([324, 25], dtype=np.float32), 2). print(b.v1[0], b.v2[0]). # Not working - length 2. b = cppyy.gbl.test_class(). b.v1 = np.array([24, 25], dtype=np.float32). b.v2 = np.array([324, 35], dtype=np.float32). b.track_length = 2. b.v7 = np.array([2340, 235], dtype=np.float32). print(b.v1[0], b.v1[1]). print(b.v2[0], b.v2[1]). print(b.v7). # Not working - length 4. b = cppyy.gbl.test_class(). b.v1 = np.array([24, 25, 1, 3], dtype=np.float32). b.v2 = np.array([324, 35, 7, 5], dtype=np.float32). b.track_length = 4. b.v7 = np.array([2340, 235], dtype=np.float32). print(b.v1[0], b.v1[1], b.v1[2], b.v1[3]). print(b.v2[0], b.v2[1], b.v2[2], b.v2[3]). print(b.v7). ```. Note the addition of a second ""not working"" snippet. With the original reproducer, printing all values of `v1` and `v2` arrays shows that they actually are the same as `v7`, whereas if the length of the first two arrays is longer than the length of the third, `v1` and `v2` are equal to each other and `v7` stays the same . ```. 24.0 324.0. default constr. 24.0 324.0. default constr. 2340.0 235.0. 2340.0 235.0. [2340. 235.]. default constr. 324.0 35.0 7.0 5.0. 324.0 35.0 7.0 5.0. [2340. 235.]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:318,availability,state,statement,318,"It's not a cppyy problem (and that is separate from the fact that this works fine as-is in cppyy master). You're storing pointers to temporaries. What is claimed to be ""working"" above are just cases where the deleted memory has not been overwritten with new data yet, because the arrays have the same lifetime (single statement). In the setting of properties case, the memory, if arrays are the same size, from one statement is re-used on the next statement. If you store the directly constructed `test_class` in a differently named variable and check it at the end of the script, there's a good chance that the values will be wrong at that point. I.e., for your fork, none of the above work. The more common case is actually assigning `str` to `const char*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:415,availability,state,statement,415,"It's not a cppyy problem (and that is separate from the fact that this works fine as-is in cppyy master). You're storing pointers to temporaries. What is claimed to be ""working"" above are just cases where the deleted memory has not been overwritten with new data yet, because the arrays have the same lifetime (single statement). In the setting of properties case, the memory, if arrays are the same size, from one statement is re-used on the next statement. If you store the directly constructed `test_class` in a differently named variable and check it at the end of the script, there's a good chance that the values will be wrong at that point. I.e., for your fork, none of the above work. The more common case is actually assigning `str` to `const char*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:448,availability,state,statement,448,"It's not a cppyy problem (and that is separate from the fact that this works fine as-is in cppyy master). You're storing pointers to temporaries. What is claimed to be ""working"" above are just cases where the deleted memory has not been overwritten with new data yet, because the arrays have the same lifetime (single statement). In the setting of properties case, the memory, if arrays are the same size, from one statement is re-used on the next statement. If you store the directly constructed `test_class` in a differently named variable and check it at the end of the script, there's a good chance that the values will be wrong at that point. I.e., for your fork, none of the above work. The more common case is actually assigning `str` to `const char*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:318,integrability,state,statement,318,"It's not a cppyy problem (and that is separate from the fact that this works fine as-is in cppyy master). You're storing pointers to temporaries. What is claimed to be ""working"" above are just cases where the deleted memory has not been overwritten with new data yet, because the arrays have the same lifetime (single statement). In the setting of properties case, the memory, if arrays are the same size, from one statement is re-used on the next statement. If you store the directly constructed `test_class` in a differently named variable and check it at the end of the script, there's a good chance that the values will be wrong at that point. I.e., for your fork, none of the above work. The more common case is actually assigning `str` to `const char*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:415,integrability,state,statement,415,"It's not a cppyy problem (and that is separate from the fact that this works fine as-is in cppyy master). You're storing pointers to temporaries. What is claimed to be ""working"" above are just cases where the deleted memory has not been overwritten with new data yet, because the arrays have the same lifetime (single statement). In the setting of properties case, the memory, if arrays are the same size, from one statement is re-used on the next statement. If you store the directly constructed `test_class` in a differently named variable and check it at the end of the script, there's a good chance that the values will be wrong at that point. I.e., for your fork, none of the above work. The more common case is actually assigning `str` to `const char*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:448,integrability,state,statement,448,"It's not a cppyy problem (and that is separate from the fact that this works fine as-is in cppyy master). You're storing pointers to temporaries. What is claimed to be ""working"" above are just cases where the deleted memory has not been overwritten with new data yet, because the arrays have the same lifetime (single statement). In the setting of properties case, the memory, if arrays are the same size, from one statement is re-used on the next statement. If you store the directly constructed `test_class` in a differently named variable and check it at the end of the script, there's a good chance that the values will be wrong at that point. I.e., for your fork, none of the above work. The more common case is actually assigning `str` to `const char*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:533,modifiability,variab,variable,533,"It's not a cppyy problem (and that is separate from the fact that this works fine as-is in cppyy master). You're storing pointers to temporaries. What is claimed to be ""working"" above are just cases where the deleted memory has not been overwritten with new data yet, because the arrays have the same lifetime (single statement). In the setting of properties case, the memory, if arrays are the same size, from one statement is re-used on the next statement. If you store the directly constructed `test_class` in a differently named variable and check it at the end of the script, there's a good chance that the values will be wrong at that point. I.e., for your fork, none of the above work. The more common case is actually assigning `str` to `const char*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:217,performance,memor,memory,217,"It's not a cppyy problem (and that is separate from the fact that this works fine as-is in cppyy master). You're storing pointers to temporaries. What is claimed to be ""working"" above are just cases where the deleted memory has not been overwritten with new data yet, because the arrays have the same lifetime (single statement). In the setting of properties case, the memory, if arrays are the same size, from one statement is re-used on the next statement. If you store the directly constructed `test_class` in a differently named variable and check it at the end of the script, there's a good chance that the values will be wrong at that point. I.e., for your fork, none of the above work. The more common case is actually assigning `str` to `const char*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:369,performance,memor,memory,369,"It's not a cppyy problem (and that is separate from the fact that this works fine as-is in cppyy master). You're storing pointers to temporaries. What is claimed to be ""working"" above are just cases where the deleted memory has not been overwritten with new data yet, because the arrays have the same lifetime (single statement). In the setting of properties case, the memory, if arrays are the same size, from one statement is re-used on the next statement. If you store the directly constructed `test_class` in a differently named variable and check it at the end of the script, there's a good chance that the values will be wrong at that point. I.e., for your fork, none of the above work. The more common case is actually assigning `str` to `const char*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:217,usability,memor,memory,217,"It's not a cppyy problem (and that is separate from the fact that this works fine as-is in cppyy master). You're storing pointers to temporaries. What is claimed to be ""working"" above are just cases where the deleted memory has not been overwritten with new data yet, because the arrays have the same lifetime (single statement). In the setting of properties case, the memory, if arrays are the same size, from one statement is re-used on the next statement. If you store the directly constructed `test_class` in a differently named variable and check it at the end of the script, there's a good chance that the values will be wrong at that point. I.e., for your fork, none of the above work. The more common case is actually assigning `str` to `const char*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/issues/7501:369,usability,memor,memory,369,"It's not a cppyy problem (and that is separate from the fact that this works fine as-is in cppyy master). You're storing pointers to temporaries. What is claimed to be ""working"" above are just cases where the deleted memory has not been overwritten with new data yet, because the arrays have the same lifetime (single statement). In the setting of properties case, the memory, if arrays are the same size, from one statement is re-used on the next statement. If you store the directly constructed `test_class` in a differently named variable and check it at the end of the script, there's a good chance that the values will be wrong at that point. I.e., for your fork, none of the above work. The more common case is actually assigning `str` to `const char*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7501
https://github.com/root-project/root/pull/7502:2053,availability,servic,service,2053,">. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1166,deployability,fail,fails,1166,"5c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) found:. - :warning: **2** warnings :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2053,deployability,servic,service,2053,">. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2065,deployability,API,API,2065,">. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1175,energy efficiency,alloc,allocate,1175,"563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) found:. - :warning: **2** warnings :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the informati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2053,integrability,servic,service,2053,">. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2065,integrability,API,API,2065,">. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2065,interoperability,API,API,2065,">. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2255,interoperability,plug,plugins,2255,">. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2327,interoperability,plug,plugin,2327,">. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2378,interoperability,plug,plugin,2378,">. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2053,modifiability,servic,service,2053,">. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how to migrate. Thank you for using DeepCode 🙏 ❤️ ! If you are using our plugins, you might be interested in their successors: [Snyk's JetBrains plugin](https://snyk.co/udpkq) and [Snyk's VS Code plugin](https://snyk.co/udpkr).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1120,performance,Memor,Memory,1120,"d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) found:. - :warning: **2** warnings :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1133,performance,Memor,Memory,1133,"ct/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) found:. - :warning: **2** warnings :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1184,performance,memor,memory,1184,"/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) found:. - :warning: **2** warnings :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1166,reliability,fail,fails,1166,"5c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) found:. - :warning: **2** warnings :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:557,usability,behavi,behavior,557,"## DeepCode's analysis on [#77efbb](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) found:. - :warning: **2** warnings :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/ap",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1120,usability,Memor,Memory,1120,"d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) found:. - :warning: **2** warnings :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1133,usability,Memor,Memory,1133,"ct/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) found:. - :warning: **2** warnings :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1184,usability,memor,memory,1184,"/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) found:. - :warning: **2** warnings :point_down:. ## Top issues. <table>. <thead>. <tr>. <th align=""left"">Description</th>. <th align=""left"">Example fixes</th>. </tr>. </thead>. <tbody>. <tr>. <td width=""77%"">The result of malloc, which may return null flows to the first argument of memcpy. This could result in undefined behavior. Consider adding a check for nullness. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L65"">RVec.cxx:65</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FNullPtrPassFromMaybeNull/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. <tr>. <td width=""77%"">Memory leak. Memory is never freed if realloc fails to allocate memory. Occurrences: <ul><li><a href=""https://github.com/root-project/root/blob/77efbbd096f10c94b2482ae445c68ed06c8563a3/math/vecops/src/RVec.cxx#L68"">RVec.cxx:68</a></li></ul></td>. <td width=""23%""><a href=""https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2Fmath%2Fvecops%2Fsrc%2FRVec.cxx/cpp%2Fdc%2FMemoryLeakOnRealloc/code/?utm_source=gh_review&"">:wrench: Example fixes</a></td>. </tr>. </tbody>. </table>. #### 👉 View analysis in [**DeepCode’s Dashboard**](https://www.deepcode.ai/app/gh/root-project/root/9b5892decf3ae940ef4b5ef2bba7aca585b7a8d9/root-project/root/77efbbd096f10c94b2482ae445c68ed06c8563a3/pr/_/%2F/code/?utm_source=gh_review&c=0&w=2&i=0&) | [_Configure the bot_](https://www.deepcode.ai/app/gh/?ownerconfig=root-project). #### 👉 The DeepCode service and API will be deprecated in August, 2021. [Here](https://www.deepcode.ai/blog/migrate-to-snyk-code) is the information how t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:36,availability,failur,failures,36,"This is a reproducer for the Python failures:. ```python. import ROOT. rvec = ROOT.VecOps.RVec(""float"")(). ```. Stacktrace at the point of crash is:. ```. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. 150		{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }. >>> bt. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:36,deployability,fail,failures,36,"This is a reproducer for the Python failures:. ```python. import ROOT. rvec = ROOT.VecOps.RVec(""float"")(). ```. Stacktrace at the point of crash is:. ```. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. 150		{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }. >>> bt. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:112,deployability,Stack,Stacktrace,112,"This is a reproducer for the Python failures:. ```python. import ROOT. rvec = ROOT.VecOps.RVec(""float"")(). ```. Stacktrace at the point of crash is:. ```. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. 150		{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }. >>> bt. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1587,deployability,Build,BuildScopeProxyDict,1587,"t&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #11 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #12 0x00007ffff7d21b0e in _PyFunction_Vectorcall () from /usr/lib/libpython3.9.so.1.0. #13 0x00007ffff7d19735 in _PyObject_FastCallDictTstate () from /usr/lib/libpython3.9.so.1.0. #14 0x00007ffff7d2eaa9 in _P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:5008,deployability,Build,BuildScopeProxyDict,5008,"ethodInfo`:. ```. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. 945	 fMethodInfo->fMethods.push_back(pc);. >>> p *fMethodInfo. ```. and `valgrind` agrees:. ```. ==216976== Invalid write of size 8. ==216976== at 0x5DC0389: void __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (new_allocator.h:150). ==216976== by 0x5DBFF05: void std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(std::allocator<CPyCppyy::PyCallable*>&, CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (alloc_traits.h:512). ==216976== by 0x5DBFC79: std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back(CPyCppyy::PyCallable* const&) (stl_vector.h:1192). ==216976== by 0x5DCA0A8: CPyCppyy::CPPOverload::AdoptMethod(CPyCppyy::PyCallable*) (CPPOverload.cxx:945). ==216976== by 0x5E07BA5: CPyCppyy::TemplateProxy::AdoptMethod(CPyCppyy::PyCallable*) (TemplateProxy.cxx:111). ==216976== by 0x5DF8232: CPyCppyy::BuildScopeProxyDict(unsigned long, _object*) (ProxyWrappers.cxx:254). ==216976== by 0x5DFA272: CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, _object*) (ProxyWrappers.cxx:676). ==216976== by 0x5DD70EA: (anonymous namespace)::MakeCppTemplateClass(_object*, _object*) (CPyCppyyModule.cxx:368). ==216976== by 0x49B1A91: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49B098E: PyObject_Call (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49943D9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x498D9AC: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== Address 0x5f3a3a726f746365 is not stack'd, malloc'd or (recently) free'd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:5700,deployability,stack,stack,5700,"ethodInfo`:. ```. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. 945	 fMethodInfo->fMethods.push_back(pc);. >>> p *fMethodInfo. ```. and `valgrind` agrees:. ```. ==216976== Invalid write of size 8. ==216976== at 0x5DC0389: void __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (new_allocator.h:150). ==216976== by 0x5DBFF05: void std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(std::allocator<CPyCppyy::PyCallable*>&, CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (alloc_traits.h:512). ==216976== by 0x5DBFC79: std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back(CPyCppyy::PyCallable* const&) (stl_vector.h:1192). ==216976== by 0x5DCA0A8: CPyCppyy::CPPOverload::AdoptMethod(CPyCppyy::PyCallable*) (CPPOverload.cxx:945). ==216976== by 0x5E07BA5: CPyCppyy::TemplateProxy::AdoptMethod(CPyCppyy::PyCallable*) (TemplateProxy.cxx:111). ==216976== by 0x5DF8232: CPyCppyy::BuildScopeProxyDict(unsigned long, _object*) (ProxyWrappers.cxx:254). ==216976== by 0x5DFA272: CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, _object*) (ProxyWrappers.cxx:676). ==216976== by 0x5DD70EA: (anonymous namespace)::MakeCppTemplateClass(_object*, _object*) (CPyCppyyModule.cxx:368). ==216976== by 0x49B1A91: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49B098E: PyObject_Call (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49943D9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x498D9AC: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== Address 0x5f3a3a726f746365 is not stack'd, malloc'd or (recently) free'd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:751,energy efficiency,alloc,allocator,751,"This is a reproducer for the Python failures:. ```python. import ROOT. rvec = ROOT.VecOps.RVec(""float"")(). ```. Stacktrace at the point of crash is:. ```. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. 150		{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }. >>> bt. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1001,energy efficiency,alloc,allocator,1001,"s a reproducer for the Python failures:. ```python. import ROOT. rvec = ROOT.VecOps.RVec(""float"")(). ```. Stacktrace at the point of crash is:. ```. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. 150		{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }. >>> bt. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4380,energy efficiency,alloc,allocator,4380,") from /usr/lib/libpython3.9.so.1.0. #25 0x00007ffff7df3dba in Py_RunMain () from /usr/lib/libpython3.9.so.1.0. #26 0x00007ffff7dc4fa9 in Py_BytesMain () from /usr/lib/libpython3.9.so.1.0. #27 0x00007ffff7a41b25 in __libc_start_main () from /usr/lib/libc.so.6. #28 0x000055555555504e in _start (). ```. `gdb` shows some problems in `CPyCppyy::CPPOverload::fMethodInfo`:. ```. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. 945	 fMethodInfo->fMethods.push_back(pc);. >>> p *fMethodInfo. ```. and `valgrind` agrees:. ```. ==216976== Invalid write of size 8. ==216976== at 0x5DC0389: void __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (new_allocator.h:150). ==216976== by 0x5DBFF05: void std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(std::allocator<CPyCppyy::PyCallable*>&, CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (alloc_traits.h:512). ==216976== by 0x5DBFC79: std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back(CPyCppyy::PyCallable* const&) (stl_vector.h:1192). ==216976== by 0x5DCA0A8: CPyCppyy::CPPOverload::AdoptMethod(CPyCppyy::PyCallable*) (CPPOverload.cxx:945). ==216976== by 0x5E07BA5: CPyCppyy::TemplateProxy::AdoptMethod(CPyCppyy::PyCallable*) (TemplateProxy.cxx:111). ==216976== by 0x5DF8232: CPyCppyy::BuildScopeProxyDict(unsigned long, _object*) (ProxyWrappers.cxx:254). ==216976== by 0x5DFA272: CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, _object*) (ProxyWrappers.cxx:676). ==216976== by 0x5DD70EA: (anonymous namespace)::MakeCppTemplateClass(_object*, _object*) (CPyCppyyModule.cxx:368). ==216976== by 0x4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4484,energy efficiency,alloc,allocator,4484,"so.1.0. #26 0x00007ffff7dc4fa9 in Py_BytesMain () from /usr/lib/libpython3.9.so.1.0. #27 0x00007ffff7a41b25 in __libc_start_main () from /usr/lib/libc.so.6. #28 0x000055555555504e in _start (). ```. `gdb` shows some problems in `CPyCppyy::CPPOverload::fMethodInfo`:. ```. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. 945	 fMethodInfo->fMethods.push_back(pc);. >>> p *fMethodInfo. ```. and `valgrind` agrees:. ```. ==216976== Invalid write of size 8. ==216976== at 0x5DC0389: void __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (new_allocator.h:150). ==216976== by 0x5DBFF05: void std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(std::allocator<CPyCppyy::PyCallable*>&, CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (alloc_traits.h:512). ==216976== by 0x5DBFC79: std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back(CPyCppyy::PyCallable* const&) (stl_vector.h:1192). ==216976== by 0x5DCA0A8: CPyCppyy::CPPOverload::AdoptMethod(CPyCppyy::PyCallable*) (CPPOverload.cxx:945). ==216976== by 0x5E07BA5: CPyCppyy::TemplateProxy::AdoptMethod(CPyCppyy::PyCallable*) (TemplateProxy.cxx:111). ==216976== by 0x5DF8232: CPyCppyy::BuildScopeProxyDict(unsigned long, _object*) (ProxyWrappers.cxx:254). ==216976== by 0x5DFA272: CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, _object*) (ProxyWrappers.cxx:676). ==216976== by 0x5DD70EA: (anonymous namespace)::MakeCppTemplateClass(_object*, _object*) (CPyCppyyModule.cxx:368). ==216976== by 0x49B1A91: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49B098E: PyObject_Call (in /usr/lib/libpy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4660,energy efficiency,alloc,allocator,4660,"04e in _start (). ```. `gdb` shows some problems in `CPyCppyy::CPPOverload::fMethodInfo`:. ```. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. 945	 fMethodInfo->fMethods.push_back(pc);. >>> p *fMethodInfo. ```. and `valgrind` agrees:. ```. ==216976== Invalid write of size 8. ==216976== at 0x5DC0389: void __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (new_allocator.h:150). ==216976== by 0x5DBFF05: void std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(std::allocator<CPyCppyy::PyCallable*>&, CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (alloc_traits.h:512). ==216976== by 0x5DBFC79: std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back(CPyCppyy::PyCallable* const&) (stl_vector.h:1192). ==216976== by 0x5DCA0A8: CPyCppyy::CPPOverload::AdoptMethod(CPyCppyy::PyCallable*) (CPPOverload.cxx:945). ==216976== by 0x5E07BA5: CPyCppyy::TemplateProxy::AdoptMethod(CPyCppyy::PyCallable*) (TemplateProxy.cxx:111). ==216976== by 0x5DF8232: CPyCppyy::BuildScopeProxyDict(unsigned long, _object*) (ProxyWrappers.cxx:254). ==216976== by 0x5DFA272: CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, _object*) (ProxyWrappers.cxx:676). ==216976== by 0x5DD70EA: (anonymous namespace)::MakeCppTemplateClass(_object*, _object*) (CPyCppyyModule.cxx:368). ==216976== by 0x49B1A91: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49B098E: PyObject_Call (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49943D9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x498D9AC: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976==",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:5192,energy efficiency,alloc,allocator,5192,"ethodInfo`:. ```. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. 945	 fMethodInfo->fMethods.push_back(pc);. >>> p *fMethodInfo. ```. and `valgrind` agrees:. ```. ==216976== Invalid write of size 8. ==216976== at 0x5DC0389: void __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (new_allocator.h:150). ==216976== by 0x5DBFF05: void std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(std::allocator<CPyCppyy::PyCallable*>&, CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (alloc_traits.h:512). ==216976== by 0x5DBFC79: std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back(CPyCppyy::PyCallable* const&) (stl_vector.h:1192). ==216976== by 0x5DCA0A8: CPyCppyy::CPPOverload::AdoptMethod(CPyCppyy::PyCallable*) (CPPOverload.cxx:945). ==216976== by 0x5E07BA5: CPyCppyy::TemplateProxy::AdoptMethod(CPyCppyy::PyCallable*) (TemplateProxy.cxx:111). ==216976== by 0x5DF8232: CPyCppyy::BuildScopeProxyDict(unsigned long, _object*) (ProxyWrappers.cxx:254). ==216976== by 0x5DFA272: CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, _object*) (ProxyWrappers.cxx:676). ==216976== by 0x5DD70EA: (anonymous namespace)::MakeCppTemplateClass(_object*, _object*) (CPyCppyyModule.cxx:368). ==216976== by 0x49B1A91: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49B098E: PyObject_Call (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49943D9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x498D9AC: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== Address 0x5f3a3a726f746365 is not stack'd, malloc'd or (recently) free'd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1311,interoperability,bind,bindings,1311,"_p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. 150		{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }. >>> bt. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1494,interoperability,bind,bindings,1494,"::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #11 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #12 0x00007ffff7d21b0e in _PyFunction_Vectorcall () from /usr/lib/libpython3.9.so.1.0. #13 0x00007ffff7d19735",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1666,interoperability,bind,bindings,1666,"2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #11 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #12 0x00007ffff7d21b0e in _PyFunction_Vectorcall () from /usr/lib/libpython3.9.so.1.0. #13 0x00007ffff7d19735 in _PyObject_FastCallDictTstate () from /usr/lib/libpython3.9.so.1.0. #14 0x00007ffff7d2eaa9 in _PyObject_Call_Prepend () from /usr/lib/libpython3.9.so.1.0. #15 0x00007fff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1701,interoperability,Prox,ProxyWrappers,1701,"7ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #11 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #12 0x00007ffff7d21b0e in _PyFunction_Vectorcall () from /usr/lib/libpython3.9.so.1.0. #13 0x00007ffff7d19735 in _PyObject_FastCallDictTstate () from /usr/lib/libpython3.9.so.1.0. #14 0x00007ffff7d2eaa9 in _PyObject_Call_Prepend () from /usr/lib/libpython3.9.so.1.0. #15 0x00007ffff7e0de7a in ?? () from /usr/lib/libpyt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1858,interoperability,bind,bindings,1858,"p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #11 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #12 0x00007ffff7d21b0e in _PyFunction_Vectorcall () from /usr/lib/libpython3.9.so.1.0. #13 0x00007ffff7d19735 in _PyObject_FastCallDictTstate () from /usr/lib/libpython3.9.so.1.0. #14 0x00007ffff7d2eaa9 in _PyObject_Call_Prepend () from /usr/lib/libpython3.9.so.1.0. #15 0x00007ffff7e0de7a in ?? () from /usr/lib/libpython3.9.so.1.0. #16 0x00007ffff7d19e6d in _PyObject_MakeTpCall () from /usr/lib/libpython3.9.so.1.0. #17 0x00007ffff7d15b3a in _PyEval_EvalFrameDefault () ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1893,interoperability,Prox,ProxyWrappers,1893,"c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #11 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #12 0x00007ffff7d21b0e in _PyFunction_Vectorcall () from /usr/lib/libpython3.9.so.1.0. #13 0x00007ffff7d19735 in _PyObject_FastCallDictTstate () from /usr/lib/libpython3.9.so.1.0. #14 0x00007ffff7d2eaa9 in _PyObject_Call_Prepend () from /usr/lib/libpython3.9.so.1.0. #15 0x00007ffff7e0de7a in ?? () from /usr/lib/libpython3.9.so.1.0. #16 0x00007ffff7d19e6d in _PyObject_MakeTpCall () from /usr/lib/libpython3.9.so.1.0. #17 0x00007ffff7d15b3a in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #18",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2031,interoperability,bind,bindings,2031,"::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #11 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #12 0x00007ffff7d21b0e in _PyFunction_Vectorcall () from /usr/lib/libpython3.9.so.1.0. #13 0x00007ffff7d19735 in _PyObject_FastCallDictTstate () from /usr/lib/libpython3.9.so.1.0. #14 0x00007ffff7d2eaa9 in _PyObject_Call_Prepend () from /usr/lib/libpython3.9.so.1.0. #15 0x00007ffff7e0de7a in ?? () from /usr/lib/libpython3.9.so.1.0. #16 0x00007ffff7d19e6d in _PyObject_MakeTpCall () from /usr/lib/libpython3.9.so.1.0. #17 0x00007ffff7d15b3a in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #18 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #19 0x00007ffff7d0f371 in _PyEval_EvalCodeWithName () from /usr/lib/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3915,interoperability,bind,bindings,3915," in ?? () from /usr/lib/libpython3.9.so.1.0. #19 0x00007ffff7d0f371 in _PyEval_EvalCodeWithName () from /usr/lib/libpython3.9.so.1.0. #20 0x00007ffff7dd1f83 in PyEval_EvalCode () from /usr/lib/libpython3.9.so.1.0. #21 0x00007ffff7de23dd in ?? () from /usr/lib/libpython3.9.so.1.0. #22 0x00007ffff7dddc7b in ?? () from /usr/lib/libpython3.9.so.1.0. #23 0x00007ffff7c7f20b in ?? () from /usr/lib/libpython3.9.so.1.0. #24 0x00007ffff7c7e5e3 in PyRun_SimpleFileExFlags () from /usr/lib/libpython3.9.so.1.0. #25 0x00007ffff7df3dba in Py_RunMain () from /usr/lib/libpython3.9.so.1.0. #26 0x00007ffff7dc4fa9 in Py_BytesMain () from /usr/lib/libpython3.9.so.1.0. #27 0x00007ffff7a41b25 in __libc_start_main () from /usr/lib/libc.so.6. #28 0x000055555555504e in _start (). ```. `gdb` shows some problems in `CPyCppyy::CPPOverload::fMethodInfo`:. ```. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. 945	 fMethodInfo->fMethods.push_back(pc);. >>> p *fMethodInfo. ```. and `valgrind` agrees:. ```. ==216976== Invalid write of size 8. ==216976== at 0x5DC0389: void __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (new_allocator.h:150). ==216976== by 0x5DBFF05: void std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(std::allocator<CPyCppyy::PyCallable*>&, CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (alloc_traits.h:512). ==216976== by 0x5DBFC79: std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back(CPyCppyy::PyCallable* const&) (stl_vector.h:1192). ==216976== by 0x5DCA0A8: CPyCppyy::CPPOverload::AdoptMethod(CPyCppyy::PyCallable*) (CPPOverload.cxx:945). ==216976== by 0x5E07BA5: CPyCppyy::TemplateProxy::AdoptM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:5054,interoperability,Prox,ProxyWrappers,5054,"ethodInfo`:. ```. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. 945	 fMethodInfo->fMethods.push_back(pc);. >>> p *fMethodInfo. ```. and `valgrind` agrees:. ```. ==216976== Invalid write of size 8. ==216976== at 0x5DC0389: void __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (new_allocator.h:150). ==216976== by 0x5DBFF05: void std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(std::allocator<CPyCppyy::PyCallable*>&, CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (alloc_traits.h:512). ==216976== by 0x5DBFC79: std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back(CPyCppyy::PyCallable* const&) (stl_vector.h:1192). ==216976== by 0x5DCA0A8: CPyCppyy::CPPOverload::AdoptMethod(CPyCppyy::PyCallable*) (CPPOverload.cxx:945). ==216976== by 0x5E07BA5: CPyCppyy::TemplateProxy::AdoptMethod(CPyCppyy::PyCallable*) (TemplateProxy.cxx:111). ==216976== by 0x5DF8232: CPyCppyy::BuildScopeProxyDict(unsigned long, _object*) (ProxyWrappers.cxx:254). ==216976== by 0x5DFA272: CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, _object*) (ProxyWrappers.cxx:676). ==216976== by 0x5DD70EA: (anonymous namespace)::MakeCppTemplateClass(_object*, _object*) (CPyCppyyModule.cxx:368). ==216976== by 0x49B1A91: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49B098E: PyObject_Call (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49943D9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x498D9AC: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== Address 0x5f3a3a726f746365 is not stack'd, malloc'd or (recently) free'd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:5229,interoperability,Prox,ProxyWrappers,5229,"ethodInfo`:. ```. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. 945	 fMethodInfo->fMethods.push_back(pc);. >>> p *fMethodInfo. ```. and `valgrind` agrees:. ```. ==216976== Invalid write of size 8. ==216976== at 0x5DC0389: void __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (new_allocator.h:150). ==216976== by 0x5DBFF05: void std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(std::allocator<CPyCppyy::PyCallable*>&, CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (alloc_traits.h:512). ==216976== by 0x5DBFC79: std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back(CPyCppyy::PyCallable* const&) (stl_vector.h:1192). ==216976== by 0x5DCA0A8: CPyCppyy::CPPOverload::AdoptMethod(CPyCppyy::PyCallable*) (CPPOverload.cxx:945). ==216976== by 0x5E07BA5: CPyCppyy::TemplateProxy::AdoptMethod(CPyCppyy::PyCallable*) (TemplateProxy.cxx:111). ==216976== by 0x5DF8232: CPyCppyy::BuildScopeProxyDict(unsigned long, _object*) (ProxyWrappers.cxx:254). ==216976== by 0x5DFA272: CPyCppyy::CreateScopeProxy(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, _object*) (ProxyWrappers.cxx:676). ==216976== by 0x5DD70EA: (anonymous namespace)::MakeCppTemplateClass(_object*, _object*) (CPyCppyyModule.cxx:368). ==216976== by 0x49B1A91: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49B098E: PyObject_Call (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x49943D9: _PyEval_EvalFrameDefault (in /usr/lib/libpython3.9.so.1.0). ==216976== by 0x498D9AC: ??? (in /usr/lib/libpython3.9.so.1.0). ==216976== Address 0x5f3a3a726f746365 is not stack'd, malloc'd or (recently) free'd. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1311,modifiability,bind,bindings,1311,"_p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. 150		{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }. >>> bt. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1494,modifiability,bind,bindings,1494,"::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #11 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #12 0x00007ffff7d21b0e in _PyFunction_Vectorcall () from /usr/lib/libpython3.9.so.1.0. #13 0x00007ffff7d19735",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1666,modifiability,bind,bindings,1666,"2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #11 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #12 0x00007ffff7d21b0e in _PyFunction_Vectorcall () from /usr/lib/libpython3.9.so.1.0. #13 0x00007ffff7d19735 in _PyObject_FastCallDictTstate () from /usr/lib/libpython3.9.so.1.0. #14 0x00007ffff7d2eaa9 in _PyObject_Call_Prepend () from /usr/lib/libpython3.9.so.1.0. #15 0x00007fff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1858,modifiability,bind,bindings,1858,"p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #11 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #12 0x00007ffff7d21b0e in _PyFunction_Vectorcall () from /usr/lib/libpython3.9.so.1.0. #13 0x00007ffff7d19735 in _PyObject_FastCallDictTstate () from /usr/lib/libpython3.9.so.1.0. #14 0x00007ffff7d2eaa9 in _PyObject_Call_Prepend () from /usr/lib/libpython3.9.so.1.0. #15 0x00007ffff7e0de7a in ?? () from /usr/lib/libpython3.9.so.1.0. #16 0x00007ffff7d19e6d in _PyObject_MakeTpCall () from /usr/lib/libpython3.9.so.1.0. #17 0x00007ffff7d15b3a in _PyEval_EvalFrameDefault () ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2031,modifiability,bind,bindings,2031,"::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73ef040) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #8 0x00007ffff7d33a92 in ?? () from /usr/lib/libpython3.9.so.1.0. #9 0x00007ffff7d3298f in PyObject_Call () from /usr/lib/libpython3.9.so.1.0. #10 0x00007ffff7d163da in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #11 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #12 0x00007ffff7d21b0e in _PyFunction_Vectorcall () from /usr/lib/libpython3.9.so.1.0. #13 0x00007ffff7d19735 in _PyObject_FastCallDictTstate () from /usr/lib/libpython3.9.so.1.0. #14 0x00007ffff7d2eaa9 in _PyObject_Call_Prepend () from /usr/lib/libpython3.9.so.1.0. #15 0x00007ffff7e0de7a in ?? () from /usr/lib/libpython3.9.so.1.0. #16 0x00007ffff7d19e6d in _PyObject_MakeTpCall () from /usr/lib/libpython3.9.so.1.0. #17 0x00007ffff7d15b3a in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.9.so.1.0. #18 0x00007ffff7d0f9ad in ?? () from /usr/lib/libpython3.9.so.1.0. #19 0x00007ffff7d0f371 in _PyEval_EvalCodeWithName () from /usr/lib/lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3915,modifiability,bind,bindings,3915," in ?? () from /usr/lib/libpython3.9.so.1.0. #19 0x00007ffff7d0f371 in _PyEval_EvalCodeWithName () from /usr/lib/libpython3.9.so.1.0. #20 0x00007ffff7dd1f83 in PyEval_EvalCode () from /usr/lib/libpython3.9.so.1.0. #21 0x00007ffff7de23dd in ?? () from /usr/lib/libpython3.9.so.1.0. #22 0x00007ffff7dddc7b in ?? () from /usr/lib/libpython3.9.so.1.0. #23 0x00007ffff7c7f20b in ?? () from /usr/lib/libpython3.9.so.1.0. #24 0x00007ffff7c7e5e3 in PyRun_SimpleFileExFlags () from /usr/lib/libpython3.9.so.1.0. #25 0x00007ffff7df3dba in Py_RunMain () from /usr/lib/libpython3.9.so.1.0. #26 0x00007ffff7dc4fa9 in Py_BytesMain () from /usr/lib/libpython3.9.so.1.0. #27 0x00007ffff7a41b25 in __libc_start_main () from /usr/lib/libc.so.6. #28 0x000055555555504e in _start (). ```. `gdb` shows some problems in `CPyCppyy::CPPOverload::fMethodInfo`:. ```. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. 945	 fMethodInfo->fMethods.push_back(pc);. >>> p *fMethodInfo. ```. and `valgrind` agrees:. ```. ==216976== Invalid write of size 8. ==216976== at 0x5DC0389: void __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (new_allocator.h:150). ==216976== by 0x5DBFF05: void std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&>(std::allocator<CPyCppyy::PyCallable*>&, CPyCppyy::PyCallable**, CPyCppyy::PyCallable* const&) (alloc_traits.h:512). ==216976== by 0x5DBFC79: std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back(CPyCppyy::PyCallable* const&) (stl_vector.h:1192). ==216976== by 0x5DCA0A8: CPyCppyy::CPPOverload::AdoptMethod(CPyCppyy::PyCallable*) (CPPOverload.cxx:945). ==216976== by 0x5E07BA5: CPyCppyy::TemplateProxy::AdoptM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:36,performance,failur,failures,36,"This is a reproducer for the Python failures:. ```python. import ROOT. rvec = ROOT.VecOps.RVec(""float"")(). ```. Stacktrace at the point of crash is:. ```. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. 150		{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }. >>> bt. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:36,reliability,fail,failures,36,"This is a reproducer for the Python failures:. ```python. import ROOT. rvec = ROOT.VecOps.RVec(""float"")(). ```. Stacktrace at the point of crash is:. ```. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. 150		{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }. >>> bt. #0 0x00007ffff726c389 in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7ffff72c93df, __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/ext/new_allocator.h:150. #1 0x00007ffff726bf06 in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f3a3a726f746365) at /usr/include/c++/10.2.0/bits/alloc_traits.h:512. #2 0x00007ffff726bc7a in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7ffff72c93df, __x=@0x7fffffffd630: 0x555559389d80) at /usr/include/c++/10.2.0/bits/stl_vector.h:1192. #3 0x00007ffff72760a9 in CPyCppyy::CPPOverload::AdoptMethod (this=0x7ffff73136e0 <CPyCppyy::CPPOverload_Type>, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #4 0x00007ffff72b3ba6 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7fffe9222280, pc=0x555559389d80) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #5 0x00007ffff72a4233 in CPyCppyy::BuildScopeProxyDict (scope=16, pyclass=0x555559379ca0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #6 0x00007ffff72a6273 in CPyCppyy::CreateScopeProxy (name=""ROOT::VecOps::RVec<float>"", parent=0x555558e398c0) at ../../../../../rvec2/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #7 0x00007ffff72830eb in (anonymous namespace)::MakeCppTemplateClass (args=0x7ffff73",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:229,availability,error,error,229,"I've built with clang10 and debug info and rebased on top of master. Then I get following additional info:. ```bash. [wunsch@portal1 build_native]$ python -c 'import ROOT; rvec = ROOT.VecOps.RVec(""float"")()'. input_line_14:1:64: error: redefinition of 'is_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_10:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_15:1:64: error: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:609,availability,error,error,609,"I've built with clang10 and debug info and rebased on top of master. Then I get following additional info:. ```bash. [wunsch@portal1 build_native]$ python -c 'import ROOT; rvec = ROOT.VecOps.RVec(""float"")()'. input_line_14:1:64: error: redefinition of 'is_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_10:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_15:1:64: error: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1146,deployability,stack,stack,1146,"ython -c 'import ROOT; rvec = ROOT.VecOps.RVec(""float"")()'. input_line_14:1:64: error: redefinition of 'is_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_10:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_15:1:64: error: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1608,deployability,Stack,StackTrace,1608,"r: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:407. #7 0x00007f0abbf01364 in sighandler (sig=11) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2587,deployability,releas,releases,2587," in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:407. #7 0x00007f0abbf01364 in sighandler (sig=11) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f0abc71ea1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2964,deployability,releas,releases,2964,"(this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:407. #7 0x00007f0abbf01364 in sighandler (sig=11) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f0abc71ea1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3286,deployability,releas,releases,3286,"c/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f0abc71ea1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3841,deployability,Build,BuildScopeProxyDict,3841,"allable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/external",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4448,deployability,build,build,4448,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4641,deployability,build,build,4641,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4837,deployability,build,build,4837,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1534,energy efficiency,core,core,1534,"c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_15:1:64: error: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:407. #7 0x00007f0abbf01364 in sighandler (sig=11) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1662,energy efficiency,core,core,1662,"y_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:407. #7 0x00007f0abbf01364 in sighandler (sig=11) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2042,energy efficiency,core,core,2042,"==================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:407. #7 0x00007f0abbf01364 in sighandler (sig=11) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f0abc71ea1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2172,energy efficiency,core,core,2172," ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:407. #7 0x00007f0abbf01364 in sighandler (sig=11) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f0abc71ea1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2278,energy efficiency,core,core,2278,"b64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:407. #7 0x00007f0abbf01364 in sighandler (sig=11) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f0abc71ea1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2769,energy efficiency,alloc,allocator,2769,"Exception(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:407. #7 0x00007f0abbf01364 in sighandler (sig=11) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f0abc71ea1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3159,energy efficiency,alloc,allocator,3159,"ot_rvec/core/unix/src/TUnixSystem.cxx:407. #7 0x00007f0abbf01364 in sighandler (sig=11) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f0abc71ea1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4418,energy efficiency,optim,optimized,4418,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3566,interoperability,bind,bindings,3566,"/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f0abc71ea1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3747,interoperability,bind,bindings,3747,"cator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tsta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3917,interoperability,bind,bindings,3917,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3952,interoperability,Prox,ProxyWrappers,3952,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4083,interoperability,bind,bindings,4083,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4118,interoperability,Prox,ProxyWrappers,4118,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4259,interoperability,bind,bindings,4259,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3566,modifiability,bind,bindings,3566,"/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f0abc71ea1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3747,modifiability,bind,bindings,3747,"cator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tsta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3917,modifiability,bind,bindings,3917,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4083,modifiability,bind,bindings,4083,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4259,modifiability,bind,bindings,4259,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:229,performance,error,error,229,"I've built with clang10 and debug info and rebased on top of master. Then I get following additional info:. ```bash. [wunsch@portal1 build_native]$ python -c 'import ROOT; rvec = ROOT.VecOps.RVec(""float"")()'. input_line_14:1:64: error: redefinition of 'is_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_10:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_15:1:64: error: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:609,performance,error,error,609,"I've built with clang10 and debug info and rebased on top of master. Then I get following additional info:. ```bash. [wunsch@portal1 build_native]$ python -c 'import ROOT; rvec = ROOT.VecOps.RVec(""float"")()'. input_line_14:1:64: error: redefinition of 'is_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_10:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_15:1:64: error: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4418,performance,optimiz,optimized,4418,"s=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f0abc72709f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f0abc9caed8 <CPyCppyy::CPPOverload_Type>, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f0abc76e7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f0aaca317c0, pc=0x58665b0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f0abc75ed8c in CPyCppyy::BuildScopeProxyDict (scope=14, pyclass=0x5859310) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f0abc75d3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x57021d0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f0abc7378d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f0abca483c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f0ac440cd1a in cfunction_call_varargs (func=0x7f0abca8aef0, args=0x7f0abca483c0, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f0ac440d834 in PyCFunction_Call (func=0x7ffeaf819970, args=0x5f746f6f722f6863, kwargs=0x7ffeaf819970) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f0ac44d7b0c in do_call_core (tstate=0x1884330, func=0x7f0abca8aef0, callargs=0x7f0abca483c0, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:229,safety,error,error,229,"I've built with clang10 and debug info and rebased on top of master. Then I get following additional info:. ```bash. [wunsch@portal1 build_native]$ python -c 'import ROOT; rvec = ROOT.VecOps.RVec(""float"")()'. input_line_14:1:64: error: redefinition of 'is_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_10:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_15:1:64: error: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:609,safety,error,error,609,"I've built with clang10 and debug info and rebased on top of master. Then I get following additional info:. ```bash. [wunsch@portal1 build_native]$ python -c 'import ROOT; rvec = ROOT.VecOps.RVec(""float"")()'. input_line_14:1:64: error: redefinition of 'is_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_10:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_15:1:64: error: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2318,security,sign,signal,2318,"o_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:407. #7 0x00007f0abbf01364 in sighandler (sig=11) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3620. #8 <signal handler called>. #9 0x00007f0abc71ec1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f0abc784120, __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f0abc71ea1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f0abc71e81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f0abc784120, __x=. 0x7ffeaf819970: 0x58665b0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-cen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1152,testability,trace,trace,1152,"-c 'import ROOT; rvec = ROOT.VecOps.RVec(""float"")()'. input_line_14:1:64: error: redefinition of 'is_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_10:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_15:1:64: error: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegmentationViolation) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:3644. #6 0x00007f0abbef5f81 in SigHandler (sig=kSigSegmentationViolation) at /work/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:229,usability,error,error,229,"I've built with clang10 and debug info and rebased on top of master. Then I get following additional info:. ```bash. [wunsch@portal1 build_native]$ python -c 'import ROOT; rvec = ROOT.VecOps.RVec(""float"")()'. input_line_14:1:64: error: redefinition of 'is_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_10:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_15:1:64: error: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:609,usability,error,error,609,"I've built with clang10 and debug info and rebased on top of master. Then I get following additional info:. ```bash. [wunsch@portal1 build_native]$ python -c 'import ROOT; rvec = ROOT.VecOps.RVec(""float"")()'. input_line_14:1:64: error: redefinition of 'is_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_10:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_equal(const C1& c1, const C2& c2) { return (bool)(c1 == c2); } }. ^. input_line_15:1:64: error: redefinition of 'is_not_equal'. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. input_line_11:1:64: note: previous definition is here. namespace __cppyy_internal { template<class C1, class C2> bool is_not_equal(const C1& c1, const C2& c2) { return (bool)(c1 != c2); } }. ^. *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. #0 0x00007f0ac351e46c in waitpid () from /lib64/libc.so.6. #1 0x00007f0ac349bf62 in do_system () from /lib64/libc.so.6. #2 0x00007f0abbefaf19 in TUnixSystem::Exec (this=0x193ebd0, shellcmd=0x5886a50 ""/work/wunsch/root_rvec/build_native/etc/gdb-backtrace.sh 3925717 1>&2"") at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f0abbefba11 in TUnixSystem::StackTrace (this=0x193ebd0) at /work/wunsch/root_rvec/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f0aa6eb2e91 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-clang10-opt/lib/libcppyy_backend3_8.so. #5 0x00007f0abbf01176 in TUnixSystem::DispatchSignals (this=0x193ebd0, sig=kSigSegment",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:30,availability,error,error,30,"~~That looks like a different error rather than additional info~~ Ah no, the stacktrace is the same! nice!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:77,deployability,stack,stacktrace,77,"~~That looks like a different error rather than additional info~~ Ah no, the stacktrace is the same! nice!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:30,performance,error,error,30,"~~That looks like a different error rather than additional info~~ Ah no, the stacktrace is the same! nice!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:30,safety,error,error,30,"~~That looks like a different error rather than additional info~~ Ah no, the stacktrace is the same! nice!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:30,usability,error,error,30,"~~That looks like a different error rather than additional info~~ Ah no, the stacktrace is the same! nice!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1021,availability,operat,operator,1021,"With this patch, you can find out which method causes the issue:. ```diff. --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. @@ -20,6 +20,7 @@. #include <algorithm>. #include <sstream>. #include <vector>. +#include <iostream>. namespace CPyCppyy {. @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*. //----------------------------------------------------------------------------. void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc). {. + PyObject_Print(pc->GetPrototype(), stdout, 0);. + std::cout << std::endl;. +. + PyObject_Print(pc->GetSignature(), stdout, 0);. + std::cout << std::endl;. +. + std::cout << std::endl;. // Fill in the data of a freshly created method proxy. fMethodInfo->fMethods.push_back(pc);. fMethodInfo->fFlags &= ~CallContext::kIsSorted;. ```. It gets you to the point that you have multiple method with the same signature:. ```bash. ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1111,availability,operat,operator,1111,"With this patch, you can find out which method causes the issue:. ```diff. --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. @@ -20,6 +20,7 @@. #include <algorithm>. #include <sstream>. #include <vector>. +#include <iostream>. namespace CPyCppyy {. @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*. //----------------------------------------------------------------------------. void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc). {. + PyObject_Print(pc->GetPrototype(), stdout, 0);. + std::cout << std::endl;. +. + PyObject_Print(pc->GetSignature(), stdout, 0);. + std::cout << std::endl;. +. + std::cout << std::endl;. // Fill in the data of a freshly created method proxy. fMethodInfo->fMethods.push_back(pc);. fMethodInfo->fFlags &= ~CallContext::kIsSorted;. ```. It gets you to the point that you have multiple method with the same signature:. ```bash. ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:10,deployability,patch,patch,10,"With this patch, you can find out which method causes the issue:. ```diff. --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. @@ -20,6 +20,7 @@. #include <algorithm>. #include <sstream>. #include <vector>. +#include <iostream>. namespace CPyCppyy {. @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*. //----------------------------------------------------------------------------. void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc). {. + PyObject_Print(pc->GetPrototype(), stdout, 0);. + std::cout << std::endl;. +. + PyObject_Print(pc->GetSignature(), stdout, 0);. + std::cout << std::endl;. +. + std::cout << std::endl;. // Fill in the data of a freshly created method proxy. fMethodInfo->fMethods.push_back(pc);. fMethodInfo->fFlags &= ~CallContext::kIsSorted;. ```. It gets you to the point that you have multiple method with the same signature:. ```bash. ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:81,interoperability,bind,bindings,81,"With this patch, you can find out which method causes the issue:. ```diff. --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. @@ -20,6 +20,7 @@. #include <algorithm>. #include <sstream>. #include <vector>. +#include <iostream>. namespace CPyCppyy {. @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*. //----------------------------------------------------------------------------. void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc). {. + PyObject_Print(pc->GetPrototype(), stdout, 0);. + std::cout << std::endl;. +. + PyObject_Print(pc->GetSignature(), stdout, 0);. + std::cout << std::endl;. +. + std::cout << std::endl;. // Fill in the data of a freshly created method proxy. fMethodInfo->fMethods.push_back(pc);. fMethodInfo->fFlags &= ~CallContext::kIsSorted;. ```. It gets you to the point that you have multiple method with the same signature:. ```bash. ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:139,interoperability,bind,bindings,139,"With this patch, you can find out which method causes the issue:. ```diff. --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. @@ -20,6 +20,7 @@. #include <algorithm>. #include <sstream>. #include <vector>. +#include <iostream>. namespace CPyCppyy {. @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*. //----------------------------------------------------------------------------. void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc). {. + PyObject_Print(pc->GetPrototype(), stdout, 0);. + std::cout << std::endl;. +. + PyObject_Print(pc->GetSignature(), stdout, 0);. + std::cout << std::endl;. +. + std::cout << std::endl;. // Fill in the data of a freshly created method proxy. fMethodInfo->fMethods.push_back(pc);. fMethodInfo->fFlags &= ~CallContext::kIsSorted;. ```. It gets you to the point that you have multiple method with the same signature:. ```bash. ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:793,interoperability,prox,proxy,793,"With this patch, you can find out which method causes the issue:. ```diff. --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. @@ -20,6 +20,7 @@. #include <algorithm>. #include <sstream>. #include <vector>. +#include <iostream>. namespace CPyCppyy {. @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*. //----------------------------------------------------------------------------. void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc). {. + PyObject_Print(pc->GetPrototype(), stdout, 0);. + std::cout << std::endl;. +. + PyObject_Print(pc->GetSignature(), stdout, 0);. + std::cout << std::endl;. +. + std::cout << std::endl;. // Fill in the data of a freshly created method proxy. fMethodInfo->fMethods.push_back(pc);. fMethodInfo->fFlags &= ~CallContext::kIsSorted;. ```. It gets you to the point that you have multiple method with the same signature:. ```bash. ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:81,modifiability,bind,bindings,81,"With this patch, you can find out which method causes the issue:. ```diff. --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. @@ -20,6 +20,7 @@. #include <algorithm>. #include <sstream>. #include <vector>. +#include <iostream>. namespace CPyCppyy {. @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*. //----------------------------------------------------------------------------. void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc). {. + PyObject_Print(pc->GetPrototype(), stdout, 0);. + std::cout << std::endl;. +. + PyObject_Print(pc->GetSignature(), stdout, 0);. + std::cout << std::endl;. +. + std::cout << std::endl;. // Fill in the data of a freshly created method proxy. fMethodInfo->fMethods.push_back(pc);. fMethodInfo->fFlags &= ~CallContext::kIsSorted;. ```. It gets you to the point that you have multiple method with the same signature:. ```bash. ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:139,modifiability,bind,bindings,139,"With this patch, you can find out which method causes the issue:. ```diff. --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. @@ -20,6 +20,7 @@. #include <algorithm>. #include <sstream>. #include <vector>. +#include <iostream>. namespace CPyCppyy {. @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*. //----------------------------------------------------------------------------. void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc). {. + PyObject_Print(pc->GetPrototype(), stdout, 0);. + std::cout << std::endl;. +. + PyObject_Print(pc->GetSignature(), stdout, 0);. + std::cout << std::endl;. +. + std::cout << std::endl;. // Fill in the data of a freshly created method proxy. fMethodInfo->fMethods.push_back(pc);. fMethodInfo->fFlags &= ~CallContext::kIsSorted;. ```. It gets you to the point that you have multiple method with the same signature:. ```bash. ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:10,safety,patch,patch,10,"With this patch, you can find out which method causes the issue:. ```diff. --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. @@ -20,6 +20,7 @@. #include <algorithm>. #include <sstream>. #include <vector>. +#include <iostream>. namespace CPyCppyy {. @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*. //----------------------------------------------------------------------------. void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc). {. + PyObject_Print(pc->GetPrototype(), stdout, 0);. + std::cout << std::endl;. +. + PyObject_Print(pc->GetSignature(), stdout, 0);. + std::cout << std::endl;. +. + std::cout << std::endl;. // Fill in the data of a freshly created method proxy. fMethodInfo->fMethods.push_back(pc);. fMethodInfo->fFlags &= ~CallContext::kIsSorted;. ```. It gets you to the point that you have multiple method with the same signature:. ```bash. ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:10,security,patch,patch,10,"With this patch, you can find out which method causes the issue:. ```diff. --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. @@ -20,6 +20,7 @@. #include <algorithm>. #include <sstream>. #include <vector>. +#include <iostream>. namespace CPyCppyy {. @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*. //----------------------------------------------------------------------------. void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc). {. + PyObject_Print(pc->GetPrototype(), stdout, 0);. + std::cout << std::endl;. +. + PyObject_Print(pc->GetSignature(), stdout, 0);. + std::cout << std::endl;. +. + std::cout << std::endl;. // Fill in the data of a freshly created method proxy. fMethodInfo->fMethods.push_back(pc);. fMethodInfo->fFlags &= ~CallContext::kIsSorted;. ```. It gets you to the point that you have multiple method with the same signature:. ```bash. ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:961,security,sign,signature,961,"With this patch, you can find out which method causes the issue:. ```diff. --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx. @@ -20,6 +20,7 @@. #include <algorithm>. #include <sstream>. #include <vector>. +#include <iostream>. namespace CPyCppyy {. @@ -941,6 +942,13 @@ void CPyCppyy::CPPOverload::Set(const std::string& name, std::vector<PyCallable*. //----------------------------------------------------------------------------. void CPyCppyy::CPPOverload::AdoptMethod(PyCallable* pc). {. + PyObject_Print(pc->GetPrototype(), stdout, 0);. + std::cout << std::endl;. +. + PyObject_Print(pc->GetSignature(), stdout, 0);. + std::cout << std::endl;. +. + std::cout << std::endl;. // Fill in the data of a freshly created method proxy. fMethodInfo->fMethods.push_back(pc);. fMethodInfo->fFlags &= ~CallContext::kIsSorted;. ```. It gets you to the point that you have multiple method with the same signature:. ```bash. ... 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. 'float& ROOT::VecOps::RVec<float>::operator[](unsigned long idx)'. '(unsigned long idx)'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:8,testability,understand,understand,8,"I don't understand, the problem is not the ""redefinition of `is_equal`"" ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:79,availability,operat,operator,79,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:208,deployability,continu,continue,208,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:839,deployability,Build,BuildScopeProxyDict,839,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1022,deployability,Build,BuildScopeProxyDict,1022,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:281,interoperability,bind,bindings,281,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:316,interoperability,Prox,ProxyWrappers,316,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:336,interoperability,bind,bindings,336,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:371,interoperability,Prox,ProxyWrappers,371,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:427,interoperability,bind,bindings,427,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:462,interoperability,Prox,ProxyWrappers,462,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:487,interoperability,bind,bindings,487,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:522,interoperability,Prox,ProxyWrappers,522,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:281,modifiability,bind,bindings,281,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:336,modifiability,bind,bindings,336,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:427,modifiability,bind,bindings,427,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:487,modifiability,bind,bindings,487,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:46,performance,time,times,46,"My best guess is that cppyy sees a method two times and then defines the equal operator in the jit twice. The iteration over the methods happens here (the counter is there to set a breakpoint more easily and continue until the actual critical part happens):. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. index 23e7ac8..70b662c 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx. @@ -26,6 +26,7 @@. #include <set>. #include <string>. #include <vector>. +#include <iostream>. //- data _______________________________________________________________________. @@ -141,6 +142,8 @@ static inline void sync_templates(. Py_DECREF(pyname);. }. +static auto counter = 0u;. +. static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). {. // Collect methods and data for the given scope, and add them to the given python. @@ -169,6 +172,9 @@ static int BuildScopeProxyDict(Cppyy::TCppScope_t scope, PyObject* pyclass). // process the method based on its name. std::string mtCppName = Cppyy::GetMethodName(method);. + std::cout << ""Counter: "" << counter << std::endl;. + counter++;. + std::cout << ""Method name: "" << mtCppName << std::endl;. // special case trackers. bool setupSetItem = false;. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:351,energy efficiency,core,core,351,"More info: The `is_equal` is jitted on the fly in the method here:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx#L301. And this is again called in various places in https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx. And a `CPPInstance` is one of the core classes :). I tried to reproduce the doubled function with plain `TClass` and `GetListOfMethods`, but there everything seems to be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:117,interoperability,bind,bindings,117,"More info: The `is_equal` is jitted on the fly in the method here:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx#L301. And this is again called in various places in https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx. And a `CPPInstance` is one of the core classes :). I tried to reproduce the doubled function with plain `TClass` and `GetListOfMethods`, but there everything seems to be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:265,interoperability,bind,bindings,265,"More info: The `is_equal` is jitted on the fly in the method here:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx#L301. And this is again called in various places in https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx. And a `CPPInstance` is one of the core classes :). I tried to reproduce the doubled function with plain `TClass` and `GetListOfMethods`, but there everything seems to be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:117,modifiability,bind,bindings,117,"More info: The `is_equal` is jitted on the fly in the method here:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx#L301. And this is again called in various places in https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx. And a `CPPInstance` is one of the core classes :). I tried to reproduce the doubled function with plain `TClass` and `GetListOfMethods`, but there everything seems to be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:265,modifiability,bind,bindings,265,"More info: The `is_equal` is jitted on the fly in the method here:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx#L301. And this is again called in various places in https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx. And a `CPPInstance` is one of the core classes :). I tried to reproduce the doubled function with plain `TClass` and `GetListOfMethods`, but there everything seems to be fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:288,availability,operat,operator,288,"The `is_equal` issue may be a red herring :/. It's some weirdness which includes inheritance with also a templated method in the derived class. Here is the most minimal reproducer I could find:. ```python. import cppyy. cppyy.cppdef('''. template <typename T>. struct Base {. T data;. T& operator[](int idx) { return data; }. };. template <typename T>. struct Vec : public Base<T> {. T data;. // we have two options to trigger the issue:. // 1. Including this line makes it break. //using Base<T>::operator[];. // 2. Or including this line. // Note that you have to derive Vec from Base to make it break! T& operator[](int idx) { return data; }. // Note that you have to have the template here! template <typename V>. T& operator[](T idx) {. return data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:498,availability,operat,operator,498,"The `is_equal` issue may be a red herring :/. It's some weirdness which includes inheritance with also a templated method in the derived class. Here is the most minimal reproducer I could find:. ```python. import cppyy. cppyy.cppdef('''. template <typename T>. struct Base {. T data;. T& operator[](int idx) { return data; }. };. template <typename T>. struct Vec : public Base<T> {. T data;. // we have two options to trigger the issue:. // 1. Including this line makes it break. //using Base<T>::operator[];. // 2. Or including this line. // Note that you have to derive Vec from Base to make it break! T& operator[](int idx) { return data; }. // Note that you have to have the template here! template <typename V>. T& operator[](T idx) {. return data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:608,availability,operat,operator,608,"The `is_equal` issue may be a red herring :/. It's some weirdness which includes inheritance with also a templated method in the derived class. Here is the most minimal reproducer I could find:. ```python. import cppyy. cppyy.cppdef('''. template <typename T>. struct Base {. T data;. T& operator[](int idx) { return data; }. };. template <typename T>. struct Vec : public Base<T> {. T data;. // we have two options to trigger the issue:. // 1. Including this line makes it break. //using Base<T>::operator[];. // 2. Or including this line. // Note that you have to derive Vec from Base to make it break! T& operator[](int idx) { return data; }. // Note that you have to have the template here! template <typename V>. T& operator[](T idx) {. return data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:721,availability,operat,operator,721,"The `is_equal` issue may be a red herring :/. It's some weirdness which includes inheritance with also a templated method in the derived class. Here is the most minimal reproducer I could find:. ```python. import cppyy. cppyy.cppdef('''. template <typename T>. struct Base {. T data;. T& operator[](int idx) { return data; }. };. template <typename T>. struct Vec : public Base<T> {. T data;. // we have two options to trigger the issue:. // 1. Including this line makes it break. //using Base<T>::operator[];. // 2. Or including this line. // Note that you have to derive Vec from Base to make it break! T& operator[](int idx) { return data; }. // Note that you have to have the template here! template <typename V>. T& operator[](T idx) {. return data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:874,deployability,stack,stacktrace,874,"The `is_equal` issue may be a red herring :/. It's some weirdness which includes inheritance with also a templated method in the derived class. Here is the most minimal reproducer I could find:. ```python. import cppyy. cppyy.cppdef('''. template <typename T>. struct Base {. T data;. T& operator[](int idx) { return data; }. };. template <typename T>. struct Vec : public Base<T> {. T data;. // we have two options to trigger the issue:. // 1. Including this line makes it break. //using Base<T>::operator[];. // 2. Or including this line. // Note that you have to derive Vec from Base to make it break! T& operator[](int idx) { return data; }. // Note that you have to have the template here! template <typename V>. T& operator[](T idx) {. return data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1169,deployability,releas,releases,1169,"oducer I could find:. ```python. import cppyy. cppyy.cppdef('''. template <typename T>. struct Base {. T data;. T& operator[](int idx) { return data; }. };. template <typename T>. struct Vec : public Base<T> {. T data;. // we have two options to trigger the issue:. // 1. Including this line makes it break. //using Base<T>::operator[];. // 2. Or including this line. // Note that you have to derive Vec from Base to make it break! T& operator[](int idx) { return data; }. // Note that you have to have the template here! template <typename V>. T& operator[](T idx) {. return data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1546,deployability,releas,releases,1546,"hat you have to derive Vec from Base to make it break! T& operator[](int idx) { return data; }. // Note that you have to have the template here! template <typename V>. T& operator[](T idx) {. return data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1868,deployability,releas,releases,1868,"e stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2423,deployability,Build,BuildScopeProxyDict,2423,"allable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/exte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3034,deployability,build,build,3034,"0, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3227,deployability,build,build,3227,"0, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3423,deployability,build,build,3423,"0, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3579,deployability,build,build,3579,"0, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3737,deployability,build,build,3737,"0, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1351,energy efficiency,alloc,allocator,1351,"uct Vec : public Base<T> {. T data;. // we have two options to trigger the issue:. // 1. Including this line makes it break. //using Base<T>::operator[];. // 2. Or including this line. // Note that you have to derive Vec from Base to make it break! T& operator[](int idx) { return data; }. // Note that you have to have the template here! template <typename V>. T& operator[](T idx) {. return data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1741,energy efficiency,alloc,allocator,1741,"rn data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f24",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3004,energy efficiency,optim,optimized,3004,"0, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3549,energy efficiency,optim,optimized,3549,"0, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:366,integrability,pub,public,366,"The `is_equal` issue may be a red herring :/. It's some weirdness which includes inheritance with also a templated method in the derived class. Here is the most minimal reproducer I could find:. ```python. import cppyy. cppyy.cppdef('''. template <typename T>. struct Base {. T data;. T& operator[](int idx) { return data; }. };. template <typename T>. struct Vec : public Base<T> {. T data;. // we have two options to trigger the issue:. // 1. Including this line makes it break. //using Base<T>::operator[];. // 2. Or including this line. // Note that you have to derive Vec from Base to make it break! T& operator[](int idx) { return data; }. // Note that you have to have the template here! template <typename V>. T& operator[](T idx) {. return data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2148,interoperability,bind,bindings,2148,"/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2329,interoperability,bind,bindings,2329,"cator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2498,interoperability,bind,bindings,2498,"85880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2533,interoperability,Prox,ProxyWrappers,2533,"h/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2669,interoperability,bind,bindings,2669,". #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2704,interoperability,Prox,ProxyWrappers,2704,"r<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2845,interoperability,bind,bindings,2845,"0, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:81,modifiability,inherit,inheritance,81,"The `is_equal` issue may be a red herring :/. It's some weirdness which includes inheritance with also a templated method in the derived class. Here is the most minimal reproducer I could find:. ```python. import cppyy. cppyy.cppdef('''. template <typename T>. struct Base {. T data;. T& operator[](int idx) { return data; }. };. template <typename T>. struct Vec : public Base<T> {. T data;. // we have two options to trigger the issue:. // 1. Including this line makes it break. //using Base<T>::operator[];. // 2. Or including this line. // Note that you have to derive Vec from Base to make it break! T& operator[](int idx) { return data; }. // Note that you have to have the template here! template <typename V>. T& operator[](T idx) {. return data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2148,modifiability,bind,bindings,2148,"/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2329,modifiability,bind,bindings,2329,"cator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2498,modifiability,bind,bindings,2498,"85880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2669,modifiability,bind,bindings,2669,". #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in P",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2845,modifiability,bind,bindings,2845,"0, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3004,performance,optimiz,optimized,3004,"0, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:3549,performance,optimiz,optimized,3549,"0, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945. #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111. #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254. #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676. #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368. #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757. #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772. #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983. #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559. #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:161,usability,minim,minimal,161,"The `is_equal` issue may be a red herring :/. It's some weirdness which includes inheritance with also a templated method in the derived class. Here is the most minimal reproducer I could find:. ```python. import cppyy. cppyy.cppdef('''. template <typename T>. struct Base {. T data;. T& operator[](int idx) { return data; }. };. template <typename T>. struct Vec : public Base<T> {. T data;. // we have two options to trigger the issue:. // 1. Including this line makes it break. //using Base<T>::operator[];. // 2. Or including this line. // Note that you have to derive Vec from Base to make it break! T& operator[](int idx) { return data; }. // Note that you have to have the template here! template <typename V>. T& operator[](T idx) {. return data;. }. };. '''). vec = cppyy.gbl.Vec['float'](). print(vec, vec[0]). vec[0] = 42.0. print(vec, vec[0]). ```. And here the stacktrace, which is the same as above:. ```bash. #9 0x00007f09d1f0bc1c in __gnu_cxx::new_allocator<CPyCppyy::PyCallable*>::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (this=0x7f09d1f71120, __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/ext/new_allocator.h:147. #10 0x00007f09d1f0ba1d in std::allocator_traits<std::allocator<CPyCppyy::PyCallable*> >::construct<CPyCppyy::PyCallable*, CPyCppyy::PyCallable* const&> (__a=..., __p=0x5f746f6f722f6863, __args=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/alloc_traits.h:484. #11 0x00007f09d1f0b81e in std::vector<CPyCppyy::PyCallable*, std::allocator<CPyCppyy::PyCallable*> >::push_back (this=0x7f09d1f71120, __x=. 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189. #12 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:120,availability,operat,operator,120,"There we go, the best reproducer so far:. ```python. import cppyy. cppyy.cppdef('''. struct Base {. float data;. float& operator[](int idx) { return data; }. };. struct Derived: public Base {. float data;. // Note that you have to derive from Base to make it break! float& operator[](int idx) { return data; }. // Note that you must put the template here! template <typename T>. float& operator[](int idx) { return data; }. };. '''). cppyy.gbl.Derived(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:273,availability,operat,operator,273,"There we go, the best reproducer so far:. ```python. import cppyy. cppyy.cppdef('''. struct Base {. float data;. float& operator[](int idx) { return data; }. };. struct Derived: public Base {. float data;. // Note that you have to derive from Base to make it break! float& operator[](int idx) { return data; }. // Note that you must put the template here! template <typename T>. float& operator[](int idx) { return data; }. };. '''). cppyy.gbl.Derived(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:386,availability,operat,operator,386,"There we go, the best reproducer so far:. ```python. import cppyy. cppyy.cppdef('''. struct Base {. float data;. float& operator[](int idx) { return data; }. };. struct Derived: public Base {. float data;. // Note that you have to derive from Base to make it break! float& operator[](int idx) { return data; }. // Note that you must put the template here! template <typename T>. float& operator[](int idx) { return data; }. };. '''). cppyy.gbl.Derived(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:178,integrability,pub,public,178,"There we go, the best reproducer so far:. ```python. import cppyy. cppyy.cppdef('''. struct Base {. float data;. float& operator[](int idx) { return data; }. };. struct Derived: public Base {. float data;. // Note that you have to derive from Base to make it break! float& operator[](int idx) { return data; }. // Note that you must put the template here! template <typename T>. float& operator[](int idx) { return data; }. };. '''). cppyy.gbl.Derived(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:109,interoperability,prox,proxy-to-derived,109,"There we go, I've made an issue upstream: https://bitbucket.org/wlav/cppyy/issues/334/segfault-when-creating-proxy-to-derived",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:443,availability,operat,operator,443,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:547,availability,operat,operator,547,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:771,availability,operat,operator,771,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1070,availability,operat,operator,1070,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1174,availability,operat,operator,1174,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1358,availability,operat,operator,1358,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:28,deployability,patch,patch,28,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:88,deployability,patch,patch,88,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:297,integrability,pub,public,297,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:343,integrability,buffer,buffer,343,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:706,integrability,pub,public,706,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:28,safety,patch,patch,28,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:88,safety,patch,patch,88,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:28,security,patch,patch,28,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:88,security,patch,patch,88,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:477,testability,assert,assert,477,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:587,testability,assert,assert,587,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:664,testability,assert,assert,664,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1104,testability,assert,assert,1104,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1214,testability,assert,assert,1214,"@eguiraud In my built, this patch is a workaround for the segfault discussed above:. ```patch. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index d9adca8..5900743 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -414,17 +414,6 @@ public:. /// Return a pointer to the vector's buffer, even if empty(). const_pointer data() const { return const_pointer(begin()); }. - reference operator[](size_type idx). - {. - assert(idx < size());. - return begin()[idx];. - }. - const_reference operator[](size_type idx) const. - {. - assert(idx < size());. - return begin()[idx];. - }. -. reference front(). {. assert(!empty());. @@ -1266,7 +1255,21 @@ public:. return *this;. }. - using SmallVectorTemplateCommon<T>::operator[];. + using reference = typename SmallVectorTemplateCommon<T>::reference;. + using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. + using size_type = typename SmallVectorTemplateCommon<T>::size_type;. + using SmallVectorTemplateCommon<T>::begin;. +. + reference operator[](size_type idx). + {. + assert(idx < size());. + return begin()[idx];. + }. + const_reference operator[](size_type idx) const. + {. + assert(idx < size());. + return begin()[idx];. + }. template <typename V, typename = std::enable_if<std::is_convertible<V, bool>::value>>. RVec operator[](const RVec<V> &conds) const. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:262,availability,error,error,262,"Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. ```. >>> import cppyy. >>> cppyy.gbl.TPython.Eval(""1+1""). ```. and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:161,deployability,build,build,161,"Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. ```. >>> import cppyy. >>> cppyy.gbl.TPython.Eval(""1+1""). ```. and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:262,performance,error,error,262,"Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. ```. >>> import cppyy. >>> cppyy.gbl.TPython.Eval(""1+1""). ```. and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:339,reliability,doe,doesn,339,"Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. ```. >>> import cppyy. >>> cppyy.gbl.TPython.Eval(""1+1""). ```. and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:262,safety,error,error,262,"Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. ```. >>> import cppyy. >>> cppyy.gbl.TPython.Eval(""1+1""). ```. and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:262,usability,error,error,262,"Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. ```. >>> import cppyy. >>> cppyy.gbl.TPython.Eval(""1+1""). ```. and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:282,availability,error,error,282,"> Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. > . > ```. > >>> import cppyy. > >>> cppyy.gbl.TPython.Eval(""1+1""). > ```. > . > and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.). Thanks for pointing that out! Indeed, the redefinition is a red herring and not connected to the issues with accessing the new `RVec` impl from Python. I push this discussion in another thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:163,deployability,build,build,163,"> Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. > . > ```. > >>> import cppyy. > >>> cppyy.gbl.TPython.Eval(""1+1""). > ```. > . > and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.). Thanks for pointing that out! Indeed, the redefinition is a red herring and not connected to the issues with accessing the new `RVec` impl from Python. I push this discussion in another thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:282,performance,error,error,282,"> Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. > . > ```. > >>> import cppyy. > >>> cppyy.gbl.TPython.Eval(""1+1""). > ```. > . > and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.). Thanks for pointing that out! Indeed, the redefinition is a red herring and not connected to the issues with accessing the new `RVec` impl from Python. I push this discussion in another thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:359,reliability,doe,doesn,359,"> Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. > . > ```. > >>> import cppyy. > >>> cppyy.gbl.TPython.Eval(""1+1""). > ```. > . > and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.). Thanks for pointing that out! Indeed, the redefinition is a red herring and not connected to the issues with accessing the new `RVec` impl from Python. I push this discussion in another thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:282,safety,error,error,282,"> Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. > . > ```. > >>> import cppyy. > >>> cppyy.gbl.TPython.Eval(""1+1""). > ```. > . > and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.). Thanks for pointing that out! Indeed, the redefinition is a red herring and not connected to the issues with accessing the new `RVec` impl from Python. I push this discussion in another thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:683,security,access,accessing,683,"> Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. > . > ```. > >>> import cppyy. > >>> cppyy.gbl.TPython.Eval(""1+1""). > ```. > . > and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.). Thanks for pointing that out! Indeed, the redefinition is a red herring and not connected to the issues with accessing the new `RVec` impl from Python. I push this discussion in another thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:282,usability,error,error,282,"> Aside, while discussing #7201 and constructing an example, I ran into that same `is_equal` redefinition mentioned above. All you need to do is this (from a ROOT build, not master):. > . > ```. > >>> import cppyy. > >>> cppyy.gbl.TPython.Eval(""1+1""). > ```. > . > and you get that error, which in turn tells me it's a pure ROOT issue, not a cppyy one, which doesn't have `TPython`. (You're certainly off the mark above in thinking it's ""jitted on the fly"" in Utilitiy.cxx, even in the ROOT fork of cppyy: what you point to is only the instantiation, not the declaration.). Thanks for pointing that out! Indeed, the redefinition is a red herring and not connected to the issues with accessing the new `RVec` impl from Python. I push this discussion in another thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:543,deployability,version,version,543,"Oh boy, this is the cause of your double declaration (run with `LD_DEBUG=files`):. ```. $ LD_DEBUG=files python rbug2.py. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend2_7.so. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend3_8.so. [.. snip ..]. ```. both of which will construct an `ApplicationStarter` object, running the declares through `ProcessLine()`. What is even more bananas, is that cppyy_backend is _designed to be independent_ of Python and hence of Python version ... It's the entry point for `CPyCppyy`, `_cppyy` (in PyPy), and the D bindings into `libCling` and friends. As such, it relies on an ABI, not an API ... It may be a red herring (since the original problem can be reproduced in master), but by duplicating a whole bunch of global objects, you'll be in a world of hurt no matter what other problems there are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:697,deployability,API,API,697,"Oh boy, this is the cause of your double declaration (run with `LD_DEBUG=files`):. ```. $ LD_DEBUG=files python rbug2.py. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend2_7.so. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend3_8.so. [.. snip ..]. ```. both of which will construct an `ApplicationStarter` object, running the declares through `ProcessLine()`. What is even more bananas, is that cppyy_backend is _designed to be independent_ of Python and hence of Python version ... It's the entry point for `CPyCppyy`, `_cppyy` (in PyPy), and the D bindings into `libCling` and friends. As such, it relies on an ABI, not an API ... It may be a red herring (since the original problem can be reproduced in master), but by duplicating a whole bunch of global objects, you'll be in a world of hurt no matter what other problems there are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:543,integrability,version,version,543,"Oh boy, this is the cause of your double declaration (run with `LD_DEBUG=files`):. ```. $ LD_DEBUG=files python rbug2.py. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend2_7.so. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend3_8.so. [.. snip ..]. ```. both of which will construct an `ApplicationStarter` object, running the declares through `ProcessLine()`. What is even more bananas, is that cppyy_backend is _designed to be independent_ of Python and hence of Python version ... It's the entry point for `CPyCppyy`, `_cppyy` (in PyPy), and the D bindings into `libCling` and friends. As such, it relies on an ABI, not an API ... It may be a red herring (since the original problem can be reproduced in master), but by duplicating a whole bunch of global objects, you'll be in a world of hurt no matter what other problems there are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:697,integrability,API,API,697,"Oh boy, this is the cause of your double declaration (run with `LD_DEBUG=files`):. ```. $ LD_DEBUG=files python rbug2.py. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend2_7.so. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend3_8.so. [.. snip ..]. ```. both of which will construct an `ApplicationStarter` object, running the declares through `ProcessLine()`. What is even more bananas, is that cppyy_backend is _designed to be independent_ of Python and hence of Python version ... It's the entry point for `CPyCppyy`, `_cppyy` (in PyPy), and the D bindings into `libCling` and friends. As such, it relies on an ABI, not an API ... It may be a red herring (since the original problem can be reproduced in master), but by duplicating a whole bunch of global objects, you'll be in a world of hurt no matter what other problems there are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:622,interoperability,bind,bindings,622,"Oh boy, this is the cause of your double declaration (run with `LD_DEBUG=files`):. ```. $ LD_DEBUG=files python rbug2.py. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend2_7.so. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend3_8.so. [.. snip ..]. ```. both of which will construct an `ApplicationStarter` object, running the declares through `ProcessLine()`. What is even more bananas, is that cppyy_backend is _designed to be independent_ of Python and hence of Python version ... It's the entry point for `CPyCppyy`, `_cppyy` (in PyPy), and the D bindings into `libCling` and friends. As such, it relies on an ABI, not an API ... It may be a red herring (since the original problem can be reproduced in master), but by duplicating a whole bunch of global objects, you'll be in a world of hurt no matter what other problems there are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:697,interoperability,API,API,697,"Oh boy, this is the cause of your double declaration (run with `LD_DEBUG=files`):. ```. $ LD_DEBUG=files python rbug2.py. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend2_7.so. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend3_8.so. [.. snip ..]. ```. both of which will construct an `ApplicationStarter` object, running the declares through `ProcessLine()`. What is even more bananas, is that cppyy_backend is _designed to be independent_ of Python and hence of Python version ... It's the entry point for `CPyCppyy`, `_cppyy` (in PyPy), and the D bindings into `libCling` and friends. As such, it relies on an ABI, not an API ... It may be a red herring (since the original problem can be reproduced in master), but by duplicating a whole bunch of global objects, you'll be in a world of hurt no matter what other problems there are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:543,modifiability,version,version,543,"Oh boy, this is the cause of your double declaration (run with `LD_DEBUG=files`):. ```. $ LD_DEBUG=files python rbug2.py. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend2_7.so. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend3_8.so. [.. snip ..]. ```. both of which will construct an `ApplicationStarter` object, running the declares through `ProcessLine()`. What is even more bananas, is that cppyy_backend is _designed to be independent_ of Python and hence of Python version ... It's the entry point for `CPyCppyy`, `_cppyy` (in PyPy), and the D bindings into `libCling` and friends. As such, it relies on an ABI, not an API ... It may be a red herring (since the original problem can be reproduced in master), but by duplicating a whole bunch of global objects, you'll be in a world of hurt no matter what other problems there are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:622,modifiability,bind,bindings,622,"Oh boy, this is the cause of your double declaration (run with `LD_DEBUG=files`):. ```. $ LD_DEBUG=files python rbug2.py. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend2_7.so. [.. snip ..]. 3787500: calling init: /home/wlav/pypy-dev/rbuild/lib/libcppyy_backend3_8.so. [.. snip ..]. ```. both of which will construct an `ApplicationStarter` object, running the declares through `ProcessLine()`. What is even more bananas, is that cppyy_backend is _designed to be independent_ of Python and hence of Python version ... It's the entry point for `CPyCppyy`, `_cppyy` (in PyPy), and the D bindings into `libCling` and friends. As such, it relies on an ABI, not an API ... It may be a red herring (since the original problem can be reproduced in master), but by duplicating a whole bunch of global objects, you'll be in a world of hurt no matter what other problems there are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:269,safety,reme,remember,269,"Another thing that is broken with the new `RVec` is iteration:. ```python. import ROOT. rvec = ROOT.VecOps.RVec['float']((1, 2, 3)). c = 0. for x in rvec:. print(x). c += 1. if c > 5:. break. ```. ```bash. 1.0. 2.0. 3.0. 3.518908852129243e-05. 0.0. 0.0. ```. I vaguely remember this issue. We had something similar before (and that's why we have a test for it). I'll have a look!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:348,safety,test,test,348,"Another thing that is broken with the new `RVec` is iteration:. ```python. import ROOT. rvec = ROOT.VecOps.RVec['float']((1, 2, 3)). c = 0. for x in rvec:. print(x). c += 1. if c > 5:. break. ```. ```bash. 1.0. 2.0. 3.0. 3.518908852129243e-05. 0.0. 0.0. ```. I vaguely remember this issue. We had something similar before (and that's why we have a test for it). I'll have a look!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:348,testability,test,test,348,"Another thing that is broken with the new `RVec` is iteration:. ```python. import ROOT. rvec = ROOT.VecOps.RVec['float']((1, 2, 3)). c = 0. for x in rvec:. print(x). c += 1. if c > 5:. break. ```. ```bash. 1.0. 2.0. 3.0. 3.518908852129243e-05. 0.0. 0.0. ```. I vaguely remember this issue. We had something similar before (and that's why we have a test for it). I'll have a look!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:277,availability,operat,operator,277,"Sorry too much info, too little bandwidth :sweat_smile: If I understand correctly:. - the `is_equal` redefinition is a real issue but unrelated to RVec 2.0 (thanks @wlav for pointing that out) and now tracked by #7678 . - you have a patch that works around the cppyy bug with `operator[]`. - iteration is broken because `RVec::begin` returns a raw pointer. In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators :smile: Seems like a bug in PyROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:233,deployability,patch,patch,233,"Sorry too much info, too little bandwidth :sweat_smile: If I understand correctly:. - the `is_equal` redefinition is a real issue but unrelated to RVec 2.0 (thanks @wlav for pointing that out) and now tracked by #7678 . - you have a patch that works around the cppyy bug with `operator[]`. - iteration is broken because `RVec::begin` returns a raw pointer. In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators :smile: Seems like a bug in PyROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:233,safety,patch,patch,233,"Sorry too much info, too little bandwidth :sweat_smile: If I understand correctly:. - the `is_equal` redefinition is a real issue but unrelated to RVec 2.0 (thanks @wlav for pointing that out) and now tracked by #7678 . - you have a patch that works around the cppyy bug with `operator[]`. - iteration is broken because `RVec::begin` returns a raw pointer. In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators :smile: Seems like a bug in PyROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:486,safety,avoid,avoid,486,"Sorry too much info, too little bandwidth :sweat_smile: If I understand correctly:. - the `is_equal` redefinition is a real issue but unrelated to RVec 2.0 (thanks @wlav for pointing that out) and now tracked by #7678 . - you have a patch that works around the cppyy bug with `operator[]`. - iteration is broken because `RVec::begin` returns a raw pointer. In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators :smile: Seems like a bug in PyROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:233,security,patch,patch,233,"Sorry too much info, too little bandwidth :sweat_smile: If I understand correctly:. - the `is_equal` redefinition is a real issue but unrelated to RVec 2.0 (thanks @wlav for pointing that out) and now tracked by #7678 . - you have a patch that works around the cppyy bug with `operator[]`. - iteration is broken because `RVec::begin` returns a raw pointer. In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators :smile: Seems like a bug in PyROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:61,testability,understand,understand,61,"Sorry too much info, too little bandwidth :sweat_smile: If I understand correctly:. - the `is_equal` redefinition is a real issue but unrelated to RVec 2.0 (thanks @wlav for pointing that out) and now tracked by #7678 . - you have a patch that works around the cppyy bug with `operator[]`. - iteration is broken because `RVec::begin` returns a raw pointer. In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators :smile: Seems like a bug in PyROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:471,testability,simpl,simplicity,471,"Sorry too much info, too little bandwidth :sweat_smile: If I understand correctly:. - the `is_equal` redefinition is a real issue but unrelated to RVec 2.0 (thanks @wlav for pointing that out) and now tracked by #7678 . - you have a patch that works around the cppyy bug with `operator[]`. - iteration is broken because `RVec::begin` returns a raw pointer. In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators :smile: Seems like a bug in PyROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:471,usability,simpl,simplicity,471,"Sorry too much info, too little bandwidth :sweat_smile: If I understand correctly:. - the `is_equal` redefinition is a real issue but unrelated to RVec 2.0 (thanks @wlav for pointing that out) and now tracked by #7678 . - you have a patch that works around the cppyy bug with `operator[]`. - iteration is broken because `RVec::begin` returns a raw pointer. In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators :smile: Seems like a bug in PyROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:511,usability,custom,custom,511,"Sorry too much info, too little bandwidth :sweat_smile: If I understand correctly:. - the `is_equal` redefinition is a real issue but unrelated to RVec 2.0 (thanks @wlav for pointing that out) and now tracked by #7678 . - you have a patch that works around the cppyy bug with `operator[]`. - iteration is broken because `RVec::begin` returns a raw pointer. In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators :smile: Seems like a bug in PyROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:327,reliability,doe,doesn,327,"> In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators 😄 Seems like a bug in PyROOT? I just had a quick look, but it seems to me that this is a corner case which doesn't trigger any mechanic for a proper pythonization, which enables the `for x in rvec` syntax in Python. Let's see, the final word is not yet spoken ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:131,safety,avoid,avoid,131,"> In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators 😄 Seems like a bug in PyROOT? I just had a quick look, but it seems to me that this is a corner case which doesn't trigger any mechanic for a proper pythonization, which enables the `for x in rvec` syntax in Python. Let's see, the final word is not yet spoken ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:116,testability,simpl,simplicity,116,"> In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators 😄 Seems like a bug in PyROOT? I just had a quick look, but it seems to me that this is a corner case which doesn't trigger any mechanic for a proper pythonization, which enables the `for x in rvec` syntax in Python. Let's see, the final word is not yet spoken ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:116,usability,simpl,simplicity,116,"> In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators 😄 Seems like a bug in PyROOT? I just had a quick look, but it seems to me that this is a corner case which doesn't trigger any mechanic for a proper pythonization, which enables the `for x in rvec` syntax in Python. Let's see, the final word is not yet spoken ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:156,usability,custom,custom,156,"> In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators 😄 Seems like a bug in PyROOT? I just had a quick look, but it seems to me that this is a corner case which doesn't trigger any mechanic for a proper pythonization, which enables the `for x in rvec` syntax in Python. Let's see, the final word is not yet spoken ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:741,availability,operat,operator,741,"Alright, it's again that PyROOT doesn't pick up methods from the inheritance hierarchy. Indeed, a raw pointer is totally fine as an iterator. In this case, PyROOT doesn't pick up the`size` method and therefore just iterates forever. Here is a patch which makes it work:. ```diff. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index 5900743..165b98a 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -1259,6 +1259,7 @@ public:. using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. using size_type = typename SmallVectorTemplateCommon<T>::size_type;. using SmallVectorTemplateCommon<T>::begin;. + using SmallVectorTemplateCommon<T>::size;. reference operator[](size_type idx). {. ```. Potentially there are also other issues because of this, which we just don't see yet :/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:243,deployability,patch,patch,243,"Alright, it's again that PyROOT doesn't pick up methods from the inheritance hierarchy. Indeed, a raw pointer is totally fine as an iterator. In this case, PyROOT doesn't pick up the`size` method and therefore just iterates forever. Here is a patch which makes it work:. ```diff. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index 5900743..165b98a 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -1259,6 +1259,7 @@ public:. using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. using size_type = typename SmallVectorTemplateCommon<T>::size_type;. using SmallVectorTemplateCommon<T>::begin;. + using SmallVectorTemplateCommon<T>::size;. reference operator[](size_type idx). {. ```. Potentially there are also other issues because of this, which we just don't see yet :/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:483,integrability,pub,public,483,"Alright, it's again that PyROOT doesn't pick up methods from the inheritance hierarchy. Indeed, a raw pointer is totally fine as an iterator. In this case, PyROOT doesn't pick up the`size` method and therefore just iterates forever. Here is a patch which makes it work:. ```diff. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index 5900743..165b98a 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -1259,6 +1259,7 @@ public:. using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. using size_type = typename SmallVectorTemplateCommon<T>::size_type;. using SmallVectorTemplateCommon<T>::begin;. + using SmallVectorTemplateCommon<T>::size;. reference operator[](size_type idx). {. ```. Potentially there are also other issues because of this, which we just don't see yet :/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:65,modifiability,inherit,inheritance,65,"Alright, it's again that PyROOT doesn't pick up methods from the inheritance hierarchy. Indeed, a raw pointer is totally fine as an iterator. In this case, PyROOT doesn't pick up the`size` method and therefore just iterates forever. Here is a patch which makes it work:. ```diff. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index 5900743..165b98a 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -1259,6 +1259,7 @@ public:. using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. using size_type = typename SmallVectorTemplateCommon<T>::size_type;. using SmallVectorTemplateCommon<T>::begin;. + using SmallVectorTemplateCommon<T>::size;. reference operator[](size_type idx). {. ```. Potentially there are also other issues because of this, which we just don't see yet :/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:32,reliability,doe,doesn,32,"Alright, it's again that PyROOT doesn't pick up methods from the inheritance hierarchy. Indeed, a raw pointer is totally fine as an iterator. In this case, PyROOT doesn't pick up the`size` method and therefore just iterates forever. Here is a patch which makes it work:. ```diff. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index 5900743..165b98a 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -1259,6 +1259,7 @@ public:. using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. using size_type = typename SmallVectorTemplateCommon<T>::size_type;. using SmallVectorTemplateCommon<T>::begin;. + using SmallVectorTemplateCommon<T>::size;. reference operator[](size_type idx). {. ```. Potentially there are also other issues because of this, which we just don't see yet :/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:163,reliability,doe,doesn,163,"Alright, it's again that PyROOT doesn't pick up methods from the inheritance hierarchy. Indeed, a raw pointer is totally fine as an iterator. In this case, PyROOT doesn't pick up the`size` method and therefore just iterates forever. Here is a patch which makes it work:. ```diff. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index 5900743..165b98a 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -1259,6 +1259,7 @@ public:. using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. using size_type = typename SmallVectorTemplateCommon<T>::size_type;. using SmallVectorTemplateCommon<T>::begin;. + using SmallVectorTemplateCommon<T>::size;. reference operator[](size_type idx). {. ```. Potentially there are also other issues because of this, which we just don't see yet :/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:243,safety,patch,patch,243,"Alright, it's again that PyROOT doesn't pick up methods from the inheritance hierarchy. Indeed, a raw pointer is totally fine as an iterator. In this case, PyROOT doesn't pick up the`size` method and therefore just iterates forever. Here is a patch which makes it work:. ```diff. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index 5900743..165b98a 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -1259,6 +1259,7 @@ public:. using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. using size_type = typename SmallVectorTemplateCommon<T>::size_type;. using SmallVectorTemplateCommon<T>::begin;. + using SmallVectorTemplateCommon<T>::size;. reference operator[](size_type idx). {. ```. Potentially there are also other issues because of this, which we just don't see yet :/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:243,security,patch,patch,243,"Alright, it's again that PyROOT doesn't pick up methods from the inheritance hierarchy. Indeed, a raw pointer is totally fine as an iterator. In this case, PyROOT doesn't pick up the`size` method and therefore just iterates forever. Here is a patch which makes it work:. ```diff. diff --git a/math/vecops/inc/ROOT/RVec.hxx b/math/vecops/inc/ROOT/RVec.hxx. index 5900743..165b98a 100644. --- a/math/vecops/inc/ROOT/RVec.hxx. +++ b/math/vecops/inc/ROOT/RVec.hxx. @@ -1259,6 +1259,7 @@ public:. using const_reference = typename SmallVectorTemplateCommon<T>::const_reference;. using size_type = typename SmallVectorTemplateCommon<T>::size_type;. using SmallVectorTemplateCommon<T>::begin;. + using SmallVectorTemplateCommon<T>::size;. reference operator[](size_type idx). {. ```. Potentially there are also other issues because of this, which we just don't see yet :/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4,safety,test,tests,4,"All tests pass for `ctest -R '(rvec|vecops|numpy|rdf|dataframe)'`, I guess that's fine for now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:4,testability,test,tests,4,"All tests pass for `ctest -R '(rvec|vecops|numpy|rdf|dataframe)'`, I guess that's fine for now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:57,deployability,patch,patches,57,"Absolutely, thank you very much Stefan! Please push your patches to this branch. Do we have a separate issue to track this problem with PyROOT? Even just to document the issue, the workaround, the linked cppyy issue etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:57,safety,patch,patches,57,"Absolutely, thank you very much Stefan! Please push your patches to this branch. Do we have a separate issue to track this problem with PyROOT? Even just to document the issue, the workaround, the linked cppyy issue etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:57,security,patch,patches,57,"Absolutely, thank you very much Stefan! Please push your patches to this branch. Do we have a separate issue to track this problem with PyROOT? Even just to document the issue, the workaround, the linked cppyy issue etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:157,usability,document,document,157,"Absolutely, thank you very much Stefan! Please push your patches to this branch. Do we have a separate issue to track this problem with PyROOT? Even just to document the issue, the workaround, the linked cppyy issue etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:171,availability,servic,services,171,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:380,availability,servic,services,380,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:682,availability,operat,operator,682,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:2,deployability,Build,Build,2,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:8,deployability,fail,failed,8,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:92,deployability,build,build,92,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:126,deployability,build,build,126,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:171,deployability,servic,services,171,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:223,deployability,build,build,223,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:256,deployability,Fail,Failing,256,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:380,deployability,servic,services,380,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:432,deployability,build,build,432,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:556,deployability,fail,fails,556,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:1137,energy efficiency,alloc,allocator,1137,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:171,integrability,servic,services,171,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:380,integrability,servic,services,380,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:289,interoperability,bind,bindings,289,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:468,interoperability,bind,bindings,468,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:171,modifiability,servic,services,171,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:289,modifiability,bind,bindings,289,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:380,modifiability,servic,services,380,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:468,modifiability,bind,bindings,468,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:8,reliability,fail,failed,8,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:256,reliability,Fail,Failing,256,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:556,reliability,fail,fails,556,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:798,reliability,doe,doesn,798,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:264,safety,test,tests,264,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:320,safety,test,test,320,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:445,safety,test,testReport,445,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:499,safety,test,test,499,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:551,safety,test,test,551,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:264,testability,test,tests,264,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:320,testability,test,test,320,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:445,testability,test,testReport,445,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:499,testability,test,test,499,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:551,testability,test,test,551,"> Build failed on ROOT-fedora31/noimt. > Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/console). > . > ### Failing tests:. > * [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112046/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/). This test fails because the pretty printing mechanism of cling is not picked up for the RVec 2.0. Actually I don't see why because the `operator<<` overload is there (see bottom of `RVec.hxx`). It's also weird from the ROOT prompt. The pretty printing doesn't work right away after the constructor, but piping it in the stringstream is works:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) @0x7f555e6c3010. root [1] stringstream ss;. root [2] ss << x. (std::ostream &) @0x7f555e6c3058. root [3] ss.str(). (std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::__string_type) ""{ 1, 2, 3 }"". ```. It should look like this:. ```cpp. root [0] ROOT::RVec<float> x = {1, 2, 3}. (ROOT::RVec<float> &) { 1.00000f, 2.00000f, 3.00000f }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:168,deployability,modul,module,168,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:406,deployability,Fail,Failed,406,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:475,deployability,Fail,Failed,475,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:444,interoperability,format,format,444,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:168,modifiability,modul,module,168,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:14,reliability,doe,doesn,14,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:406,reliability,Fail,Failed,406,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:475,reliability,Fail,Failed,475,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:168,safety,modul,module,168,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:542,safety,test,test,542,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:568,safety,test,tests,568,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:609,security,access,accessible,609,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:104,testability,Trace,Traceback,104,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:542,testability,test,test,542,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:547,testability,coverag,coverage,547,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:568,testability,test,tests,568,"Uhm what also doesn't work is the following:. ```python. >>> import ROOT. >>> x = ROOT.RVec['float'](). Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 222, in _getattr. return getattr(self, name). File ""/work/wunsch/root_rvec/build_root/lib/ROOT/_facade.py"", line 192, in _fallback_getattr. raise AttributeError(""Failed to get attribute {} from ROOT"".format(name)). AttributeError: Failed to get attribute RVec from ROOT. ```. But we don't have any test coverage because all tests were written before we made `RVec` accessible from the `ROOT` namespace. I'm going to fix that! Edit: It's a long standing issue, see #7687 or #5361 or https://sft.its.cern.ch/jira/browse/ROOT-10688.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:92,availability,avail,available,92,I think we should consider making the LLVMSupport library (which provides SmallVector & co) available in core and thus to the rest of ROOT. cc: @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:105,energy efficiency,core,core,105,I think we should consider making the LLVMSupport library (which provides SmallVector & co) available in core and thus to the rest of ROOT. cc: @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:92,reliability,availab,available,92,I think we should consider making the LLVMSupport library (which provides SmallVector & co) available in core and thus to the rest of ROOT. cc: @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:92,safety,avail,available,92,I think we should consider making the LLVMSupport library (which provides SmallVector & co) available in core and thus to the rest of ROOT. cc: @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:92,security,availab,available,92,I think we should consider making the LLVMSupport library (which provides SmallVector & co) available in core and thus to the rest of ROOT. cc: @Axel-Naumann,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:100,deployability,patch,patch,100,"@vgvassilev that's fairly unrelated? It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:167,integrability,buffer,buffer,167,"@vgvassilev that's fairly unrelated? It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:160,performance,memor,memory,160,"@vgvassilev that's fairly unrelated? It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:220,performance,I/O,I/O,220,"@vgvassilev that's fairly unrelated? It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:100,safety,patch,patch,100,"@vgvassilev that's fairly unrelated? It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:100,security,patch,patch,100,"@vgvassilev that's fairly unrelated? It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:160,usability,memor,memory,160,"@vgvassilev that's fairly unrelated? It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:191,deployability,patch,patch,191,"> @vgvassilev that's fairly unrelated? I am confused -- did we copy code from llvm? If we did I'd think that's quite related. > It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame. I thought we have a way to do that with TMemFile already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:258,integrability,buffer,buffer,258,"> @vgvassilev that's fairly unrelated? I am confused -- did we copy code from llvm? If we did I'd think that's quite related. > It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame. I thought we have a way to do that with TMemFile already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:251,performance,memor,memory,251,"> @vgvassilev that's fairly unrelated? I am confused -- did we copy code from llvm? If we did I'd think that's quite related. > It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame. I thought we have a way to do that with TMemFile already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:311,performance,I/O,I/O,311,"> @vgvassilev that's fairly unrelated? I am confused -- did we copy code from llvm? If we did I'd think that's quite related. > It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame. I thought we have a way to do that with TMemFile already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:191,safety,patch,patch,191,"> @vgvassilev that's fairly unrelated? I am confused -- did we copy code from llvm? If we did I'd think that's quite related. > It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame. I thought we have a way to do that with TMemFile already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:191,security,patch,patch,191,"> @vgvassilev that's fairly unrelated? I am confused -- did we copy code from llvm? If we did I'd think that's quite related. > It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame. I thought we have a way to do that with TMemFile already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:251,usability,memor,memory,251,"> @vgvassilev that's fairly unrelated? I am confused -- did we copy code from llvm? If we did I'd think that's quite related. > It would not solve our cppyy-related issues and here we anyway patch `SmallVector` to add the ability to adopt an existing memory buffer, which is required for no-copy (or less-copy) I/O within RDataFrame. I thought we have a way to do that with TMemFile already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:466,availability,avail,available,466,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:91,deployability,patch,patch,91,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:149,deployability,version,version,149,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:264,deployability,roll,roll,264,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:211,energy efficiency,core,core,211,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:149,integrability,version,version,149,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:488,integrability,buffer,buffer,488,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:149,modifiability,version,version,149,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:456,performance,disk,disk,456,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:481,performance,memor,memory,481,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:125,reliability,doe,does,125,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:466,reliability,availab,available,466,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
https://github.com/root-project/root/pull/7502:91,safety,patch,patch,91,"@vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec. > I thought we have a way to do that with TMemFile already. It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7502
