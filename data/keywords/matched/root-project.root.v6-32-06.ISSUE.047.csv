id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/8368:756,performance,error,error,756,"Fix 'this' pointer is null warnings; ```. .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':. .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]. 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;. | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':. .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]. 156 | << "" is not of type RooAbsReal, fatal error"" << endl;. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]. 131 | Int_t n = event->GetNVariables();. | ~~~~~~~~~~~~~~~~~~~~^~. In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,. from .../tmva/tmva/inc/TMVA/Tools.h:58,. from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,. from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,. from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,. from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:. .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'. 88 | UInt_t GetNVariables() const;. | ^~~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8368
https://github.com/root-project/root/pull/8368:297,safety,Input,InputArguments,297,"Fix 'this' pointer is null warnings; ```. .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':. .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]. 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;. | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':. .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]. 156 | << "" is not of type RooAbsReal, fatal error"" << endl;. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]. 131 | Int_t n = event->GetNVariables();. | ~~~~~~~~~~~~~~~~~~~~^~. In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,. from .../tmva/tmva/inc/TMVA/Tools.h:58,. from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,. from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,. from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,. from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:. .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'. 88 | UInt_t GetNVariables() const;. | ^~~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8368
https://github.com/root-project/root/pull/8368:365,safety,ERROR,ERROR,365,"Fix 'this' pointer is null warnings; ```. .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':. .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]. 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;. | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':. .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]. 156 | << "" is not of type RooAbsReal, fatal error"" << endl;. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]. 131 | Int_t n = event->GetNVariables();. | ~~~~~~~~~~~~~~~~~~~~^~. In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,. from .../tmva/tmva/inc/TMVA/Tools.h:58,. from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,. from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,. from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,. from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:. .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'. 88 | UInt_t GetNVariables() const;. | ^~~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8368
https://github.com/root-project/root/pull/8368:756,safety,error,error,756,"Fix 'this' pointer is null warnings; ```. .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':. .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]. 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;. | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':. .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]. 156 | << "" is not of type RooAbsReal, fatal error"" << endl;. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]. 131 | Int_t n = event->GetNVariables();. | ~~~~~~~~~~~~~~~~~~~~^~. In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,. from .../tmva/tmva/inc/TMVA/Tools.h:58,. from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,. from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,. from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,. from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:. .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'. 88 | UInt_t GetNVariables() const;. | ^~~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8368
https://github.com/root-project/root/pull/8368:297,usability,Input,InputArguments,297,"Fix 'this' pointer is null warnings; ```. .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':. .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]. 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;. | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':. .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]. 156 | << "" is not of type RooAbsReal, fatal error"" << endl;. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]. 131 | Int_t n = event->GetNVariables();. | ~~~~~~~~~~~~~~~~~~~~^~. In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,. from .../tmva/tmva/inc/TMVA/Tools.h:58,. from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,. from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,. from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,. from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:. .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'. 88 | UInt_t GetNVariables() const;. | ^~~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8368
https://github.com/root-project/root/pull/8368:365,usability,ERROR,ERROR,365,"Fix 'this' pointer is null warnings; ```. .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':. .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]. 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;. | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':. .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]. 156 | << "" is not of type RooAbsReal, fatal error"" << endl;. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]. 131 | Int_t n = event->GetNVariables();. | ~~~~~~~~~~~~~~~~~~~~^~. In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,. from .../tmva/tmva/inc/TMVA/Tools.h:58,. from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,. from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,. from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,. from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:. .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'. 88 | UInt_t GetNVariables() const;. | ^~~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8368
https://github.com/root-project/root/pull/8368:756,usability,error,error,756,"Fix 'this' pointer is null warnings; ```. .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':. .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]. 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;. | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':. .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]. 156 | << "" is not of type RooAbsReal, fatal error"" << endl;. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]. 131 | Int_t n = event->GetNVariables();. | ~~~~~~~~~~~~~~~~~~~~^~. In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,. from .../tmva/tmva/inc/TMVA/Tools.h:58,. from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,. from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,. from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,. from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:. .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'. 88 | UInt_t GetNVariables() const;. | ^~~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8368
https://github.com/root-project/root/pull/8368:1441,usability,Tool,Tools,1441,"Fix 'this' pointer is null warnings; ```. .../roofit/roofitcore/src/RooDataHist.cxx: In member function 'void RooDataHist::_adjustBinning(RooRealVar&, const TAxis&, RooRealVar*, Int_t*)':. .../roofit/roofitcore/src/RooDataHist.cxx:595:122: warning: 'this' pointer is null [-Wnonnull]. 595 | coutE(InputArguments) << ""RooDataHist::adjustBinning("" << GetName() << "") ERROR: dimension "" << ourVar->GetName() << "" must be real"" << endl ;. | ^~~~~~~~~~~~~~~. .../roofit/roofitcore/src/RooRealSumFunc.cxx: In constructor 'RooRealSumFunc::RooRealSumFunc(const char*, const char*, const RooArgList&, const RooArgList&)':. .../roofit/roofitcore/src/RooRealSumFunc.cxx:156:35: warning: 'this' pointer is null [-Wnonnull]. 156 | << "" is not of type RooAbsReal, fatal error"" << endl;. | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx: In member function 'void TMVA::DNN::TDataLoader<AData, TMVA::DNN::TReference<AReal> >::CopyInput(TMatrixT<AReal>&, TMVA::DNN::IndexIterator_t) [with AData = std::tuple<const std::vector<TMVA::Event*, std::allocator<TMVA::Event*> >&, const TMVA::DataSetInfo&>; AReal = float]':. .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:131:34: warning: 'this' pointer is null [-Wnonnull]. 131 | Int_t n = event->GetNVariables();. | ~~~~~~~~~~~~~~~~~~~~^~. In file included from .../tmva/tmva/inc/TMVA/VariableTransformBase.h:48,. from .../tmva/tmva/inc/TMVA/Tools.h:58,. from .../tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:36,. from .../tmva/tmva/inc/TMVA/DNN/CNN/ConvLayer.h:32,. from .../tmva/tmva/inc/TMVA/DNN/Architectures/Reference.h:24,. from .../tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:17:. .../tmva/tmva/inc/TMVA/Event.h:88:16: note: in a call to non-static member function 'UInt_t TMVA::Event::GetNVariables() const'. 88 | UInt_t GetNVariables() const;. | ^~~~~~~~~~~~~. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8368
https://github.com/root-project/root/pull/8369:580,availability,replic,replication,580,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:673,energy efficiency,optim,optimization,673,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:421,integrability,sub,subclass,421,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:332,interoperability,Specif,Specifically,332,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:545,modifiability,paramet,parameter,545,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:673,performance,optimiz,optimization,673,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:690,performance,parallel,parallelization,690,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:23,safety,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:889,safety,test,tested,889,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:1107,safety,review,review,1107,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:740,security,modif,modify,740,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:23,testability,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:884,testability,unit,unit,884,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:889,testability,test,tested,889,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/pull/8369:1107,testability,review,review,1107,"RooFit::MultiProcess & TestStatistics part 1: mathcore & Minuit2 changes; This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8369
https://github.com/root-project/root/issues/8370:429,availability,error,error,429,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:533,availability,error,error,533,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:772,availability,error,error,772,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:841,availability,error,error,841,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:6,deployability,fail,fails,6,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:110,deployability,fail,fails,110,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:799,deployability,version,version,799,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:850,energy efficiency,current,currently,850,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:799,integrability,version,version,799,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:799,modifiability,version,version,799,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:429,performance,error,error,429,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:533,performance,error,error,533,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:772,performance,error,error,772,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:841,performance,error,error,841,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:6,reliability,fail,fails,6,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:110,reliability,fail,fails,110,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:261,safety,test,test,261,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:329,safety,test,test,329,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:387,safety,test,test,387,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:392,safety,test,test,392,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:429,safety,error,error,429,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:459,safety,test,test,459,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:517,safety,test,test,517,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:533,safety,error,error,533,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:772,safety,error,error,772,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:841,safety,error,error,841,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:261,testability,test,test,261,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:329,testability,test,test,329,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:387,testability,test,test,387,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:392,testability,test,test,392,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:459,testability,test,test,459,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:517,testability,test,test,517,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:429,usability,error,error,429,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:533,usability,error,error,533,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:772,usability,error,error,772,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/issues/8370:841,usability,error,error,841,"Cling fails to resolve ADL properly; It seems ROOT is not able to resolve ADL properly. The following snippet fails to run with ROOT:. ```cpp. #include <iostream>. #include <any>. namespace ns {. struct X {. friend bool any(X) {. return true;. }. };. }. . void test() {. std::cout << any(ns::X{}) << std::endl;. }. int main() {. test();. return 0;. }. ```. It compiles fine with `g++ -o test test.cpp` but leads to the following error if run with `root -l -q test.cpp`:. ```. In file included from input_line_117:1:. test.cpp:13:13: error: invalid operands to binary expression ('std::ostream' (aka 'basic_ostream<char>') and 'std::any'). std::cout << any(ns::X{}) << std::endl;. ```. If the header `<any>` is not included, then it is executed correctly. To reproduce the error use `Centos 7`, ROOT version `6.24` (taken from `cvmfs`). This error is currently causing some developments for the LHCb experiment to be on stand-by.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8370
https://github.com/root-project/root/pull/8371:244,integrability,wrap,wraps,244,[clad] Initial support of hessian calculation in TFormula using clad; TFormula already supports gradient calculation using clad. This commit extends that support for hessian calculation. Thus the hessian generation is done by clad and TFormula wraps it in a trampoline function.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:141,modifiability,exten,extends,141,[clad] Initial support of hessian calculation in TFormula using clad; TFormula already supports gradient calculation using clad. This commit extends that support for hessian calculation. Thus the hessian generation is done by clad and TFormula wraps it in a trampoline function.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:15,usability,support,support,15,[clad] Initial support of hessian calculation in TFormula using clad; TFormula already supports gradient calculation using clad. This commit extends that support for hessian calculation. Thus the hessian generation is done by clad and TFormula wraps it in a trampoline function.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:87,usability,support,supports,87,[clad] Initial support of hessian calculation in TFormula using clad; TFormula already supports gradient calculation using clad. This commit extends that support for hessian calculation. Thus the hessian generation is done by clad and TFormula wraps it in a trampoline function.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8371:154,usability,support,support,154,[clad] Initial support of hessian calculation in TFormula using clad; TFormula already supports gradient calculation using clad. This commit extends that support for hessian calculation. Thus the hessian generation is done by clad and TFormula wraps it in a trampoline function.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8371
https://github.com/root-project/root/pull/8372:141,availability,down,downsteam,141,"[v624][RF] Handle nullptr or empty norm set ambiguity in RooAbsReal::getVal; Backport of https://github.com/root-project/root/pull/8364. The downsteam code, -- like RooAddPdf::getValV for example -- assume. that a nullptr is passed when no normalization is requested. The case of. an empty norm set is not handled correctly in RooAddPdf::getValV,. leading to wrong results. However, some calling code passes an empty norm set to. RooAbsReal::getVal instead of a `nullptr` in an attempt to disable. normalization. This commit suggests to solve this ambiguity at the highest possible. level: right at the beginning of RooAbsReal::getVal. If the. normalization set is empty, the pointer pointing to it will be set to. `nullptr`. This fixes issue #8307. To give some context: the code in RooAddPdf that doesn't handle the ambiguity correctly was introduced in f6d1543, which was also backported to 6.24. Hence, a backport to 6.24 is necessary also for this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8372
https://github.com/root-project/root/pull/8372:799,reliability,doe,doesn,799,"[v624][RF] Handle nullptr or empty norm set ambiguity in RooAbsReal::getVal; Backport of https://github.com/root-project/root/pull/8364. The downsteam code, -- like RooAddPdf::getValV for example -- assume. that a nullptr is passed when no normalization is requested. The case of. an empty norm set is not handled correctly in RooAddPdf::getValV,. leading to wrong results. However, some calling code passes an empty norm set to. RooAbsReal::getVal instead of a `nullptr` in an attempt to disable. normalization. This commit suggests to solve this ambiguity at the highest possible. level: right at the beginning of RooAbsReal::getVal. If the. normalization set is empty, the pointer pointing to it will be set to. `nullptr`. This fixes issue #8307. To give some context: the code in RooAddPdf that doesn't handle the ambiguity correctly was introduced in f6d1543, which was also backported to 6.24. Hence, a backport to 6.24 is necessary also for this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8372
https://github.com/root-project/root/pull/8372:763,testability,context,context,763,"[v624][RF] Handle nullptr or empty norm set ambiguity in RooAbsReal::getVal; Backport of https://github.com/root-project/root/pull/8364. The downsteam code, -- like RooAddPdf::getValV for example -- assume. that a nullptr is passed when no normalization is requested. The case of. an empty norm set is not handled correctly in RooAddPdf::getValV,. leading to wrong results. However, some calling code passes an empty norm set to. RooAbsReal::getVal instead of a `nullptr` in an attempt to disable. normalization. This commit suggests to solve this ambiguity at the highest possible. level: right at the beginning of RooAbsReal::getVal. If the. normalization set is empty, the pointer pointing to it will be set to. `nullptr`. This fixes issue #8307. To give some context: the code in RooAddPdf that doesn't handle the ambiguity correctly was introduced in f6d1543, which was also backported to 6.24. Hence, a backport to 6.24 is necessary also for this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8372
https://github.com/root-project/root/pull/8373:554,deployability,Updat,Update,554,"[rcanvas] remove RAttrBox, introduce RAttrBorder; `RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }. const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:255,energy efficiency,draw,drawables,255,"[rcanvas] remove RAttrBox, introduce RAttrBorder; `RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }. const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:74,integrability,encapsulat,encapsulations,74,"[rcanvas] remove RAttrBox, introduce RAttrBorder; `RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }. const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:74,modifiability,encapsul,encapsulations,74,"[rcanvas] remove RAttrBox, introduce RAttrBorder; `RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }. const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:235,modifiability,inherit,inheritance,235,"[rcanvas] remove RAttrBox, introduce RAttrBorder; `RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }. const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:1,reliability,rca,rcanvas,1,"[rcanvas] remove RAttrBox, introduce RAttrBorder; `RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }. const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:554,safety,Updat,Update,554,"[rcanvas] remove RAttrBox, introduce RAttrBorder; `RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }. const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:554,security,Updat,Update,554,"[rcanvas] remove RAttrBox, introduce RAttrBorder; `RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }. const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:347,testability,Simpl,Simplify,347,"[rcanvas] remove RAttrBox, introduce RAttrBorder; `RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }. const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:336,usability,support,supported,336,"[rcanvas] remove RAttrBox, introduce RAttrBorder; `RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }. const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/pull/8373:347,usability,Simpl,Simplify,347,"[rcanvas] remove RAttrBox, introduce RAttrBorder; `RAttrBox` had too many encapsulations. Use instead directly `RAttrFill` and newly introduced `RAttrBorder` for `RFrame`, `RBox`, `RPave`. Remove `RAttrOnFrame` class which was used in inheritance for the drawables, put ""onframe"" and ""clipping"" attributes directly in the classes where supported. Simplify naming convention. For every attributes aggregation like `RAttrLine` provide only two methods:. RAttrLine &AttrLine() { return fAttrLine; }. const RAttrLine &AttrLine() const { return fAttrLine; }. Update JSROOT to reflect changes on C++ side",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8373
https://github.com/root-project/root/issues/8374:57,availability,fault,fault,57,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:645,availability,error,error,645,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:57,energy efficiency,fault,fault,57,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:651,integrability,messag,message,651,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:651,interoperability,messag,message,651,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:286,modifiability,variab,variables,286,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:57,performance,fault,fault,57,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:645,performance,error,error,645,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:57,reliability,fault,fault,57,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:599,reliability,doe,doesn,599,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:57,safety,fault,fault,57,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:645,safety,error,error,645,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:160,testability,assert,assert,160,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/issues/8374:645,usability,error,error,645,"[RF] Modernise RooRealSumFunc after #8368; It's not your fault, but you opened Pandora's box 🙂. - No c-style casts in any code that gets touched after 2018. - `assert(0)` is useless in production code. Please throw `std::invalid_argument`. - Don't use legacy iterators and don't define variables outside of the loop. - Instead, use something like this:. ```c++. for (unsigned int i = 0; i < inFuncList.size(); ++i) {. auto func = static_cast<RooAbsArg*>(inFuncList[i]);. auto coef = static_cast<RooAbsArg*>(inCoefList[i]);. ... ```. or directly `dynamic_cast` to the required types. If one of those doesn't exist or has the wrong type, issue an error message and throw. _Originally posted by @hageboeck in https://github.com/root-project/root/pull/8368#discussion_r647458786_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8374
https://github.com/root-project/root/pull/8375:47,deployability,log,logic,47,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8375:47,safety,log,logic,47,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8375:308,safety,input,input,308,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8375:622,safety,input,input,622,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8375:47,security,log,logic,47,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8375:187,security,trust,trust,187,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8375:47,testability,log,logic,47,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8375:737,testability,simpl,simple,737,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8375:308,usability,input,input,308,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8375:467,usability,support,support,467,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8375:622,usability,input,input,622,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8375:737,usability,simpl,simple,737,"[DF] Improve Snapshot branch-address-resetting logic ; Instead of TTree::AddClone + TTree::CopyAddresses, use the data-block. callback mechanism to reset addresses when needed. We cannot trust TTree::CopyAddresses to do the right thing because. the output branch might be a different kind of branch than the input. branch (e.g. TBranch vs TBranchElement), which leads to the problem. described at #8295 . This fixes #8295 for what regards Snapshot. This PR also adds support for ""data-block"" callbacks, wired to `TChain`'s `TNotify` mechanism, to be able to react to changes of the underlying TTree (e.g. by resetting the input address of Snapshot's output branches). This is a pre-requisite for the fix, but it also makes it relatively simple to implement `DefinePerSample` as requested in #6745 . As a side-effect, since we now don't rely on `TTree::CopyAddresses` in `Snapshot` anymore, this PR should also fix #7727 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8375
https://github.com/root-project/root/pull/8376:28,energy efficiency,Draw,Drawbacks,28,"[tree] First fix for #8295; Drawbacks:. - needs TBranchElement to list TTree as a friend. - only covers the case of TBranchElement/TBranch mismatches (the one. reported in #8295), there might be others. - does not fix other issues with RDF and warnings from CopyAddresses, e.g. #7727. This is an alternative to #8375 that is much more ad-hoc but it fixes the reported problem and should not break other tests, differently from #8375 which introduces an issue in case of clashing branch names.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8376
https://github.com/root-project/root/pull/8376:139,interoperability,mismatch,mismatches,139,"[tree] First fix for #8295; Drawbacks:. - needs TBranchElement to list TTree as a friend. - only covers the case of TBranchElement/TBranch mismatches (the one. reported in #8295), there might be others. - does not fix other issues with RDF and warnings from CopyAddresses, e.g. #7727. This is an alternative to #8375 that is much more ad-hoc but it fixes the reported problem and should not break other tests, differently from #8375 which introduces an issue in case of clashing branch names.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8376
https://github.com/root-project/root/pull/8376:205,reliability,doe,does,205,"[tree] First fix for #8295; Drawbacks:. - needs TBranchElement to list TTree as a friend. - only covers the case of TBranchElement/TBranch mismatches (the one. reported in #8295), there might be others. - does not fix other issues with RDF and warnings from CopyAddresses, e.g. #7727. This is an alternative to #8375 that is much more ad-hoc but it fixes the reported problem and should not break other tests, differently from #8375 which introduces an issue in case of clashing branch names.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8376
https://github.com/root-project/root/pull/8376:403,safety,test,tests,403,"[tree] First fix for #8295; Drawbacks:. - needs TBranchElement to list TTree as a friend. - only covers the case of TBranchElement/TBranch mismatches (the one. reported in #8295), there might be others. - does not fix other issues with RDF and warnings from CopyAddresses, e.g. #7727. This is an alternative to #8375 that is much more ad-hoc but it fixes the reported problem and should not break other tests, differently from #8375 which introduces an issue in case of clashing branch names.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8376
https://github.com/root-project/root/pull/8376:403,testability,test,tests,403,"[tree] First fix for #8295; Drawbacks:. - needs TBranchElement to list TTree as a friend. - only covers the case of TBranchElement/TBranch mismatches (the one. reported in #8295), there might be others. - does not fix other issues with RDF and warnings from CopyAddresses, e.g. #7727. This is an alternative to #8375 that is much more ad-hoc but it fixes the reported problem and should not break other tests, differently from #8375 which introduces an issue in case of clashing branch names.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8376
https://github.com/root-project/root/issues/8377:365,interoperability,share,share,365,"[ntuple] Add field description to RNTupleDescriptor::PrintInfo output?; ### Explain what you would like to see improved. After https://github.com/root-project/root/pull/7399 we can now add RNTuple field descriptions to the output of `RNTupleDescriptor::PrintInfo`, as in `TTree::Print()`. <!--. Explain what isn't as good as it could be and why. -->. ### Optional: share how it could be improved. Right now I think the most appropriate info category is `kStorageDetails`, e.g. . ```. ------------------------------------------------------------. COLUMN DETAILS. ------------------------------------------------------------. CaloMET [#0] -- Index {id:22}. Description: Offline CaloMET (muon corrected) <- new. # Elements: 100. # Pages: 1. Avg elements / page: 100. Avg page size: 185 B. Size on storage: 185 B. Compression: 2.16. ............................................................ CaloMET.phi [#0] -- Real32 {id:23}. Description: phi <- new. # Elements: 100. # Pages: 1. Avg elements / page: 100. Avg page size: 361 B. Size on storage: 361 B. Compression: 1.11. ............................................................ ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8377
https://github.com/root-project/root/pull/8378:450,deployability,version,version,450,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:450,integrability,version,version,450,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:527,integrability,batch,batch,527,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:5,modifiability,Refact,Refactor,5,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:33,modifiability,exten,extended,33,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:194,modifiability,exten,extendedTerm,194,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:285,modifiability,exten,extended,285,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:450,modifiability,version,version,450,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:613,modifiability,exten,extended,613,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:5,performance,Refactor,Refactor,5,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:527,performance,batch,batch,527,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8378:553,usability,help,helper,553,"[RF] Refactor weight summing for extended term; * introduce new `RooAbsData::sumEntriesW2()` member function to. calculate sum of squared weights of RooDataHist or RooDataSet. * new `RooAbsPdf::extendedTerm(RooAbsData const&, bool weightSquared)`. overload to conveniently compute the extended term also outside the. the `RooNLLVar` class (intended for the new [RooFitDriver](https://github.com/root-project/root/pull/8240)). * always use the faster version of the squared weights summing that was. originally designed for the batch evaluations mode. * helper function in RooAbsPdf implementation to determine is extended. term is needed (also intended for fitting with the new RooFitDriver)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8378
https://github.com/root-project/root/pull/8379:465,availability,error,error,465,"protect fIsRunning from TThread, and fix typo; Addresses one of the issues on https://github.com/root-project/root/issues/8365. Namely, TThread::Printf() causing a data race with TApplication::Run(). ```. TApplication::IsRunning() const (TApplication.h:148). TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1029). This conflicts with a previous write of size 1 by thread #1. TApplication::Run(bool) (TApplication.cxx:1622). ```. After this fix, the error disappears from helgrind.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:335,interoperability,conflict,conflicts,335,"protect fIsRunning from TThread, and fix typo; Addresses one of the issues on https://github.com/root-project/root/issues/8365. Namely, TThread::Printf() causing a data race with TApplication::Run(). ```. TApplication::IsRunning() const (TApplication.h:148). TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1029). This conflicts with a previous write of size 1 by thread #1. TApplication::Run(bool) (TApplication.cxx:1622). ```. After this fix, the error disappears from helgrind.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:465,performance,error,error,465,"protect fIsRunning from TThread, and fix typo; Addresses one of the issues on https://github.com/root-project/root/issues/8365. Namely, TThread::Printf() causing a data race with TApplication::Run(). ```. TApplication::IsRunning() const (TApplication.h:148). TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1029). This conflicts with a previous write of size 1 by thread #1. TApplication::Run(bool) (TApplication.cxx:1622). ```. After this fix, the error disappears from helgrind.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:465,safety,error,error,465,"protect fIsRunning from TThread, and fix typo; Addresses one of the issues on https://github.com/root-project/root/issues/8365. Namely, TThread::Printf() causing a data race with TApplication::Run(). ```. TApplication::IsRunning() const (TApplication.h:148). TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1029). This conflicts with a previous write of size 1 by thread #1. TApplication::Run(bool) (TApplication.cxx:1622). ```. After this fix, the error disappears from helgrind.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8379:465,usability,error,error,465,"protect fIsRunning from TThread, and fix typo; Addresses one of the issues on https://github.com/root-project/root/issues/8365. Namely, TThread::Printf() causing a data race with TApplication::Run(). ```. TApplication::IsRunning() const (TApplication.h:148). TThread::XARequest(char const*, int, void**, int*) (TThread.cxx:1029). This conflicts with a previous write of size 1 by thread #1. TApplication::Run(bool) (TApplication.cxx:1622). ```. After this fix, the error disappears from helgrind.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8379
https://github.com/root-project/root/pull/8380:60,interoperability,format,formatting,60,[gpad] Port to Win64 (replace Long_t by Longptr_t + pointer formatting);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8380
https://github.com/root-project/root/pull/8381:60,interoperability,format,formatting,60,[graf] Port to Win64 (replace Long_t by Longptr_t + pointer formatting);,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8381
https://github.com/root-project/root/pull/8382:50,interoperability,distribut,distributed,50,"[WIP][DF][skip-ci] Better support friend trees in distributed RDF; Fixes #7584 . WIP, still need to adjust the tests to the new elements of the `Range` object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8382
https://github.com/root-project/root/pull/8382:111,safety,test,tests,111,"[WIP][DF][skip-ci] Better support friend trees in distributed RDF; Fixes #7584 . WIP, still need to adjust the tests to the new elements of the `Range` object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8382
https://github.com/root-project/root/pull/8382:111,testability,test,tests,111,"[WIP][DF][skip-ci] Better support friend trees in distributed RDF; Fixes #7584 . WIP, still need to adjust the tests to the new elements of the `Range` object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8382
https://github.com/root-project/root/pull/8382:26,usability,support,support,26,"[WIP][DF][skip-ci] Better support friend trees in distributed RDF; Fixes #7584 . WIP, still need to adjust the tests to the new elements of the `Range` object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8382
https://github.com/root-project/root/pull/8383:326,availability,state,state,326,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:992,availability,state,states,992,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:711,deployability,version,version,711,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:140,integrability,sub,subtract-with-borrow,140,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:326,integrability,state,state,326,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:711,integrability,version,version,711,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:992,integrability,state,states,992,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:14,interoperability,compatib,compatibility,14,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:383,interoperability,compatib,compatibility,383,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1182,interoperability,standard,standard,1182,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1367,interoperability,compatib,compatibility,1367,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1411,interoperability,semant,semantics,1411,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:224,modifiability,paramet,parameters,224,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:454,modifiability,paramet,parameters,454,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:711,modifiability,version,version,711,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:186,performance,perform,performance,186,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1210,safety,test,tests,1210,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:1210,testability,test,tests,1210,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8383:186,usability,perform,performance,186,"RANLUX++: Add compatibility engines; These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:. * the original implementation by Fred James, with parameters for. - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`. - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;. * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:. - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and. - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;. * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and. * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8383
https://github.com/root-project/root/pull/8385:254,deployability,depend,dependency,254,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:265,deployability,manag,management,265,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:557,deployability,build,build,557,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1090,deployability,depend,dependency,1090,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:265,energy efficiency,manag,management,265,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:254,integrability,depend,dependency,254,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1090,integrability,depend,dependency,1090,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1104,integrability,wrap,wrapped,1104,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:181,modifiability,pac,packages,181,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:254,modifiability,depend,dependency,254,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:878,modifiability,concern,concern,878,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1090,modifiability,depend,dependency,1090,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1175,modifiability,pac,packaged,1175,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:315,performance,parallel,parallelization,315,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:374,performance,parallel,parallelization,374,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:473,performance,parallel,parallelization,473,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:587,performance,time,time,587,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:694,performance,parallel,parallelize,694,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:752,performance,parallel,parallel,752,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:919,performance,parallel,parallelize,919,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:23,safety,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:254,safety,depend,dependency,254,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:265,safety,manag,management,265,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:653,safety,safe,safety,653,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1090,safety,depend,dependency,1090,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1358,safety,review,review,1358,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:23,testability,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:254,testability,depend,dependency,254,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:878,testability,concern,concern,878,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1090,testability,depend,dependency,1090,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8385:1358,testability,review,review,1358,"RooFit::MultiProcess & TestStatistics part 2: ZeroMQ; This PR is the second part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce ~three~ two packages: ~RooFit::MultiProcess,~ RooFitZMQ and a ZeroMQ builtin to ease dependency management. ~RooFit::MultiProcess is a task-based parallelization framework.~. ~It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are _partial derivatives_ -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize.~. Edit: We decided to keep this PR for ZeroMQ only, MultiProcess will come in a next PR. The communication between processes is done using ZeroMQ. The ZeroMQ dependency is wrapped in convenience classes contributed by @roelaaij which here are packaged as RooFitZMQ. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8385
https://github.com/root-project/root/pull/8386:74,usability,close,close,74,"JupyROOT: fixed bug closing the file descriptors; Hello! This is a fix to close the file descriptors for stdout, stderr, and some pipes . capturing stdout and stderr for notebooks. closes #8326.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8386
https://github.com/root-project/root/pull/8386:181,usability,close,closes,181,"JupyROOT: fixed bug closing the file descriptors; Hello! This is a fix to close the file descriptors for stdout, stderr, and some pipes . capturing stdout and stderr for notebooks. closes #8326.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8386
https://github.com/root-project/root/issues/8387:170,deployability,build,building,170,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:426,deployability,contain,contains,426,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:587,deployability,Build,Build,587,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:741,deployability,log,log,741,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:754,deployability,build,build,754,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:767,deployability,contain,contains,767,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1408,deployability,build,builds,1408,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:320,integrability,pub,public,320,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:335,integrability,repositor,repository,335,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:376,integrability,pub,publiccustomeventsaver,376,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:501,integrability,repositor,repository,501,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:971,integrability,pub,publiccustomeventsaver,971,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1329,integrability,Event,EventSaverFlatNtuple,1329,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:181,interoperability,specif,specific,181,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:335,interoperability,repositor,repository,335,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:501,interoperability,repositor,repository,501,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:190,modifiability,pac,package,190,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:288,modifiability,pac,package,288,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:418,modifiability,pac,package,418,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:555,modifiability,pac,package,555,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:907,modifiability,pac,package,907,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:741,safety,log,log,741,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:303,security,access,accessed,303,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:741,security,log,log,741,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:690,testability,simpl,simple,690,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:741,testability,log,log,741,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:577,usability,behavi,behavior,577,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:690,usability,simpl,simple,690,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:697,usability,minim,minimal,697,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/issues/8387:1031,usability,Custom,CustomEventSaver,1031,"Crash during dictionary generation with ROOT 6.24; - [x] Checked for duplicates. ### Describe the bug. We encounter a crash during dictionary creation via rootcling when building a specific package against the [ATLAS offline software -- Athena](https://gitlab.cern.ch/atlas/athena/). The package can be accessed in this public [gitlab repository](https://gitlab.cern.ch/tdado/publiccustomeventsaver). Essentially, the package contains classes which derive from base classes within the Athena software repository, and we need to create dictionary for this package. ### Expected behavior. Build should succeed with dictionary creation. ### To Reproduce. We've been unable trigger this with a simple minimal example. I am attaching instead the log from the build, which contains the crash. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt). The following classes in the package are leading to the crash:. https://gitlab.cern.ch/tdado/publiccustomeventsaver/-/blob/master/HowtoExtendAnalysisTop/CustomEventSaver.h. https://gitlab.cern.ch/atlasphys-top/reco/howtoextendanalysistop/-/blob/master/HowtoExtendAnalysisTop/DynamicKeysEventSaver.h. Both of them derive from base class in athena:. https://gitlab.cern.ch/atlas/athena/-/blob/master/PhysicsAnalysis/TopPhys/xAOD/TopAnalysis/TopAnalysis/EventSaverFlatNtuple.h. ### Setup. <!--. 1. ROOT 6.24. 2. CentOS7. 3. CERN LCG builds, gcc8. -->. [build_log_err.txt](https://github.com/root-project/root/files/6626012/build_log_err.txt).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8387
https://github.com/root-project/root/pull/8388:257,availability,error,error,257,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:341,availability,error,error,341,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:44,integrability,Discover,Discovered,44,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:90,integrability,coupl,couple,90,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:44,interoperability,Discover,Discovered,44,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:90,modifiability,coupl,couple,90,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:257,performance,error,error,257,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:341,performance,error,error,341,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:215,safety,test,test,215,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:257,safety,error,error,257,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:341,safety,error,error,341,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:90,testability,coupl,couple,90,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:215,testability,test,test,215,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:44,usability,Discov,Discovered,44,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:191,usability,support,support,191,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:257,usability,error,error,257,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/pull/8388:341,usability,error,error,341,"[skip-ci] Fix stressGUI and Makefile.win32; Discovered when running `stressGUI`:. - Fix a couple of PATHs in `stressGUI.cxx`. - Fix the compilation of `Aclock`, `Hello`, and `Tetris` and add support for `Win64` in `test/Makefile.win32`. - Fix the following error with `tutorials/gui/Slider3Demo.C`:. ```. tutorials\gui\Slider3Demo.C:198:21: error: call to member function 'SetPosition' is ambiguous. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8388
https://github.com/root-project/root/issues/8389:311,availability,error,error,311,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1930,availability,error,error,1930," 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:2195,availability,error,error,2195,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {. ^. root [1] .q. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:679,deployability,Build,BuildDynamicExprInfo,679,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:760,deployability,build,build,760,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:784,deployability,fail,failed,784,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1339,deployability,version,version,1339,"y element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:2504,deployability,build,builds,2504,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {. ^. root [1] .q. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:2511,deployability,build,build-,2511,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {. ^. root [1] .q. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:2754,deployability,build,builds,2754,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {. ^. root [1] .q. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:2761,deployability,build,build-,2761,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {. ^. root [1] .q. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1339,integrability,version,version,1339,"y element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:2212,interoperability,convers,conversion,2212,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {. ^. root [1] .q. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1339,modifiability,version,version,1339,"y element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:2876,modifiability,paramet,parameter,2876,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {. ^. root [1] .q. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:49,performance,time,time,49,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:311,performance,error,error,311,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1930,performance,error,error,1930," 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:2195,performance,error,error,2195,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {. ^. root [1] .q. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:784,reliability,fail,failed,784,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1385,reliability,doe,does,1385," type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:311,safety,error,error,311,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1930,safety,error,error,1930," 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:2195,safety,error,error,2195,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {. ^. root [1] .q. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:954,security,Team,Team,954,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1556,security,Team,Team,1556,"ot.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpre",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:6,testability,assert,assertion,6,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:721,testability,Assert,Assertion,721,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1263,testability,context,context,1263,"bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:152,usability,behavi,behavior,152,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:311,usability,error,error,311,"cling assertion crash; ### Describe the bug. One time, I made a typo when writing something in the interpreter that made whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rva",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1119,usability,help,help,1119,"whole ROOT crash. ### Expected behavior. A warning is issued instead of crashing. ### To Reproduce. ```. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. root.exe: /opt/root_src/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:764: clang::Expr* cling::EvaluateTSynthesizer::BuildDynamicExprInfo(clang::Expr*, bool): Assertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1721,usability,help,help,1721,"sertion `ExprAddresses && ""Could not build the void* array""' failed. ```. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:1930,usability,error,error,1930," 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicE",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/issues/8389:2195,usability,error,error,2195,"Built for linuxx8664gcc on Jun 09 2021, 21:20:28 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. Not sure why, maybe cause I built in 'debug mode' or it is another version, but I have another computer where it does not crash. ```. root -b. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on Jun 08 2021, 21:53:04 |. | From heads/master@v6-25-01-1189-g1ca221f010 |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ROOT_prompt_0:1:50: error: cannot initialize an array element of type 'void *' with an rvalue of type 'basic_ostream<char, std::char_traits<char> > &(*)(basic_ostream<char, std::char_traits<char> > &)'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~. ROOT_prompt_0:1:20: error: no viable conversion from 'std::basic_ostream<char, std::char_traits<char> >::__ostream_type' (aka 'basic_ostream<char, std::char_traits<char> >') to 'cling::runtime::internal::DynamicExprInfo *'. for(auto& p : pn9) cout << std::bitset<14>(p) << endl;. ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/RuntimeUniverse.h:53:7: note: in instantiation of member function 'cling::runtime::internal::EvaluateT' requested here. int InterpreterGeneratedCodeDiagnosticsMaybeIncorrect;. ^. /home/huesof/builds/build-root_src-Desktop-Debug/etc/cling/Interpreter/DynamicLookupRuntimeUniverse.h:65:44: note: passing argument to parameter 'ExprInfo' here. inline void EvaluateT(DynamicExprInfo* ExprInfo, clang::DeclContext* DC ) {. ^. root [1] .q. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8389
https://github.com/root-project/root/pull/8390:228,availability,state,state,228,"Do not fire any RecursiveRemove calls by accident in TH1::LabelsInflate; LabelsInflate creates a temporary histogram which has its properties copied from the original histogram (via TNamed::Copy -> TObject::Copy), including the state of kMustCleanup. But this temporary histogram is immediately detached from any directory and the deletion of the temporary shouldn't trigger a recursive cleanup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:228,integrability,state,state,228,"Do not fire any RecursiveRemove calls by accident in TH1::LabelsInflate; LabelsInflate creates a temporary histogram which has its properties copied from the original histogram (via TNamed::Copy -> TObject::Copy), including the state of kMustCleanup. But this temporary histogram is immediately detached from any directory and the deletion of the temporary shouldn't trigger a recursive cleanup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8390:41,safety,accid,accident,41,"Do not fire any RecursiveRemove calls by accident in TH1::LabelsInflate; LabelsInflate creates a temporary histogram which has its properties copied from the original histogram (via TNamed::Copy -> TObject::Copy), including the state of kMustCleanup. But this temporary histogram is immediately detached from any directory and the deletion of the temporary shouldn't trigger a recursive cleanup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8390
https://github.com/root-project/root/pull/8391:98,deployability,log,logic,98,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:163,deployability,resourc,resources,163,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:599,deployability,modul,modular,599,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:163,energy efficiency,resourc,resources,163,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:599,integrability,modular,modular,599,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:632,integrability,coupl,couple,632,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:151,interoperability,distribut,distributed,151,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:10,modifiability,Refact,Refactor,10,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:82,modifiability,refact,refactor,82,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:599,modifiability,modul,modular,599,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:632,modifiability,coupl,couple,632,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:878,modifiability,reu,reuse,878,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:10,performance,Refactor,Refactor,10,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:82,performance,refactor,refactor,82,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:163,performance,resourc,resources,163,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:847,performance,Cach,Cache,847,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:959,performance,time,time,959,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:923,reliability,doe,doesn,923,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:98,safety,log,logic,98,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:163,safety,resourc,resources,163,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:599,safety,modul,modular,599,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:98,security,log,logic,98,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:903,security,session,session,903,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:98,testability,log,logic,98,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:163,testability,resourc,resources,163,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:599,testability,modula,modular,599,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:632,testability,coupl,couple,632,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:443,usability,user,user,443,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8391:755,usability,support,support,755,"[WIP][DF] Refactor DistRDF range creation; fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:. 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF. 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions. 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8391
https://github.com/root-project/root/pull/8392:195,integrability,sub,submitted-from-pyroot,195,[PyROOT] Remove setting of -mavx in EXTRA_CLING_ARGS; To prevent adding the flag when ROOT is not built with AVX support. Discussion:. https://root-forum.cern.ch/t/avx-illegal-instruction-in-job-submitted-from-pyroot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8392
https://github.com/root-project/root/pull/8392:57,safety,prevent,prevent,57,[PyROOT] Remove setting of -mavx in EXTRA_CLING_ARGS; To prevent adding the flag when ROOT is not built with AVX support. Discussion:. https://root-forum.cern.ch/t/avx-illegal-instruction-in-job-submitted-from-pyroot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8392
https://github.com/root-project/root/pull/8392:57,security,preven,prevent,57,[PyROOT] Remove setting of -mavx in EXTRA_CLING_ARGS; To prevent adding the flag when ROOT is not built with AVX support. Discussion:. https://root-forum.cern.ch/t/avx-illegal-instruction-in-job-submitted-from-pyroot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8392
https://github.com/root-project/root/pull/8392:113,usability,support,support,113,[PyROOT] Remove setting of -mavx in EXTRA_CLING_ARGS; To prevent adding the flag when ROOT is not built with AVX support. Discussion:. https://root-forum.cern.ch/t/avx-illegal-instruction-in-job-submitted-from-pyroot,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8392
https://github.com/root-project/root/pull/8393:75,availability,failur,failures,75,"[DF] Add RDisplay to LinkDef; To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8393:111,availability,servic,services,111,"[DF] Add RDisplay to LinkDef; To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8393:75,deployability,fail,failures,75,"[DF] Add RDisplay to LinkDef; To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8393:111,deployability,servic,services,111,"[DF] Add RDisplay to LinkDef; To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8393:111,integrability,servic,services,111,"[DF] Add RDisplay to LinkDef; To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8393:111,modifiability,servic,services,111,"[DF] Add RDisplay to LinkDef; To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8393:75,performance,failur,failures,75,"[DF] Add RDisplay to LinkDef; To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8393:75,reliability,fail,failures,75,"[DF] Add RDisplay to LinkDef; To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8393:238,safety,test,testReport,238,"[DF] Add RDisplay to LinkDef; To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8393:238,testability,test,testReport,238,"[DF] Add RDisplay to LinkDef; To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8393:33,usability,help,help,33,"[DF] Add RDisplay to LinkDef; To help cling autoloading. Should fix [these failures in Jenkins](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2889/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/testReport/junit/projectroot/runtutorials/tutorial_dataframe_df024_Display/).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8393
https://github.com/root-project/root/pull/8395:49,performance,time,times,49,[DF] Throw if the same column is passed multiple times to Snapshot;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8395
https://github.com/root-project/root/pull/8397:506,deployability,updat,updating,506,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:208,integrability,sub,subclass,208,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:289,integrability,sub,subclass,289,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:387,integrability,sub,subclasses,387,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:462,integrability,sub,subclass,462,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:549,integrability,sub,subclasses,549,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:97,modifiability,exten,extends,97,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:275,modifiability,exten,extended,275,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:33,performance,perform,performance,33,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:162,performance,perform,performance,162,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:506,safety,updat,updating,506,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:506,security,updat,updating,506,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:33,usability,perform,performance,33,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:162,usability,perform,performance,162,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8397:700,usability,Close,Closes,700,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`; This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8397
https://github.com/root-project/root/pull/8398:191,interoperability,bind,binds,191,[DF] Fix gcc 11 warning (v6.24); ../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop. variable ‘col’ of type ‘const string&’ {aka ‘const. std::__cxx11::basic_string<char>&’} binds to a temporary constructed. from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8398
https://github.com/root-project/root/pull/8398:103,modifiability,variab,variable,103,[DF] Fix gcc 11 warning (v6.24); ../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop. variable ‘col’ of type ‘const string&’ {aka ‘const. std::__cxx11::basic_string<char>&’} binds to a temporary constructed. from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8398
https://github.com/root-project/root/pull/8398:191,modifiability,bind,binds,191,[DF] Fix gcc 11 warning (v6.24); ../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop. variable ‘col’ of type ‘const string&’ {aka ‘const. std::__cxx11::basic_string<char>&’} binds to a temporary constructed. from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8398
https://github.com/root-project/root/pull/8398:51,safety,test,test,51,[DF] Fix gcc 11 warning (v6.24); ../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop. variable ‘col’ of type ‘const string&’ {aka ‘const. std::__cxx11::basic_string<char>&’} binds to a temporary constructed. from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8398
https://github.com/root-project/root/pull/8398:365,safety,test,test,365,[DF] Fix gcc 11 warning (v6.24); ../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop. variable ‘col’ of type ‘const string&’ {aka ‘const. std::__cxx11::basic_string<char>&’} binds to a temporary constructed. from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8398
https://github.com/root-project/root/pull/8398:51,testability,test,test,51,[DF] Fix gcc 11 warning (v6.24); ../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop. variable ‘col’ of type ‘const string&’ {aka ‘const. std::__cxx11::basic_string<char>&’} binds to a temporary constructed. from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8398
https://github.com/root-project/root/pull/8398:365,testability,test,test,365,[DF] Fix gcc 11 warning (v6.24); ../tree/dataframe/test/dataframe_interface.cxx:451:28: warning: loop. variable ‘col’ of type ‘const string&’ {aka ‘const. std::__cxx11::basic_string<char>&’} binds to a temporary constructed. from type ‘const char* const’ [-Wrange-loop-construct]. I decided to backport this one because it's fixing a real use-after-delete bug in a test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8398
https://github.com/root-project/root/pull/8401:56,safety,test,test,56,[DF] Use ROOT_GENERATE_DICTIONARY properly in dataframe/test; As per the discussion at. https://github.com/root-project/root/issues/8308 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8401
https://github.com/root-project/root/pull/8401:56,testability,test,test,56,[DF] Use ROOT_GENERATE_DICTIONARY properly in dataframe/test; As per the discussion at. https://github.com/root-project/root/issues/8308 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8401
https://github.com/root-project/root/pull/8402:452,deployability,contain,contain,452,"[ntuple] DAOS object class customization (1/2): refactor `RDaosXxx` classes; The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions. Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:329,interoperability,convers,conversion,329,"[ntuple] DAOS object class customization (1/2): refactor `RDaosXxx` classes; The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions. Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:48,modifiability,refact,refactor,48,"[ntuple] DAOS object class customization (1/2): refactor `RDaosXxx` classes; The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions. Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:193,modifiability,required chang,required changes,193,"[ntuple] DAOS object class customization (1/2): refactor `RDaosXxx` classes; The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions. Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:259,modifiability,exten,extended,259,"[ntuple] DAOS object class customization (1/2): refactor `RDaosXxx` classes; The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions. Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:48,performance,refactor,refactor,48,"[ntuple] DAOS object class customization (1/2): refactor `RDaosXxx` classes; The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions. Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:484,safety,test,testing,484,"[ntuple] DAOS object class customization (1/2): refactor `RDaosXxx` classes; The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions. Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:484,testability,test,testing,484,"[ntuple] DAOS object class customization (1/2): refactor `RDaosXxx` classes; The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions. Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:27,usability,custom,customization,27,"[ntuple] DAOS object class customization (1/2): refactor `RDaosXxx` classes; The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions. Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:131,usability,user,users,131,"[ntuple] DAOS object class customization (1/2): refactor `RDaosXxx` classes; The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions. Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8402:140,usability,custom,customize,140,"[ntuple] DAOS object class customization (1/2): refactor `RDaosXxx` classes; The first in the series of two pull-requests to allow users to customize the DAOS object class. This PR applies the required changes to the `RDaosXxx` classes. Also, libdaos_mock is extended to provide an implementation for the object class name to ID conversion functions. Finally, unneeded `OC_xxx` constants were stripped from libdaos_mock/daos.h; this header should only contain declarations needed for testing. Related to issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8402
https://github.com/root-project/root/pull/8404:192,deployability,contain,contained,192,"[ntuple][doc] Start adding RNTupleReader doc examples; Adds some `RNTupleReader` usage examples. I think a nice goal is that every method has at least one example. Each example should be self-contained and easily copy-pastable for users to tweak as required. Doc example structure:. ```cpp. ~~~ {.cpp}. #include <ROOT/RNTuple.hxx> // all required ROOT headers are included. using ROOT::Experimental::RNTupleReader; // using decls to make the code more readable. #include <iostream> // any other headers. // int main () { implied. auto ntuple = RNTupleReader::Open(""myNTuple"", ""some/file.root"");. std::cout << ""myNTuple has "" << ntuple->GetNEntries() << "" entries\n"";. // } implied. ~~~. ```. To make sure the examples compile and work, I have been writing each in a test repo: https://github.com/mxxo/rntuple-doctests before adding them to the right location. Rendered examples: . ![image](https://user-images.githubusercontent.com/40000585/121554761-6c31ea80-c9e0-11eb-8540-ab35724d9de3.png). ![image](https://user-images.githubusercontent.com/40000585/121554975-9683a800-c9e0-11eb-8e9a-5320b814bbde.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8404
https://github.com/root-project/root/pull/8404:766,safety,test,test,766,"[ntuple][doc] Start adding RNTupleReader doc examples; Adds some `RNTupleReader` usage examples. I think a nice goal is that every method has at least one example. Each example should be self-contained and easily copy-pastable for users to tweak as required. Doc example structure:. ```cpp. ~~~ {.cpp}. #include <ROOT/RNTuple.hxx> // all required ROOT headers are included. using ROOT::Experimental::RNTupleReader; // using decls to make the code more readable. #include <iostream> // any other headers. // int main () { implied. auto ntuple = RNTupleReader::Open(""myNTuple"", ""some/file.root"");. std::cout << ""myNTuple has "" << ntuple->GetNEntries() << "" entries\n"";. // } implied. ~~~. ```. To make sure the examples compile and work, I have been writing each in a test repo: https://github.com/mxxo/rntuple-doctests before adding them to the right location. Rendered examples: . ![image](https://user-images.githubusercontent.com/40000585/121554761-6c31ea80-c9e0-11eb-8540-ab35724d9de3.png). ![image](https://user-images.githubusercontent.com/40000585/121554975-9683a800-c9e0-11eb-8e9a-5320b814bbde.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8404
https://github.com/root-project/root/pull/8404:766,testability,test,test,766,"[ntuple][doc] Start adding RNTupleReader doc examples; Adds some `RNTupleReader` usage examples. I think a nice goal is that every method has at least one example. Each example should be self-contained and easily copy-pastable for users to tweak as required. Doc example structure:. ```cpp. ~~~ {.cpp}. #include <ROOT/RNTuple.hxx> // all required ROOT headers are included. using ROOT::Experimental::RNTupleReader; // using decls to make the code more readable. #include <iostream> // any other headers. // int main () { implied. auto ntuple = RNTupleReader::Open(""myNTuple"", ""some/file.root"");. std::cout << ""myNTuple has "" << ntuple->GetNEntries() << "" entries\n"";. // } implied. ~~~. ```. To make sure the examples compile and work, I have been writing each in a test repo: https://github.com/mxxo/rntuple-doctests before adding them to the right location. Rendered examples: . ![image](https://user-images.githubusercontent.com/40000585/121554761-6c31ea80-c9e0-11eb-8540-ab35724d9de3.png). ![image](https://user-images.githubusercontent.com/40000585/121554975-9683a800-c9e0-11eb-8e9a-5320b814bbde.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8404
https://github.com/root-project/root/pull/8404:231,usability,user,users,231,"[ntuple][doc] Start adding RNTupleReader doc examples; Adds some `RNTupleReader` usage examples. I think a nice goal is that every method has at least one example. Each example should be self-contained and easily copy-pastable for users to tweak as required. Doc example structure:. ```cpp. ~~~ {.cpp}. #include <ROOT/RNTuple.hxx> // all required ROOT headers are included. using ROOT::Experimental::RNTupleReader; // using decls to make the code more readable. #include <iostream> // any other headers. // int main () { implied. auto ntuple = RNTupleReader::Open(""myNTuple"", ""some/file.root"");. std::cout << ""myNTuple has "" << ntuple->GetNEntries() << "" entries\n"";. // } implied. ~~~. ```. To make sure the examples compile and work, I have been writing each in a test repo: https://github.com/mxxo/rntuple-doctests before adding them to the right location. Rendered examples: . ![image](https://user-images.githubusercontent.com/40000585/121554761-6c31ea80-c9e0-11eb-8540-ab35724d9de3.png). ![image](https://user-images.githubusercontent.com/40000585/121554975-9683a800-c9e0-11eb-8e9a-5320b814bbde.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8404
https://github.com/root-project/root/pull/8404:898,usability,user,user-images,898,"[ntuple][doc] Start adding RNTupleReader doc examples; Adds some `RNTupleReader` usage examples. I think a nice goal is that every method has at least one example. Each example should be self-contained and easily copy-pastable for users to tweak as required. Doc example structure:. ```cpp. ~~~ {.cpp}. #include <ROOT/RNTuple.hxx> // all required ROOT headers are included. using ROOT::Experimental::RNTupleReader; // using decls to make the code more readable. #include <iostream> // any other headers. // int main () { implied. auto ntuple = RNTupleReader::Open(""myNTuple"", ""some/file.root"");. std::cout << ""myNTuple has "" << ntuple->GetNEntries() << "" entries\n"";. // } implied. ~~~. ```. To make sure the examples compile and work, I have been writing each in a test repo: https://github.com/mxxo/rntuple-doctests before adding them to the right location. Rendered examples: . ![image](https://user-images.githubusercontent.com/40000585/121554761-6c31ea80-c9e0-11eb-8540-ab35724d9de3.png). ![image](https://user-images.githubusercontent.com/40000585/121554975-9683a800-c9e0-11eb-8e9a-5320b814bbde.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8404
https://github.com/root-project/root/pull/8404:1011,usability,user,user-images,1011,"[ntuple][doc] Start adding RNTupleReader doc examples; Adds some `RNTupleReader` usage examples. I think a nice goal is that every method has at least one example. Each example should be self-contained and easily copy-pastable for users to tweak as required. Doc example structure:. ```cpp. ~~~ {.cpp}. #include <ROOT/RNTuple.hxx> // all required ROOT headers are included. using ROOT::Experimental::RNTupleReader; // using decls to make the code more readable. #include <iostream> // any other headers. // int main () { implied. auto ntuple = RNTupleReader::Open(""myNTuple"", ""some/file.root"");. std::cout << ""myNTuple has "" << ntuple->GetNEntries() << "" entries\n"";. // } implied. ~~~. ```. To make sure the examples compile and work, I have been writing each in a test repo: https://github.com/mxxo/rntuple-doctests before adding them to the right location. Rendered examples: . ![image](https://user-images.githubusercontent.com/40000585/121554761-6c31ea80-c9e0-11eb-8540-ab35724d9de3.png). ![image](https://user-images.githubusercontent.com/40000585/121554975-9683a800-c9e0-11eb-8e9a-5320b814bbde.png).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8404
https://github.com/root-project/root/pull/8405:1,reliability,rca,rcanvas,1,[rcanvas] improve TObjectDrawable; Let use RDrawable attributes to overwrite some basic properties like line attributes or fill attributes. Let use CSS styling for such attributes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8405
https://github.com/root-project/root/pull/8406:25,availability,Sli,Slice,25,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:95,availability,sli,slice,95,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:182,availability,Sli,Slice,182,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:548,availability,error,error,548,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:548,performance,error,error,548,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:25,reliability,Sli,Slice,25,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:95,reliability,sli,slice,95,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:182,reliability,Sli,Slice,182,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:548,safety,error,error,548,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:188,usability,command,command,188,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:390,usability,command,command,390,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:431,usability,help,help,431,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8406:548,usability,error,error,548,"[RF] Add overload of the Slice argument that takes map of categories; Before, if one wanted to slice over mulitple categories in. `RooAbsReal::plotOn`, one had to repeatedly use the Slice command. argument. This is problematic for the keyword pythonizations in pyROOT,. because keyword arguments in python can't be repeated. With this change, it is also not necessary anymore to repeat any command. arguements in RooFit. This will help to solve Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784), as. we can just always throw an error (or issue a warning) if a RooCmdArg is repeated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8406
https://github.com/root-project/root/pull/8407:729,availability,error,error,729,"Fix compilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<Ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:387,interoperability,Prox,Proxied,387,"Fix compilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<Ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:1545,interoperability,Prox,Proxied,1545,"elper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, Others ...) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Others = {std::shared_ptr<CounterHelper>, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>}; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void]. CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &, Others...). ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:2218,interoperability,Prox,Proxied,2218,"elper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, Others ...) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Others = {std::shared_ptr<CounterHelper>, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>}; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void]. CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &, Others...). ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:729,performance,error,error,729,"Fix compilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<Ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:617,safety,test,test,617,"Fix compilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<Ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:729,safety,error,error,729,"Fix compilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<Ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:617,testability,test,test,617,"Fix compilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<Ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:206,usability,Help,Helper,206,"Fix compilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<Ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:258,usability,Help,Helper,258,"Fix compilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<Ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:363,usability,Help,Helper,363,"Fix compilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<Ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:458,usability,Help,Helper,458,"Fix compilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<Ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:729,usability,error,error,729,"Fix compilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<Ac",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:1002,usability,Help,Helper,1002,"ompilation on RHEL/CentOS 7 with gcc 4.8.5; gcc 4.8.5 says the template overload is ambiguous:. ```. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx: In instantiation of 'ROOT::RDF::RResultPtr<typename Helper::Result_t> ROOT::RDF::RInterface<T, V>::Book(Helper&&, const ColumnNames_t&) [with FirstColumn = ROOT::Detail::RDF::RInferredType; OtherColumns = {}; Helper = CounterHelper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:1468,usability,Help,Helper,1468,"elper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, Others ...) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Others = {std::shared_ptr<CounterHelper>, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>}; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void]. CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &, Others...). ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8407:2036,usability,Help,Helper,2036,"elper; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; typename Helper::Result_t = std::__atomic_base<unsigned int>; ROOT::RDF::RInterface<T, V>::ColumnNames_t = std::vector<std::basic_string<char> >]':. .../tree/dataframe/test/dataframe_interface.cxx:765:4: required from here. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: error: call of overloaded 'CallCreateActionWithoutColsIfPossible(std::shared_ptr<std::__atomic_base<unsigned int> >&, std::shared_ptr<CounterHelper>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>)' is ambiguous. return CallCreateActionWithoutColsIfPossible<Helper>(resPtr, hPtr, TTraits::TypeList<FirstColumn>{});. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2430:54: note: candidates are:. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2738:9: note: decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, const std::shared_ptr<_Tp1>&, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; decltype ((hPtr->.Exec(0u), ROOT::RDF::RResultPtr<T2>{})) = ROOT::RDF::RResultPtr<std::__atomic_base<unsigned int> >]. auto CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &resPtr,. ^. .../tree/dataframe/inc/ROOT/RDF/RInterface.hxx:2748:4: note: ROOT::RDF::RResultPtr<T2> ROOT::RDF::RInterface<T, V>::CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType>&, Others ...) [with Helper = CounterHelper; ActionResultType = std::__atomic_base<unsigned int>; Others = {std::shared_ptr<CounterHelper>, ROOT::TypeTraits::TypeList<ROOT::Detail::RDF::RInferredType>}; Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void]. CallCreateActionWithoutColsIfPossible(const std::shared_ptr<ActionResultType> &, Others...). ^. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8407
https://github.com/root-project/root/pull/8408:49,modifiability,inherit,inherit,49,[DF] Allow using RDF Fill with types that do not inherit from TH1; This fixes ROOT-9737 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8408
https://github.com/root-project/root/pull/8409:62,interoperability,format,formatt,62,[graf3d] Port to Win64 (replace Long_t by Longptr_t + pointer formatt…; …ing),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8409
https://github.com/root-project/root/pull/8410:60,interoperability,format,formatting,60,[math] Port to Win64 (replace Long_t by Longptr_t + pointer formatting;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8410
https://github.com/root-project/root/pull/8411:81,energy efficiency,adapt,adapt,81,"Change the documentation of TQObject [skip-ci]; Following the changes for Win64, adapt the example in the documentation to use the proper `Longptr_t` type. Thanks @Sergey Linev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8411
https://github.com/root-project/root/pull/8411:81,integrability,adapt,adapt,81,"Change the documentation of TQObject [skip-ci]; Following the changes for Win64, adapt the example in the documentation to use the proper `Longptr_t` type. Thanks @Sergey Linev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8411
https://github.com/root-project/root/pull/8411:81,interoperability,adapt,adapt,81,"Change the documentation of TQObject [skip-ci]; Following the changes for Win64, adapt the example in the documentation to use the proper `Longptr_t` type. Thanks @Sergey Linev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8411
https://github.com/root-project/root/pull/8411:81,modifiability,adapt,adapt,81,"Change the documentation of TQObject [skip-ci]; Following the changes for Win64, adapt the example in the documentation to use the proper `Longptr_t` type. Thanks @Sergey Linev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8411
https://github.com/root-project/root/pull/8411:11,usability,document,documentation,11,"Change the documentation of TQObject [skip-ci]; Following the changes for Win64, adapt the example in the documentation to use the proper `Longptr_t` type. Thanks @Sergey Linev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8411
https://github.com/root-project/root/pull/8411:106,usability,document,documentation,106,"Change the documentation of TQObject [skip-ci]; Following the changes for Win64, adapt the example in the documentation to use the proper `Longptr_t` type. Thanks @Sergey Linev",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8411
https://github.com/root-project/root/pull/8412:551,deployability,build,build,551,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:1278,deployability,fail,fails,1278,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:1298,deployability,updat,updated,1298,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:200,modifiability,pac,package,200,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:870,modifiability,concern,concern,870,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:246,performance,parallel,parallelization,246,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:293,performance,parallel,parallelize,293,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:368,performance,parallel,parallelization,368,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:467,performance,parallel,parallelization,467,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:581,performance,time,time,581,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:688,performance,parallel,parallelize,688,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:746,performance,parallel,parallel,746,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:911,performance,parallel,parallelize,911,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:1278,reliability,fail,fails,1278,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:23,safety,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:647,safety,safe,safety,647,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:1298,safety,updat,updated,1298,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:1385,safety,review,review,1385,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:982,security,access,accessed,982,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:1298,security,updat,updated,1298,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:23,testability,Test,TestStatistics,23,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:870,testability,concern,concern,870,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8412:1385,testability,review,review,1385,"RooFit::MultiProcess & TestStatistics part 2b: MultiProcess; This PR is the third part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, we introduce the RooFit::MultiProcess package. RooFit::MultiProcess is a task-based parallelization framework that will be used to parallelize gradients in RooFit/Minuit2 fits. It uses forked processes for parallelization, as opposed to threads. We chose this approach because A) the existing RooRealMPFE parallelization framework already made use of forks as well, so we had something to build on and B) it was at the time deemed infeasible to check the entire RooFit code for thread-safety. Moreover, we use MultiProcess to parallelize gradients -- i.e. the tasks to be executed in parallel are partial derivatives -- and these are sufficiently large tasks that communication in between tasks is not a big concern in the big fits that we aimed to parallelize. The communication between processes is done using ZeroMQ, accessed through convenience functions in RooFitZMQ introduced in #8385. Notes:. - This PR branch is forked off of the branch in #8385, so until that is merged first, I may do some rebasing in this branch, so please be aware of that if you want to check this branch out locally. - test_Job still fails, it has to be updated to the latest communication framework. With that in mind, this PR is ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8412
https://github.com/root-project/root/pull/8413:93,interoperability,format,formatting,93,[RF] Pythonized RooFit Tutorial files; PR for pythonization of RooSimultaneous::plotOn() and formatting of tutorial files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8413
https://github.com/root-project/root/pull/8414:87,availability,error,error,87,"[ntuple,c++20] Add explicit constructor in `RSealedPage`; fixes -std=c++20 compilation error; C++20 does not allow aggregate initialization, i.e. `{ ... }`, if a struct/class. has explicitly defaulted or deleted constructors. This fixes the following. compilation error:. ```. cannot convert ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RPageStorage::RSealedPage&’. 411 | pageBuffer = UnsealPage({sealedPageBuffer, bytesOnStorage, pageInfo.fNElements}, *element);. | ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8414
https://github.com/root-project/root/pull/8414:264,availability,error,error,264,"[ntuple,c++20] Add explicit constructor in `RSealedPage`; fixes -std=c++20 compilation error; C++20 does not allow aggregate initialization, i.e. `{ ... }`, if a struct/class. has explicitly defaulted or deleted constructors. This fixes the following. compilation error:. ```. cannot convert ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RPageStorage::RSealedPage&’. 411 | pageBuffer = UnsealPage({sealedPageBuffer, bytesOnStorage, pageInfo.fNElements}, *element);. | ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8414
https://github.com/root-project/root/pull/8414:87,performance,error,error,87,"[ntuple,c++20] Add explicit constructor in `RSealedPage`; fixes -std=c++20 compilation error; C++20 does not allow aggregate initialization, i.e. `{ ... }`, if a struct/class. has explicitly defaulted or deleted constructors. This fixes the following. compilation error:. ```. cannot convert ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RPageStorage::RSealedPage&’. 411 | pageBuffer = UnsealPage({sealedPageBuffer, bytesOnStorage, pageInfo.fNElements}, *element);. | ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8414
https://github.com/root-project/root/pull/8414:264,performance,error,error,264,"[ntuple,c++20] Add explicit constructor in `RSealedPage`; fixes -std=c++20 compilation error; C++20 does not allow aggregate initialization, i.e. `{ ... }`, if a struct/class. has explicitly defaulted or deleted constructors. This fixes the following. compilation error:. ```. cannot convert ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RPageStorage::RSealedPage&’. 411 | pageBuffer = UnsealPage({sealedPageBuffer, bytesOnStorage, pageInfo.fNElements}, *element);. | ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8414
https://github.com/root-project/root/pull/8414:100,reliability,doe,does,100,"[ntuple,c++20] Add explicit constructor in `RSealedPage`; fixes -std=c++20 compilation error; C++20 does not allow aggregate initialization, i.e. `{ ... }`, if a struct/class. has explicitly defaulted or deleted constructors. This fixes the following. compilation error:. ```. cannot convert ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RPageStorage::RSealedPage&’. 411 | pageBuffer = UnsealPage({sealedPageBuffer, bytesOnStorage, pageInfo.fNElements}, *element);. | ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8414
https://github.com/root-project/root/pull/8414:87,safety,error,error,87,"[ntuple,c++20] Add explicit constructor in `RSealedPage`; fixes -std=c++20 compilation error; C++20 does not allow aggregate initialization, i.e. `{ ... }`, if a struct/class. has explicitly defaulted or deleted constructors. This fixes the following. compilation error:. ```. cannot convert ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RPageStorage::RSealedPage&’. 411 | pageBuffer = UnsealPage({sealedPageBuffer, bytesOnStorage, pageInfo.fNElements}, *element);. | ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8414
https://github.com/root-project/root/pull/8414:264,safety,error,error,264,"[ntuple,c++20] Add explicit constructor in `RSealedPage`; fixes -std=c++20 compilation error; C++20 does not allow aggregate initialization, i.e. `{ ... }`, if a struct/class. has explicitly defaulted or deleted constructors. This fixes the following. compilation error:. ```. cannot convert ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RPageStorage::RSealedPage&’. 411 | pageBuffer = UnsealPage({sealedPageBuffer, bytesOnStorage, pageInfo.fNElements}, *element);. | ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8414
https://github.com/root-project/root/pull/8414:87,usability,error,error,87,"[ntuple,c++20] Add explicit constructor in `RSealedPage`; fixes -std=c++20 compilation error; C++20 does not allow aggregate initialization, i.e. `{ ... }`, if a struct/class. has explicitly defaulted or deleted constructors. This fixes the following. compilation error:. ```. cannot convert ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RPageStorage::RSealedPage&’. 411 | pageBuffer = UnsealPage({sealedPageBuffer, bytesOnStorage, pageInfo.fNElements}, *element);. | ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8414
https://github.com/root-project/root/pull/8414:264,usability,error,error,264,"[ntuple,c++20] Add explicit constructor in `RSealedPage`; fixes -std=c++20 compilation error; C++20 does not allow aggregate initialization, i.e. `{ ... }`, if a struct/class. has explicitly defaulted or deleted constructors. This fixes the following. compilation error:. ```. cannot convert ‘<brace-enclosed initializer list>’ to ‘const ROOT::Experimental::Detail::RPageStorage::RSealedPage&’. 411 | pageBuffer = UnsealPage({sealedPageBuffer, bytesOnStorage, pageInfo.fNElements}, *element);. | ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8414
https://github.com/root-project/root/pull/8416:593,availability,failur,failures,593,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:230,deployability,fail,failed,230,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:257,deployability,version,versions,257,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:498,deployability,observ,observables,498,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:593,deployability,fail,failures,593,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:609,energy efficiency,current,current,609,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:257,integrability,version,versions,257,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:257,modifiability,version,versions,257,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:664,modifiability,reu,reuse,664,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:407,performance,time,time,407,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:593,performance,failur,failures,593,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:230,reliability,fail,failed,230,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:593,reliability,fail,failures,593,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:1150,safety,detect,detected,1150,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:435,security,sign,signature,435,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:1150,security,detect,detected,1150,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:498,testability,observ,observables,498,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8416:213,usability,command,command,213,"[RF] Make ConditionalObservables accept RooRealVars directly; Make ConditionalObservables accept RooRealVars directly by perfect forwarding all arguments to the RooArgSet constructor. Using ConditionalObservables command argument failed with some Python 3. versions due to ownership problems with the RooArgSet. This commit suggests to always make a copy of (or move) the passed RooArgSet,. and at the same time to change the function signature such that. it can also accept an arbitrary number of observables directly via. variadic templates. This change is to fix the RooFit python tutorial failures in the current nightlies. Note, @Harshalzzzzzzz, that you can reuse this pattern also for the other RooGlobalFuncs, as it also makes calling them more pythonic. For example, with ConditionalObservables, you can now use a tuple (or list) of arguments:. ```Python. effPdf.fitTo(data, ConditionalObservables=(x, y)). ```. instead of:. ```Python. effPdf.fitTo(data, ConditionalObservables=ROOT.RooArgSet(x, y)). ```. although the latter syntax still works because it will use the RooArgSet copy constructor (or move constructor if it's a temporary and detected as such in Python). So we don't break any existing code. This example is from the [rf702_efficiencyfit_2D.py](https://github.com/root-project/root/blob/master/tutorials/roofit/rf702_efficiencyfit_2D.py) tutorial.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8416
https://github.com/root-project/root/pull/8417:46,availability,failur,failures,46,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:520,availability,Error,Error,520,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:625,availability,error,error,625,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1100,availability,Error,Error,1100,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1205,availability,error,error,1205,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1677,availability,Error,Error,1677,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1782,availability,error,error,1782,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:46,deployability,fail,failures,46,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:159,deployability,Fail,Failed,159,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:188,deployability,build,builddir,188,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:197,deployability,build,build,197,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:203,deployability,BUILD,BUILD,203,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:530,deployability,build,builddir,530,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:539,deployability,build,build,539,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:545,deployability,BUILD,BUILD,545,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:734,deployability,Fail,Failed,734,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:763,deployability,build,builddir,763,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:772,deployability,build,build,772,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:778,deployability,BUILD,BUILD,778,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1110,deployability,build,builddir,1110,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1119,deployability,build,build,1119,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1125,deployability,BUILD,BUILD,1125,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1314,deployability,Fail,Failed,1314,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1344,deployability,build,builddir,1344,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1353,deployability,build,build,1353,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1359,deployability,BUILD,BUILD,1359,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1687,deployability,build,builddir,1687,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1696,deployability,build,build,1696,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1702,deployability,BUILD,BUILD,1702,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:475,energy efficiency,load,load,475,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1055,energy efficiency,load,load,1055,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1632,energy efficiency,load,load,1632,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:362,integrability,interfac,interface,362,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:614,integrability,messag,message,614,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:942,integrability,interfac,interface,942,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1194,integrability,messag,message,1194,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1519,integrability,interfac,interface,1519,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1771,integrability,messag,message,1771,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:362,interoperability,interfac,interface,362,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:498,interoperability,share,shared,498,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:614,interoperability,messag,message,614,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:942,interoperability,interfac,interface,942,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1078,interoperability,share,shared,1078,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1194,interoperability,messag,message,1194,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1519,interoperability,interfac,interface,1519,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1655,interoperability,share,shared,1655,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1771,interoperability,messag,message,1771,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:362,modifiability,interfac,interface,362,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:942,modifiability,interfac,interface,942,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1519,modifiability,interfac,interface,1519,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:46,performance,failur,failures,46,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:475,performance,load,load,475,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:520,performance,Error,Error,520,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:625,performance,error,error,625,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1055,performance,load,load,1055,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1100,performance,Error,Error,1100,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1205,performance,error,error,1205,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1632,performance,load,load,1632,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1677,performance,Error,Error,1677,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1782,performance,error,error,1782,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:46,reliability,fail,failures,46,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:159,reliability,Fail,Failed,159,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:734,reliability,Fail,Failed,734,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1314,reliability,Fail,Failed,1314,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:41,safety,test,test,41,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:76,safety,Test,Test,76,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:520,safety,Error,Error,520,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:625,safety,error,error,625,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:650,safety,Test,Test,650,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1100,safety,Error,Error,1100,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1205,safety,error,error,1205,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1230,safety,Test,Test,1230,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1677,safety,Error,Error,1677,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1782,safety,error,error,1782,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:41,testability,test,test,41,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:76,testability,Test,Test,76,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:650,testability,Test,Test,650,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1230,testability,Test,Test,1230,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:520,usability,Error,Error,520,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:625,usability,error,error,625,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1100,usability,Error,Error,1100,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1205,usability,error,error,1205,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1677,usability,Error,Error,1677,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/pull/8417:1782,usability,error,error,1782,Add namespace to LinkDef; This addresses test failures like:. ```. 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec. Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx... IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::Experimental::HistLog(). Maybe you need to load the corresponding shared library? CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):. error code: 1. ```.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8417
https://github.com/root-project/root/issues/8418:30,availability,error,error,30,"root ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:977,availability,error,error,977,"root ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1151,availability,error,error,1151,"issue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1331,availability,error,error,1331,"port, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/che",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1507,availability,error,error,1507,". {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1677,availability,error,error,1677,"root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1847,availability,error,error,1847,"ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2023,availability,error,error,2023,"mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2201,availability,error,error,2201,"espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2295,availability,Error,Error,2295,"n/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally somethin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3058,deployability,fail,failed,3058,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3407,deployability,build,build,3407,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3468,deployability,version,version,3468,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3509,deployability,instal,install,3509,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3468,integrability,version,version,3468,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:760,interoperability,share,shared,760,"root ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3468,modifiability,version,version,3468,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:30,performance,error,error,30,"root ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:977,performance,error,error,977,"root ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1151,performance,error,error,1151,"issue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1331,performance,error,error,1331,"port, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/che",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1507,performance,error,error,1507,". {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1677,performance,error,error,1677,"root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1847,performance,error,error,1847,"ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2023,performance,error,error,2023,"mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2201,performance,error,error,2201,"espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2295,performance,Error,Error,2295,"n/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally somethin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3572,performance,time,time,3572,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3058,reliability,fail,failed,3058,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:30,safety,error,error,30,"root ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:977,safety,error,error,977,"root ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1151,safety,error,error,1151,"issue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1331,safety,error,error,1331,"port, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/che",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1507,safety,error,error,1507,". {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1677,safety,error,error,1677,"root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1847,safety,error,error,1847,"ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2023,safety,error,error,2023,"mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2201,safety,error,error,2201,"espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2295,safety,Error,Error,2295,"n/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally somethin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3361,safety,input,input,3361,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1001,security,sign,signbit,1001,"ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c+",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1043,security,sign,signbit,1043,"cked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named '",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3533,testability,context,context,3533,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:30,usability,error,error,30,"root ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:776,usability,User,Users,776,"root ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:885,usability,User,Users,885,"root ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:977,usability,error,error,977,"root ACLiC compile with cmath error.; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1059,usability,User,Users,1059,"ates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1151,usability,error,error,1151,"issue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1239,usability,User,Users,1239,"sting reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1331,usability,error,error,1331,"port, for instance ""issue still exists in today's master"". -->. ### Describe the bug. scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/che",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1415,usability,User,Users,1415,". scripts `aa1.cpp`. #include <cmath>. #include <iostream>. using namespace std;. void aa1(). {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1507,usability,error,error,1507,". {. cout<<""as""<<endl;. }. on Mac OS X 10.15. running with . `root aa1.cpp` OK. . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1585,usability,User,Users,1585,". . `g++ aa1.cpp 'root-config --libs --cflags' ` OK. . but . `root aa1.cpp+` not OK. . ```. root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1677,usability,error,error,1677,"root[000000]:>. Processing aa1.cpp+... Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/so",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1755,usability,User,Users,1755,"g shared library /Users/chenxu/tmp/./aa1_cpp.so. In file included from input_line_9:6:. In file included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1847,usability,error,error,1847,"ile included from ././aa1.cpp:1:. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:1931,usability,User,Users,1931,"TGEANT4/bin/../include/c++/v1/cmath:321:9: error: no member named 'signbit' in the global namespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Develo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2023,usability,error,error,2023,"mespace. using ::signbit;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenx",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2109,usability,User,Users,2109,"NT4/bin/../include/c++/v1/cmath:322:9: error: no member named 'fpclassify' in the global namespace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2201,usability,error,error,2201,"espace. using ::fpclassify;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to re",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2295,usability,Error,Error,2295,"n/../include/c++/v1/cmath:323:9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally somethin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2325,usability,User,Users,2325,"9: error: no member named 'isfinite' in the global namespace. using ::isfinite;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2420,usability,User,Users,2420,"enxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2461,usability,User,Users,2461,"TGEANT4/bin/../include/c++/v1/cmath:324:9: error: no member named 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2525,usability,User,Users,2525,"d 'isinf' in the global namespace. using ::isinf;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2592,usability,User,Users,2592,"xu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other soft",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2665,usability,User,Users,2665,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2736,usability,User,Users,2736,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2852,usability,User,Users,2852,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2938,usability,Command,CommandLineTools,2938,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:2985,usability,User,Users,2985,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3015,usability,User,Users,3015,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3084,usability,behavi,behavior,3084,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3102,usability,clear,clear,3102,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3216,usability,behavi,behavior,3216,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/issues/8418:3361,usability,input,input,3361,"tware/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:325:9: error: no member named 'isnan' in the global namespace. using ::isnan;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:326:9: error: no member named 'isnormal' in the global namespace. using ::isnormal;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:327:9: error: no member named 'isgreater' in the global namespace. using ::isgreater;. ~~^. /Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/../include/c++/v1/cmath:328:9: error: no member named 'isgreaterequal' in the global namespace. using ::isgreaterequal;. ... Error in <ACLiC>: Executing '/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/bin/rootcling -v0 ""--lib-list-prefix=/Users/chenxu/tmp/aa1_cpp_ACLiC_map"" -f ""/Users/chenxu/tmp/aa1_cpp_ACLiC_dict.cxx"" -I$ROOTSYS/include -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/etc//cling"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include/"" -I""/Users/chenxu/software/conda/miniconda3/envs/cxROOTGEANT4/include"" -I""/usr/local/include/"" -I""/opt/X11/include/"" -I""/Users/chenxu/software/install2/include/healpix_cxx/"" -D__ACLIC__ -I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include ""/Users/chenxu/tmp/./aa1.cpp"" ""/Users/chenxu/tmp/aa1_cpp_ACLiC_linkdef.h""' failed! ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version 6.24.00. 2. OS X 10.15. 3. conda install. ### Additional context. It's a bug for Mac for a long time even in other softwares.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8418
https://github.com/root-project/root/pull/8420:222,availability,error,errors,222,"[webgui] use less chrome processes when running headless; Do not allow to start sandbox or zygote processes, disable extensions. Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:129,energy efficiency,Reduc,Reduce,129,"[webgui] use less chrome processes when running headless; Do not allow to start sandbox or zygote processes, disable extensions. Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:117,modifiability,extens,extensions,117,"[webgui] use less chrome processes when running headless; Do not allow to start sandbox or zygote processes, disable extensions. Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:222,performance,error,errors,222,"[webgui] use less chrome processes when running headless; Do not allow to start sandbox or zygote processes, disable extensions. Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:222,safety,error,errors,222,"[webgui] use less chrome processes when running headless; Do not allow to start sandbox or zygote processes, disable extensions. Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:248,safety,test,test,248,"[webgui] use less chrome processes when running headless; Do not allow to start sandbox or zygote processes, disable extensions. Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:80,security,sandbox,sandbox,80,"[webgui] use less chrome processes when running headless; Do not allow to start sandbox or zygote processes, disable extensions. Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:248,testability,test,test,248,"[webgui] use less chrome processes when running headless; Do not allow to start sandbox or zygote processes, disable extensions. Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:199,usability,help,help,199,"[webgui] use less chrome processes when running headless; Do not allow to start sandbox or zygote processes, disable extensions. Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/pull/8420:222,usability,error,errors,222,"[webgui] use less chrome processes when running headless; Do not allow to start sandbox or zygote processes, disable extensions. Reduce from 9 to 4 number of required processes with chromium 90. May help to solve sporadic errors with `webgui_ping` test on ` pcepsft11`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8420
https://github.com/root-project/root/issues/8421:645,deployability,continu,continue,645,"Document casting iterators / ranges; ### Explain what you would like to see improved. TCollection and derived classes should advertise the casting iterators, e.g. [here](https://root.cern.ch/doc/master/classTCollection.html). [TIterator](https://root.cern.ch/doc/master/classTIterator.html) might also be improved with a small reference / code example. Maybe one could even convert a few tutorials. ### Additional context. From Town Square:. ```. A: Could devs remind me of the name of a class intended to be used in range for loops for casting plz? Smth like:. for (auto o : TheCastingClass<TH1*>(collection_of_pointers_to_TObject)) {. if (!o) continue;. // ... }. B: TRangeStaticCast ? A: TRangeDynCast actually. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8421
https://github.com/root-project/root/issues/8421:414,testability,context,context,414,"Document casting iterators / ranges; ### Explain what you would like to see improved. TCollection and derived classes should advertise the casting iterators, e.g. [here](https://root.cern.ch/doc/master/classTCollection.html). [TIterator](https://root.cern.ch/doc/master/classTIterator.html) might also be improved with a small reference / code example. Maybe one could even convert a few tutorials. ### Additional context. From Town Square:. ```. A: Could devs remind me of the name of a class intended to be used in range for loops for casting plz? Smth like:. for (auto o : TheCastingClass<TH1*>(collection_of_pointers_to_TObject)) {. if (!o) continue;. // ... }. B: TRangeStaticCast ? A: TRangeDynCast actually. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8421
https://github.com/root-project/root/issues/8421:0,usability,Document,Document,0,"Document casting iterators / ranges; ### Explain what you would like to see improved. TCollection and derived classes should advertise the casting iterators, e.g. [here](https://root.cern.ch/doc/master/classTCollection.html). [TIterator](https://root.cern.ch/doc/master/classTIterator.html) might also be improved with a small reference / code example. Maybe one could even convert a few tutorials. ### Additional context. From Town Square:. ```. A: Could devs remind me of the name of a class intended to be used in range for loops for casting plz? Smth like:. for (auto o : TheCastingClass<TH1*>(collection_of_pointers_to_TObject)) {. if (!o) continue;. // ... }. B: TRangeStaticCast ? A: TRangeDynCast actually. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8421
https://github.com/root-project/root/issues/8422:266,energy efficiency,cool,cool,266,"[graphics] (2d) Vector Field Support in Graphics and TMath ; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. . ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. If it's okay, i'd like to try and make this. I think it would be a cool addition. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png). Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8422:629,energy efficiency,cool,cool,629,"[graphics] (2d) Vector Field Support in Graphics and TMath ; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. . ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. If it's okay, i'd like to try and make this. I think it would be a cool addition. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png). Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8422:1026,reliability,doe,doesn,1026,"[graphics] (2d) Vector Field Support in Graphics and TMath ; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. . ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. If it's okay, i'd like to try and make this. I think it would be a cool addition. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png). Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8422:866,testability,context,context,866,"[graphics] (2d) Vector Field Support in Graphics and TMath ; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. . ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. If it's okay, i'd like to try and make this. I think it would be a cool addition. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png). Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8422:895,testability,context,context,895,"[graphics] (2d) Vector Field Support in Graphics and TMath ; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. . ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. If it's okay, i'd like to try and make this. I think it would be a cool addition. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png). Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8422:29,usability,Support,Support,29,"[graphics] (2d) Vector Field Support in Graphics and TMath ; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. . ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. If it's okay, i'd like to try and make this. I think it would be a cool addition. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png). Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8422:136,usability,clear,clear,136,"[graphics] (2d) Vector Field Support in Graphics and TMath ; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. . ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. If it's okay, i'd like to try and make this. I think it would be a cool addition. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png). Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8422:279,usability,support,support,279,"[graphics] (2d) Vector Field Support in Graphics and TMath ; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. . ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. If it's okay, i'd like to try and make this. I think it would be a cool addition. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png). Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8422:413,usability,visual,visualisation,413,"[graphics] (2d) Vector Field Support in Graphics and TMath ; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. . ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. If it's okay, i'd like to try and make this. I think it would be a cool addition. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png). Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8422:499,usability,clear,clear,499,"[graphics] (2d) Vector Field Support in Graphics and TMath ; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. . ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. If it's okay, i'd like to try and make this. I think it would be a cool addition. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png). Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8422:1084,usability,user,user-images,1084,"[graphics] (2d) Vector Field Support in Graphics and TMath ; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I think it would be cool to have support for Vector Fields in the Graphics and math libraries. Where you enter a vector field equation f(x, y) or f(x, y, z) and get a visualisation of a that vector field. . ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. If it's okay, i'd like to try and make this. I think it would be a cool addition. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. A cobination of TF2 and other ROOT native libraries such as TLine, TArrow, TVector2, TVector3 etc. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. I couldn't find anything like this existing so I just assume that it doesn't exist. Let me know if I'm wrong. ![image](https://user-images.githubusercontent.com/62119114/121907935-d1614500-cd2c-11eb-8d34-2cfc6b049d10.png). Something like this is the image I have in my brain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8422
https://github.com/root-project/root/issues/8424:634,availability,down,download,634,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:901,availability,down,download,901,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:0,deployability,Instal,Installation,0,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:48,deployability,Version,Version,48,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:70,deployability,patch,patches,70,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:215,deployability,instal,install,215,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:372,deployability,fail,fails,372,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:485,deployability,build,build,485,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:667,deployability,fail,fail,667,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:864,deployability,build,build,864,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1193,deployability,version,version,1193,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1384,deployability,version,version,1384,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1625,deployability,instal,installation-without-internet-access,1625,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:48,integrability,Version,Version,48,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:293,integrability,configur,configure,293,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:320,integrability,configur,configure,320,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:439,integrability,configur,configure,439,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:696,integrability,configur,configure,696,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:720,integrability,configur,configure,720,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:835,integrability,configur,configure,835,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1193,integrability,version,version,1193,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1384,integrability,version,version,1384,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:79,interoperability,Platform,Platform,79,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1106,interoperability,share,shared,1106,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1140,interoperability,xml,xml,1140,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:48,modifiability,Version,Version,48,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:293,modifiability,configur,configure,293,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:320,modifiability,configur,configure,320,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:439,modifiability,configur,configure,439,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:647,modifiability,pac,package,647,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:696,modifiability,configur,configure,696,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:720,modifiability,configur,configure,720,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:835,modifiability,configur,configure,835,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1193,modifiability,version,version,1193,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1384,modifiability,version,version,1384,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:252,reliability,doe,does,252,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:372,reliability,fail,fails,372,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:667,reliability,fail,fail,667,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:70,safety,patch,patches,70,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:30,security,access,access,30,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:70,security,patch,patches,70,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:293,security,configur,configure,293,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:320,security,configur,configure,320,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:439,security,configur,configure,439,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:696,security,configur,configure,696,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:720,security,configur,configure,720,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:835,security,configur,configure,835,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1114,security,ssl,ssl,1114,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1655,security,access,access,1655,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:450,usability,command,command,450,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:570,usability,command,command,570,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:943,usability,support,support,943,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/issues/8424:1175,usability,behavi,behaviour,1175,"Installation without internet access; ```. ROOT Version: root-5-34-00-patches. Platform: 4.18.0-193.6.3.el8_2.x86_64 (RHEL 8.2 Ootpa). Compiler: gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5). ```. I have been asked to install ROOT v5-34 in a machine that does not have an internet connection. My configure line is:. ```. ./configure --prefix=/software/root/5.34. ```. But it fails to find the LZ4 library as shown below in the output of the `configure` command:. ```. Checking whether to build included lz4 ... yes. ```. Even if the library can be found in the PATH by the command `which`. This is a problem, because it will then try to download the package and it will fail. So I try the following configure line:. ```. ./configure --prefix=/software/root/5.34 --disable-builtin-lz4. ```. But the option is ignored and the output of the configure shows that it will build the builtin_lz4 (and therefore download it from internet):. ```. Enabled support for asimage, astiff, builtin_afterimage, builtin_glew, builtin_lz4, cintex, explicitlink, fftw3, gviz, genvector, krb5, memstat, opengl, reflex, shadowpw, shared, ssl, tmva, vdt, x11, xft, xml. ```. I was able to bypass the behaviour for the version 6.24 using `cmake` with the following line:. ```. cmake -DCMAKE_INSTALL_PREFIX=<some-path> -Dasimage=on -Dcocoa=on -Dvdt=off -Dxrootd=off -Dclad=off <path-to-source>. ```. Again, for version 6.24, I was not able to use the `--disable` option, but somehow, this combination of options resulted in the bypassing of the builtin-lz4. This issue was opened following a [suggestion in the root forum](https://root-forum.cern.ch/t/installation-without-internet-access/45361/2?u=eduardo) where the same question was posted earlier. Regards,. Eduardo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8424
https://github.com/root-project/root/pull/8425:167,deployability,automat,automatically,167,"TTree::GetEntry() entry parameter default value fix; # This Pull request:. ## Changes or fixes:. I fixed the issue, where if no value for entry was provided, it would automatically set to 0. This has the result that the user has many outputs that correspond to the 0th entry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8300 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:327,deployability,updat,updated,327,"TTree::GetEntry() entry parameter default value fix; # This Pull request:. ## Changes or fixes:. I fixed the issue, where if no value for entry was provided, it would automatically set to 0. This has the result that the user has many outputs that correspond to the 0th entry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8300 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:24,modifiability,paramet,parameter,24,"TTree::GetEntry() entry parameter default value fix; # This Pull request:. ## Changes or fixes:. I fixed the issue, where if no value for entry was provided, it would automatically set to 0. This has the result that the user has many outputs that correspond to the 0th entry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8300 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:297,safety,test,tested,297,"TTree::GetEntry() entry parameter default value fix; # This Pull request:. ## Changes or fixes:. I fixed the issue, where if no value for entry was provided, it would automatically set to 0. This has the result that the user has many outputs that correspond to the 0th entry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8300 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:327,safety,updat,updated,327,"TTree::GetEntry() entry parameter default value fix; # This Pull request:. ## Changes or fixes:. I fixed the issue, where if no value for entry was provided, it would automatically set to 0. This has the result that the user has many outputs that correspond to the 0th entry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8300 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:327,security,updat,updated,327,"TTree::GetEntry() entry parameter default value fix; # This Pull request:. ## Changes or fixes:. I fixed the issue, where if no value for entry was provided, it would automatically set to 0. This has the result that the user has many outputs that correspond to the 0th entry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8300 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:167,testability,automat,automatically,167,"TTree::GetEntry() entry parameter default value fix; # This Pull request:. ## Changes or fixes:. I fixed the issue, where if no value for entry was provided, it would automatically set to 0. This has the result that the user has many outputs that correspond to the 0th entry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8300 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:297,testability,test,tested,297,"TTree::GetEntry() entry parameter default value fix; # This Pull request:. ## Changes or fixes:. I fixed the issue, where if no value for entry was provided, it would automatically set to 0. This has the result that the user has many outputs that correspond to the 0th entry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8300 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8425:220,usability,user,user,220,"TTree::GetEntry() entry parameter default value fix; # This Pull request:. ## Changes or fixes:. I fixed the issue, where if no value for entry was provided, it would automatically set to 0. This has the result that the user has many outputs that correspond to the 0th entry. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8300 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8425
https://github.com/root-project/root/pull/8426:152,safety,prevent,prevent,152,"TF1/TString possible overflow fix + Warning in TString; I have tried to fix [this](https://github.com/root-project/root/issues/8136) issue. This should prevent a possible overflow in TF1, as now the min of the length of strlen(formula) and 5 is taken, therefore preventing a possible overflow. . Also in TString if the first n characters of cs conatin \0 it warns you.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:262,safety,prevent,preventing,262,"TF1/TString possible overflow fix + Warning in TString; I have tried to fix [this](https://github.com/root-project/root/issues/8136) issue. This should prevent a possible overflow in TF1, as now the min of the length of strlen(formula) and 5 is taken, therefore preventing a possible overflow. . Also in TString if the first n characters of cs conatin \0 it warns you.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:152,security,preven,prevent,152,"TF1/TString possible overflow fix + Warning in TString; I have tried to fix [this](https://github.com/root-project/root/issues/8136) issue. This should prevent a possible overflow in TF1, as now the min of the length of strlen(formula) and 5 is taken, therefore preventing a possible overflow. . Also in TString if the first n characters of cs conatin \0 it warns you.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8426:262,security,preven,preventing,262,"TF1/TString possible overflow fix + Warning in TString; I have tried to fix [this](https://github.com/root-project/root/issues/8136) issue. This should prevent a possible overflow in TF1, as now the min of the length of strlen(formula) and 5 is taken, therefore preventing a possible overflow. . Also in TString if the first n characters of cs conatin \0 it warns you.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8426
https://github.com/root-project/root/pull/8427:856,availability,Sli,Slice,856,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1870,availability,Sli,Slice,1870,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1660,deployability,updat,update,1660,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1723,deployability,updat,update,1723,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1814,deployability,updat,updated,1814,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:13,integrability,messag,message,13,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:271,integrability,messag,message,271,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:424,integrability,messag,message,424,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:752,integrability,messag,message,752,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1220,integrability,messag,message,1220,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1359,integrability,messag,message,1359,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:13,interoperability,messag,message,13,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:271,interoperability,messag,message,271,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:424,interoperability,messag,message,424,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:752,interoperability,messag,message,752,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1220,interoperability,messag,message,1220,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1359,interoperability,messag,message,1359,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:856,reliability,Sli,Slice,856,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1870,reliability,Sli,Slice,1870,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:686,safety,except,exceptions,686,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1660,safety,updat,update,1660,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1723,safety,updat,update,1723,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1814,safety,updat,updated,1814,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:660,security,ident,identical,660,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:706,security,hardcod,hardcoded,706,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1660,security,updat,update,1660,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1723,security,updat,update,1723,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1814,security,updat,updated,1814,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1483,testability,simul,simultaneous-fit-with-,1483,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:382,usability,behavi,behavior,382,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:437,usability,clear,clear,437,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:784,usability,command,commands,784,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:823,usability,behavi,behavior,823,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:930,usability,command,commands,930,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1057,usability,command,command,1057,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1129,usability,command,commands,1129,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1233,usability,help,helps,1233,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1239,usability,user,users,1239,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/pull/8427:1269,usability,command,commands,1269,"[RF] Warning message on repeated named RooCmdArgs in RooCmdConfig; ### More detailed description of main commit (1st commit). This commit addresses Jira issue [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784) (from 2010, oldest open RooFit ""bug""!). Emit warning message in RooCmdConfig when multiple named arguments of. the same type are encountered, for which no chaining behavior is. defined. To make the warning message more clear, a map is implemeted to look up. the name of the function in the `RooFit` namespace that is used to. create the repeated RooCmdArg. Usually, the names of the argument and. the name of the function that created it are identical, but there are. exceptions that are hardcoded in this map. Furthermore, a warning message is also emitted for the commands that. have a defined chaining behavior (`Import`, `Link`, and `Slice`), where. the alternatives that take a `std::map` with the multiple commands is. suggested. This is done to encourage RooFit code that can be easily. ported to Python if desired, because chainig command arguments with the. same name is not possible in Python RooFit (commands are passed as. keyword arguments, which can't be repeated). Having such a warning message also helps users that try to chain more. commands than `RooAbsReal::plotOn` can digest. They will get the. solution in the warning message instead of having to ask in the forum,. which happend for example in [this forum post](https://root-forum.cern.ch/t/simultaneous-fit-with-8-pdfs-using-roosimultaneous-and-roodataset/45331). ### Quick description of other commits. * commit 1:. * main commit explianed above. * commit 2 - 4:. * update RooFit code to not trigger the warnings. * commit 5:. * update RooFit C tutorial files to not trigger the warnings. * Python tutorials can only be updated after pythonizations for `Import`, `Link`, and `Slice`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8427
https://github.com/root-project/root/issues/8428:40,integrability,sub,sub-object,40,"I/O customization rule not run on split sub-object of a non-collection object.; This is seen in https://cdcvs.fnal.gov/redmine/issues/25893 and is triggered by a change in CLHEP::Hep3Vector (from 3 individual members to a single array) that is stored in a sub-object of a simple object (no collection involved, it works in that case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:256,integrability,sub,sub-object,256,"I/O customization rule not run on split sub-object of a non-collection object.; This is seen in https://cdcvs.fnal.gov/redmine/issues/25893 and is triggered by a change in CLHEP::Hep3Vector (from 3 individual members to a single array) that is stored in a sub-object of a simple object (no collection involved, it works in that case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:0,performance,I/O,I/O,0,"I/O customization rule not run on split sub-object of a non-collection object.; This is seen in https://cdcvs.fnal.gov/redmine/issues/25893 and is triggered by a change in CLHEP::Hep3Vector (from 3 individual members to a single array) that is stored in a sub-object of a simple object (no collection involved, it works in that case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:272,testability,simpl,simple,272,"I/O customization rule not run on split sub-object of a non-collection object.; This is seen in https://cdcvs.fnal.gov/redmine/issues/25893 and is triggered by a change in CLHEP::Hep3Vector (from 3 individual members to a single array) that is stored in a sub-object of a simple object (no collection involved, it works in that case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:4,usability,custom,customization,4,"I/O customization rule not run on split sub-object of a non-collection object.; This is seen in https://cdcvs.fnal.gov/redmine/issues/25893 and is triggered by a change in CLHEP::Hep3Vector (from 3 individual members to a single array) that is stored in a sub-object of a simple object (no collection involved, it works in that case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/issues/8428:272,usability,simpl,simple,272,"I/O customization rule not run on split sub-object of a non-collection object.; This is seen in https://cdcvs.fnal.gov/redmine/issues/25893 and is triggered by a change in CLHEP::Hep3Vector (from 3 individual members to a single array) that is stored in a sub-object of a simple object (no collection involved, it works in that case).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8428
https://github.com/root-project/root/pull/8429:140,energy efficiency,current,currently,140,"Extend io customization support: whole obj rule in split obj.; Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:239,integrability,sub,subobject,239,"Extend io customization support: whole obj rule in split obj.; Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:0,modifiability,Exten,Extend,0,"Extend io customization support: whole obj rule in split obj.; Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:63,modifiability,Exten,Extend,63,"Extend io customization support: whole obj rule in split obj.; Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:10,usability,custom,customization,10,"Extend io customization support: whole obj rule in split obj.; Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:24,usability,support,support,24,"Extend io customization support: whole obj rule in split obj.; Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8429:74,usability,support,support,74,"Extend io customization support: whole obj rule in split obj.; Extend the support for a rule that applies to several data members (and thus currently is applied as the 'object level') to. the case of a split object embedded within a split subobject of an object (previous it worked only for the collection case). This fixes issue #8428 , see also https://cdcvs.fnal.gov/redmine/issues/25893. This PR fixes #8428.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8429
https://github.com/root-project/root/pull/8430:406,deployability,depend,dependency,406,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:603,deployability,API,API,603,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:651,deployability,API,API,651,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1038,deployability,Configurat,Configuration,1038,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:233,energy efficiency,Model,Models,233,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:504,energy efficiency,model,model,504,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:607,energy efficiency,Model,Models,607,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:655,energy efficiency,Model,Models,655,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:772,energy efficiency,Model,Models,772,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:782,energy efficiency,Current,Currently,782,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:406,integrability,depend,dependency,406,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:603,integrability,API,API,603,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:651,integrability,API,API,651,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:760,integrability,Sub,Subclassing,760,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1038,integrability,Configur,Configuration,1038,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:148,interoperability,format,format,148,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:417,interoperability,conflict,conflicts,417,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:603,interoperability,API,API,603,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:651,interoperability,API,API,651,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:406,modifiability,depend,dependency,406,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:725,modifiability,Layer,Layers,725,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1038,modifiability,Configur,Configuration,1038,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:400,safety,avoid,avoid,400,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:406,safety,depend,dependency,406,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:908,safety,test,tested,908,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:949,safety,Test,Tests,949,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1008,safety,Test,Tests,1008,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1056,safety,test,tests,1056,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:233,security,Model,Models,233,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:504,security,model,model,504,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:607,security,Model,Models,607,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:655,security,Model,Models,655,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:772,security,Model,Models,772,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1038,security,Configur,Configuration,1038,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:406,testability,depend,dependency,406,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:908,testability,test,tested,908,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:949,testability,Test,Tests,949,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1008,testability,Test,Tests,1008,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1056,testability,test,tests,1056,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:224,usability,Learn,Learning,224,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:362,usability,Progress,Progress,362,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:574,usability,Support,Support,574,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:622,usability,Support,Support,622,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:670,usability,Support,Supports,670,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:742,usability,Support,Support,742,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:796,usability,support,supported,796,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8430:1066,usability,Document,Documentation,1066,"[GSoC][TMVA][ROOT Storage] PyKeras Parser TMVA; ## Description. Development of the functionality for parsing and converting a Keras H5 file to ROOT format using the Fast Inference System SOFIE for the **ROOT Storage of Deep Learning Models** Project of *Google Summer of Code'21*. Project Link: https://summerofcode.withgoogle.com/projects/#5424575602491392. ## Progress. - [x] Restructured SOFIE to avoid dependency conflicts between different Python libraries. - [x] Parser function for extracting the model information and weights and instantiate a RModel Object . - [x] Support for Keras Sequential API Models . - [x] Support for Keras Functional API Models . - [x] Supports Dense (with relu activation),ReLU and Permute Layers . - [ ] ~~Support for Keras Subclassing Models~~ (Currently not supported by Root). - [x] Header file for the function . - [x] Function implementation . . ## Checklist:. - [x] tested changes locally. - [x] Parser. ## Tests. - [x] Emit Files for generating header files. - [x] Tests for Parser. - [x] CMake Configuration for tests. ## Documentation . - [x] Doxygen Docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8430
https://github.com/root-project/root/pull/8432:12,availability,redund,redundant,12,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:12,deployability,redundan,redundant,12,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:126,deployability,fail,fail,126,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:771,deployability,updat,updated,771,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:75,modifiability,inherit,inherits,75,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:12,reliability,redundan,redundant,12,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:126,reliability,fail,fail,126,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:12,safety,redund,redundant,12,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:22,safety,sanit,sanity,22,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:532,safety,Input,InputArguments,532,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:742,safety,test,tested,742,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:771,safety,updat,updated,771,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:22,security,sanit,sanity,22,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:771,security,updat,updated,771,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:742,testability,test,tested,742,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8432:532,usability,Input,InputArguments,532,"[RF] Remove redundant sanity check; `pdf` is `RooAbsPdf*`, and `RooAbsPdf` inherits from `RooAbsReal`,. so the check can only fail if `pdf` is a nullptr, in which case. `pdf->GetName()` would be a nullptr dereference. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8432
https://github.com/root-project/root/pull/8433:194,deployability,updat,updated,194,[NFC] Fix display of github PR template when checkboxes are empty; Currently it displays like this:. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8433
https://github.com/root-project/root/pull/8433:67,energy efficiency,Current,Currently,67,[NFC] Fix display of github PR template when checkboxes are empty; Currently it displays like this:. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8433
https://github.com/root-project/root/pull/8433:165,safety,test,tested,165,[NFC] Fix display of github PR template when checkboxes are empty; Currently it displays like this:. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8433
https://github.com/root-project/root/pull/8433:194,safety,updat,updated,194,[NFC] Fix display of github PR template when checkboxes are empty; Currently it displays like this:. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8433
https://github.com/root-project/root/pull/8433:194,security,updat,updated,194,[NFC] Fix display of github PR template when checkboxes are empty; Currently it displays like this:. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8433
https://github.com/root-project/root/pull/8433:165,testability,test,tested,165,[NFC] Fix display of github PR template when checkboxes are empty; Currently it displays like this:. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [] tested changes locally. - [] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8433
https://github.com/root-project/root/pull/8434:20,availability,error,error,20,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:174,availability,error,error,174,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:458,availability,error,error,458,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:20,performance,error,error,20,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:174,performance,error,error,174,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:458,performance,error,error,458,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:20,safety,error,error,20,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:174,safety,error,error,174,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:244,safety,avoid,avoid,244,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:458,safety,error,error,458,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:779,safety,Input,InputArguments,779,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:276,testability,assert,assert,276,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:317,testability,assert,asserts,317,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:20,usability,error,error,20,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:174,usability,error,error,174,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:458,usability,error,error,458,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/pull/8434:779,usability,Input,InputArguments,779,"[RF] Fix copy-paste error in RooAddModel constructor and modernization; * replace wrong `dynamic_cast<RooAbsReal*>` with. `dynamic_cast<RooAbsPdf*>` (presumably a copy-paste error). * use `TIter` and range-based loop instead of `TIterator*`. * avoid C-style casts. * replace `assert(0)` with `std::runtime_error`, as asserts only work in. debug buils. * replace one orrurence of `coef->GetName()` with `pdf->GetName()`,. which was probably also a copy-paste error. This fixes the following warning in gcc11:. ```. ../roofit/roofitcore/src/RooAddModel.cxx: In constructor ‘RooAddModel::RooAddModel(const char*, const char*, const RooArgList&, const RooArgList&, Bool_t)’:. ../roofit/roofitcore/src/RooAddModel.cxx:125:106: warning: ‘this’ pointer is null [-Wnonnull]. 125 | coutE(InputArguments) << ""RooAddModel::RooAddModel("" << GetName() << "") pdf "" << pdf->GetName() << "" is not of type RooAbsPdf, ignored"" << endl ;. ```. This PR superseeds PR https://github.com/root-project/root/pull/8432 and addresses issue https://github.com/root-project/root/issues/8129.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8434
https://github.com/root-project/root/issues/8435:1551,availability,error,error,1551,"ter the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1917,availability,Operat,Operating,1917,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:2299,availability,Operat,Operating,2299,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:2374,availability,down,download,2374,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:562,deployability,instal,installation,562,"`thisroot.fish` does not set properly `JUPYTER*` env vars with `gnuinstall=ON`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch. After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1334,deployability,Build,Build,1334," very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch. After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1344,deployability,instal,install,1344,"me to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch. After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1835,deployability,build,build,1835,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1896,deployability,version,version,1896,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1958,deployability,releas,release,1958,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1989,deployability,version,version,1989,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:2287,deployability,version,version,2287,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:2356,deployability,instal,install,2356,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1896,integrability,version,version,1896,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1989,integrability,version,version,1989,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:2287,integrability,version,version,2287,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:645,modifiability,variab,variables,645,"`thisroot.fish` does not set properly `JUPYTER*` env vars with `gnuinstall=ON`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch. After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1116,modifiability,variab,variables,1116,"e search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch. After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Ju",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1896,modifiability,version,version,1896,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1989,modifiability,version,version,1989,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:2287,modifiability,version,version,2287,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1551,performance,error,error,1551,"ter the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:16,reliability,doe,does,16,"`thisroot.fish` does not set properly `JUPYTER*` env vars with `gnuinstall=ON`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch. After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1551,safety,error,error,1551,"ter the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1603,safety,valid,valid,1603,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1789,safety,input,input,1789,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1379,security,Modif,Modify,1379,"for instance ""issue still exists in today's master"". -->. ### Describe the bug. I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch. After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:2428,testability,context,context,2428,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:2564,testability,context,context,2564,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1003,usability,clear,clear,1003,"oot.fish` does not set properly `JUPYTER*` env vars with `gnuinstall=ON`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch. After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1051,usability,behavi,behavior,1051,"rs with `gnuinstall=ON`; - [X] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch. After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1082,usability,behavi,behavior,1082,"Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch. After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1246,usability,clear,clear,1246,"ues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. I built ROOT from source using option `gnuinstall=ON` and cloning `latest-stable` branch. After the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1551,usability,error,error,1551,"ter the installation the script `/usr/local/bin/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1644,usability,behavi,behavior,1644,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/issues/8435:1789,usability,input,input,1789,"n/thisroot.fish` sets `JUPYTER*` environment variables as follows:. ```. JUPYTER_PATH=ROOTSYS/etc/notebook. JUPYTER_CONFIG_DIR=ROOTSYS/etc/notebook. ```. Commit [0be8bbe](https://github.com/root-project/root/commit/0be8bbee9570776d17196b32c82db1d25c6e3530) has already corrected `ROOTSYS` with `$ROOTSYS` (i.e. `/usr/local`) but still the path is not correct considering that `gnuinstall=ON`. . <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. The correct environment variables would be. ```. JUPYTER_PATH=/usr/local/etc/root/notebook. JUPYTER_CONFIG_DIR=/usr/local/etc/root/notebook. ```. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. 1. Build and install `latest-stable` branch. 2. Modify `/usr/local/bin/thisroot.fish` prepending a `$` to `ROOTSYS` at lines 50 and 51. 3. Source `/usr/local/bin/thisroot.fish` and run `jupyter-lab`. 4. At this point an error shows that `/usr/local/etc/notebook` is not a valid path. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. 1. ROOT version: 6.24/00. 2. Operating system: openSUSE Tumbleweed -- release: 20210606. 3. Compiler version: gcc (SUSE Linux) 11.1.1 20210510 [revision 23855a176609fe8dda6abaf2b21846b4517966eb]. 3. ROOT built for linuxx8664gcc on Jun 12 2021, 01:11:00, from heads/latest-stable@e6a04a86, with options:. a. `gnuinstall=ON`. b. `imt=ON`. c. `minuit2=ON`. d. `rpath=ON`. e. `pyroot=ON`. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. Post on ROOT forum: [link](https://root-forum.cern.ch/t/rootsys-folder-created-starting-jupyterlab/45358). <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8435
https://github.com/root-project/root/pull/8436:461,availability,error,errors,461,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:496,deployability,version,version,496,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:89,energy efficiency,Draw,Draw,89,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:456,energy efficiency,draw,draw,456,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:496,integrability,version,version,496,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:496,modifiability,version,version,496,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:461,performance,error,errors,461,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:16,reliability,RCa,RCanvas,16,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:461,safety,error,errors,461,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:158,security,Modif,Modify,158,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:179,security,sign,signatures,179,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:487,security,modif,modified,487,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8436:461,usability,error,errors,461,"Enable usage of RCanvas/TObjectDrawable in PyROOT; 1. Provide return types in `RPadBase::Draw` methods instead of `auto` - PyROOT is not able to deduce type. Modify several other signatures to let use PyROOT without extra casting . 2. Improve `TObjectDrawable` - it can extract `Color_t` values and sends actual value to client, no need to always send full colors lists. 3. Let handle `TH1`, `TF1` and `THStack` in TObjectDrawable. 4. Improve `RLegend` to draw errors marker. 5. Provide modified version of `df104.py` macro which works with ROOT7 graphics. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8436
https://github.com/root-project/root/pull/8437:141,availability,error,errors,141,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:281,availability,error,errors,281,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:141,performance,error,errors,141,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:281,performance,error,errors,281,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:5,safety,Avoid,Avoid,5,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:141,safety,error,errors,141,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:276,safety,test,test,276,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:281,safety,error,errors,281,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:160,security,access,accesses,160,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:276,testability,test,test,276,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:141,usability,error,errors,141,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/pull/8437:281,usability,error,errors,281,"[RF] Avoid using RooCmdArg::_nextSharedData directly in header file; Calling `RooCmdArg::take` in `RooGlobalFunc.h` header can cause linker. errors, because it accesses a static data member. That's unsupported. across DLL boundaries on Windows. This should fix the Windows 10 test errors that appeard after #8416.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8437
https://github.com/root-project/root/issues/8438:0,availability,Error,Error,0,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:218,availability,error,error,218,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:235,availability,error,error,235,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:241,integrability,messag,message,241,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:241,interoperability,messag,message,241,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:0,performance,Error,Error,0,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:218,performance,error,error,218,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:235,performance,error,error,235,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:0,safety,Error,Error,0,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:218,safety,error,error,218,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:235,safety,error,error,235,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:403,safety,test,test,403,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:506,safety,test,test,506,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:403,testability,test,test,403,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:506,testability,test,test,506,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:0,usability,Error,Error,0,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:166,usability,behavi,behavior,166,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:218,usability,error,error,218,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/issues/8438:235,usability,error,error,235,"Error pickling derived class in PyROOT; ### Describe the bug. Reported in https://root-forum.cern.ch/t/new-pyroot-cant-pickle-derived-class-types/45415. ### Expected behavior. That the derived class is pickled without error / a proper error message appears. ### To Reproduce. In Derived.py:. ```python. import ROOT. class Derived(ROOT.TH1F):. def __reduce__(self):. return (self.__class__, ()). ```. In test.py:. ```python. from Derived import Derived. import pickle. pickle.dumps(Derived()). ```. Running test.py throws a segfault in the `__reduce__` implementation:. ```. #7 0x00007f6aeb43a8ac in TClass::StreamerTObject(TClass const*, void*, TBuffer&, TClass const*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so. #8 0x00007f6aeaaba5a6 in TBufferFile::WriteObjectClass(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #9 0x00007f6aeaac1b74 in TBufferIO::WriteObjectAny(void const*, TClass const*, bool) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libRIO.so. #10 0x00007f6add1ca55f in op_reduce(CPyCppyy::CPPInstance*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libROOTPythonizations3_8.so. #11 0x00007f6af8cab364 in cfunction_vectorcall_NOARGS () from /lib64/libpython3.8.so.1.0. #12 0x00007f6af8cb58e4 in PyVectorcall_Call () from /lib64/libpython3.8.so.1.0. #13 0x00007f6aeb6c8bf5 in CPyCppyy::im_call(_object*, _object*, _object*) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libcppyy3_8.so. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8438
https://github.com/root-project/root/pull/8439:42,deployability,automat,automatic,42,Fix drawing in df104 tutorial; 1. Disable automatic drawing when fitting. 2. Draw data histogram only when all settings are done. 3. Use TH1I instead of TF1 for axis drawing in lower pad. Created canvas can be stored and read back properly from ROOT file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8439
https://github.com/root-project/root/pull/8439:4,energy efficiency,draw,drawing,4,Fix drawing in df104 tutorial; 1. Disable automatic drawing when fitting. 2. Draw data histogram only when all settings are done. 3. Use TH1I instead of TF1 for axis drawing in lower pad. Created canvas can be stored and read back properly from ROOT file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8439
https://github.com/root-project/root/pull/8439:52,energy efficiency,draw,drawing,52,Fix drawing in df104 tutorial; 1. Disable automatic drawing when fitting. 2. Draw data histogram only when all settings are done. 3. Use TH1I instead of TF1 for axis drawing in lower pad. Created canvas can be stored and read back properly from ROOT file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8439
https://github.com/root-project/root/pull/8439:77,energy efficiency,Draw,Draw,77,Fix drawing in df104 tutorial; 1. Disable automatic drawing when fitting. 2. Draw data histogram only when all settings are done. 3. Use TH1I instead of TF1 for axis drawing in lower pad. Created canvas can be stored and read back properly from ROOT file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8439
https://github.com/root-project/root/pull/8439:166,energy efficiency,draw,drawing,166,Fix drawing in df104 tutorial; 1. Disable automatic drawing when fitting. 2. Draw data histogram only when all settings are done. 3. Use TH1I instead of TF1 for axis drawing in lower pad. Created canvas can be stored and read back properly from ROOT file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8439
https://github.com/root-project/root/pull/8439:42,testability,automat,automatic,42,Fix drawing in df104 tutorial; 1. Disable automatic drawing when fitting. 2. Draw data histogram only when all settings are done. 3. Use TH1I instead of TF1 for axis drawing in lower pad. Created canvas can be stored and read back properly from ROOT file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8439
https://github.com/root-project/root/pull/8442:16,performance,memor,memory,16,[cling] Prevent memory leak of TClingDataMemberInfo::fClassInfo. (#7915); (cherry picked from commit e6d16d66632a3f77b73b03c4547336f49a0cf2f0). Backport of https://github.com/root-project/root/pull/7915. Per request https://github.com/root-project/root/issues/7207#issuecomment-862188934.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8442
https://github.com/root-project/root/pull/8442:8,safety,Prevent,Prevent,8,[cling] Prevent memory leak of TClingDataMemberInfo::fClassInfo. (#7915); (cherry picked from commit e6d16d66632a3f77b73b03c4547336f49a0cf2f0). Backport of https://github.com/root-project/root/pull/7915. Per request https://github.com/root-project/root/issues/7207#issuecomment-862188934.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8442
https://github.com/root-project/root/pull/8442:8,security,Preven,Prevent,8,[cling] Prevent memory leak of TClingDataMemberInfo::fClassInfo. (#7915); (cherry picked from commit e6d16d66632a3f77b73b03c4547336f49a0cf2f0). Backport of https://github.com/root-project/root/pull/7915. Per request https://github.com/root-project/root/issues/7207#issuecomment-862188934.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8442
https://github.com/root-project/root/pull/8442:16,usability,memor,memory,16,[cling] Prevent memory leak of TClingDataMemberInfo::fClassInfo. (#7915); (cherry picked from commit e6d16d66632a3f77b73b03c4547336f49a0cf2f0). Backport of https://github.com/root-project/root/pull/7915. Per request https://github.com/root-project/root/issues/7207#issuecomment-862188934.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8442
https://github.com/root-project/root/pull/8443:82,deployability,build,build,82,[v622][RF] Fix missing initializer warnings in MemPoolForRooSets.h; This PR fixes build warnings in the v6.22 nightlies. The same fix was done for v6.20 in https://github.com/root-project/root/pull/7995.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8443
https://github.com/root-project/root/issues/8444:1734,availability,recov,recover,1734,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1727,deployability,API,API,1727,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1734,deployability,recov,recover,1734,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:2237,energy efficiency,current,currently,2237,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1727,integrability,API,API,1727,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:292,interoperability,convers,conversely,292,"Very difficult to go from compression algorithm name (e.g. ""zstd"") to the number that must be passed e.g. to `hadd -f`; We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually depr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:491,interoperability,specif,specified,491,"Very difficult to go from compression algorithm name (e.g. ""zstd"") to the number that must be passed e.g. to `hadd -f`; We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually depr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:691,interoperability,convers,conversion,691,"Very difficult to go from compression algorithm name (e.g. ""zstd"") to the number that must be passed e.g. to `hadd -f`; We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually depr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1727,interoperability,API,API,1727,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:2149,interoperability,specif,specified,2149,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:141,performance,time,times,141,"Very difficult to go from compression algorithm name (e.g. ""zstd"") to the number that must be passed e.g. to `hadd -f`; We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually depr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:203,performance,time,time,203,"Very difficult to go from compression algorithm name (e.g. ""zstd"") to the number that must be passed e.g. to `hadd -f`; We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually depr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1347,performance,time,time,1347,"sion settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:436,reliability,doe,does,436,"Very difficult to go from compression algorithm name (e.g. ""zstd"") to the number that must be passed e.g. to `hadd -f`; We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually depr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:671,reliability,doe,does,671,"Very difficult to go from compression algorithm name (e.g. ""zstd"") to the number that must be passed e.g. to `hadd -f`; We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually depr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1734,reliability,recov,recover,1734,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1734,safety,recov,recover,1734,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1734,security,recov,recover,1734,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:2092,testability,simpl,simply,2092,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:164,usability,user,users,164,"Very difficult to go from compression algorithm name (e.g. ""zstd"") to the number that must be passed e.g. to `hadd -f`; We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually depr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:417,usability,help,help,417,"Very difficult to go from compression algorithm name (e.g. ""zstd"") to the number that must be passed e.g. to `hadd -f`; We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually depr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:624,usability,undo,undocumented,624,"Very difficult to go from compression algorithm name (e.g. ""zstd"") to the number that must be passed e.g. to `hadd -f`; We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually depr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:741,usability,document,documentation,741,"Very difficult to go from compression algorithm name (e.g. ""zstd"") to the number that must be passed e.g. to `hadd -f`; We have seen several times in the past that users (and also ROOT devs) have a hard time figuring out what integer corresponds to ""zstd with default compression level"" (and conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually depr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1290,usability,user,user,1290,"conversely what the integer 205 means in terms of compression settings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its doc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1352,usability,user,users,1352,"ettings). This is due to a combination of factors:. - `hadd --help` is wrong and does not mention that the compression algorithm can be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECom",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1530,usability,help,help,1530,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:1838,usability,document,documented,1838,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/issues/8444:2092,usability,simpl,simply,2092,"n be specified besides the compression level: this is https://github.com/root-project/root/issues/6438. - `ROOT:::CompressionSettings` is undocumented (I only just now realized that it does precisely this conversion). One of the overloads has one line of documentation that mention it is deprecated but it is not actually deprecated with `R__DEPRECATE` . - expected usage of `RCompressionSetting::EAlgorithm::EValues` is unclear (see https://root.cern/doc/master/structROOT_1_1RCompressionSetting_1_1EAlgorithm.html), the docs should probably point to `ROOT::CompressionSettings`. The docstring ""Note: this is only temporarily a struct and will become a enum class hence the name. "" should probably not appear in Doxygen, seems to be a not for developers. - `ROOT::CompressionSettings` requires that the user mentions the desired compression level. most of the time users just want to use whatever ROOT's default is. IIRC there is an enum for that too, but I could not find it in Doxygen. I would suggest the following improvements:. - `hadd --help` should mention that `-f` can also be used to trigger the compression algorithm, and it could have an examples section that shows how to use it and mentions `ROOT::CompressionSettings` as the API to recover the required integer given the desired compression algorithm. - `RCompressionSetting` should be documented with an example usage and pointers to the enums/structs to be used in conjunction to it. - the deprecated `RCompressionSetting` should be actually deprecated. - `RCompressionSetting` should provide a default value for the second argument that simply provides ROOT's default compression level for the specified compression algorithm. - the `RCompressionSetting::EAlgorithm` enum (which is currently a struct) should be made an enum, and its docs should point to `RCompressionSetting`. - the deprecated [ECompressionAlgorithm](https://root.cern/doc/master/namespaceROOT.html#a60945f6fe634f9f3be9872e57bf87f2e) should actually be deprecated",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8444
https://github.com/root-project/root/pull/8445:74,deployability,build,build,74,[RF] Fix warning: ‘arg’ shadows member of RooTemplateProxy; This PR fixes build warnings in the master nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8445
https://github.com/root-project/root/issues/8446:996,deployability,version,version,996,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:1078,energy efficiency,profil,profile,1078,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:996,integrability,version,version,996,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:1315,integrability,contract,contract,1315,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:373,interoperability,share,share,373,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:851,interoperability,compatib,compatibility,851,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:1315,interoperability,contract,contract,1315,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:996,modifiability,version,version,996,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:1078,performance,profil,profile,1078,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:1229,performance,perform,performed,1229,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:1152,safety,input,input,1152,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:1020,testability,context,context,1020,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:201,usability,user,users,201,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:277,usability,user,user,277,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:548,usability,user,users,548,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:1152,usability,input,input,1152,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:1229,usability,perform,performed,1229,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8446:1271,usability,user,user,1271,"root executable :: remove (or disable by default) any not requested printouts; ### Explain what you would like to see improved. root executable emits a lot of non-requested output which:. 1. force the users to do workarounds just to make root print only what was instructed by user to do. 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved. there should be NO output if it was not requested ... . moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`. and users that need to remove annoyances need to `alias root='root.exe -l'`. so, i would say, that all differences between non exe and exe should be removed and hidden under a flag. and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested). for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce. just use it. ### Setup. any root version. ### Additional context. so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8446
https://github.com/root-project/root/issues/8447:333,security,token,token,333,"root executables :: add functions argument to the main root executable; ### Explain what you would like to see improved. It is just a point of view but IMHO, it would be easier if all additional functionality (hadd, mkdir, cp, ls, etc...). would be usable as arguments/verbs to root: `root -hadd ...`, `root -ls ...` . Moreover `--` token for end of global arguments would be useful in the following way:. * if verb is present (cp, ls, mv, hadd , etc...) whatever is after `--` are arguments for the verb (otherwise the verb should be the last). * if there is no verb present whatever is after `--` is text to be passed to root as code (replacement/addition to -e). this can become even more useful if these verbs are also converted to special commands (like `.pwd`, `.ls`). and if the line tokenization is also done for them (with the usual token of `;`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:791,security,token,tokenization,791,"root executables :: add functions argument to the main root executable; ### Explain what you would like to see improved. It is just a point of view but IMHO, it would be easier if all additional functionality (hadd, mkdir, cp, ls, etc...). would be usable as arguments/verbs to root: `root -hadd ...`, `root -ls ...` . Moreover `--` token for end of global arguments would be useful in the following way:. * if verb is present (cp, ls, mv, hadd , etc...) whatever is after `--` are arguments for the verb (otherwise the verb should be the last). * if there is no verb present whatever is after `--` is text to be passed to root as code (replacement/addition to -e). this can become even more useful if these verbs are also converted to special commands (like `.pwd`, `.ls`). and if the line tokenization is also done for them (with the usual token of `;`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:842,security,token,token,842,"root executables :: add functions argument to the main root executable; ### Explain what you would like to see improved. It is just a point of view but IMHO, it would be easier if all additional functionality (hadd, mkdir, cp, ls, etc...). would be usable as arguments/verbs to root: `root -hadd ...`, `root -ls ...` . Moreover `--` token for end of global arguments would be useful in the following way:. * if verb is present (cp, ls, mv, hadd , etc...) whatever is after `--` are arguments for the verb (otherwise the verb should be the last). * if there is no verb present whatever is after `--` is text to be passed to root as code (replacement/addition to -e). this can become even more useful if these verbs are also converted to special commands (like `.pwd`, `.ls`). and if the line tokenization is also done for them (with the usual token of `;`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:249,usability,usab,usable,249,"root executables :: add functions argument to the main root executable; ### Explain what you would like to see improved. It is just a point of view but IMHO, it would be easier if all additional functionality (hadd, mkdir, cp, ls, etc...). would be usable as arguments/verbs to root: `root -hadd ...`, `root -ls ...` . Moreover `--` token for end of global arguments would be useful in the following way:. * if verb is present (cp, ls, mv, hadd , etc...) whatever is after `--` are arguments for the verb (otherwise the verb should be the last). * if there is no verb present whatever is after `--` is text to be passed to root as code (replacement/addition to -e). this can become even more useful if these verbs are also converted to special commands (like `.pwd`, `.ls`). and if the line tokenization is also done for them (with the usual token of `;`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8447:744,usability,command,commands,744,"root executables :: add functions argument to the main root executable; ### Explain what you would like to see improved. It is just a point of view but IMHO, it would be easier if all additional functionality (hadd, mkdir, cp, ls, etc...). would be usable as arguments/verbs to root: `root -hadd ...`, `root -ls ...` . Moreover `--` token for end of global arguments would be useful in the following way:. * if verb is present (cp, ls, mv, hadd , etc...) whatever is after `--` are arguments for the verb (otherwise the verb should be the last). * if there is no verb present whatever is after `--` is text to be passed to root as code (replacement/addition to -e). this can become even more useful if these verbs are also converted to special commands (like `.pwd`, `.ls`). and if the line tokenization is also done for them (with the usual token of `;`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8447
https://github.com/root-project/root/issues/8448:641,availability,down,download,641,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:204,deployability,instal,install,204,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:370,deployability,instal,install,370,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:439,deployability,instal,install,439,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:702,deployability,build,build,702,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:744,deployability,build,build,744,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:983,deployability,build,build,983,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:994,deployability,build,build,994,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:1019,deployability,instal,install,1019,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:1032,deployability,build,build,1032,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:1084,deployability,version,version,1084,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:1084,integrability,version,version,1084,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:346,interoperability,share,shared,346,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:246,modifiability,variab,variables,246,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:1084,modifiability,version,version,1084,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8448:402,usability,behavi,behavior,402,"Cannot compile root to produce static libraries; - [X] Checked for duplicates. ### Describe the bug. I am compiling root including the `-DBUILD_SHARED_LIBS=OFF` option that according to https://root.cern/install/build_from_source/#relevant-cmake-variables should result in static libraries to be compiled. However, when running this, I still get shared libraries in the install location:. ### Expected behavior. Getting static libs in the install direction:. ```. ❯ ls static-root/lib/*.so | wc -l. 105. ❯ ls static-root/lib/*.a | wc -l. zsh: no matches found: static-root/lib/*.a. 0. ```. ### To Reproduce. ```. $ curl -L https://root.cern/download/root_v6.24.00.source.tar.gz | tar xz . $ mkdir root-build. $ cmake -S ./root-6.24.00/ -B root-build \. 	-DCMAKE_INSTALL_PREFIX=$HOME/.local/static-root \. 	-DBUILD_SHARED_LIBS=off \. 	-Dxrootd=off -Dmysql=off -Dpgsql=off -Dpyroot=off \. 	-Droofit=off -Ddataframe=off -Dspectrum=off -Dtmva=off \. 	-Dfitsio=off -Dfftw3=off. $ cmake --build root-build -- -j 8. $ cmake --install root-build. ```. ### Setup. Manjaro using gcc 11.1, root version 6.24.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8448
https://github.com/root-project/root/issues/8450:306,deployability,updat,update,306,"[DF] `Display` gets confused by friend columns, prints them twice; The following code:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. int main() {. ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;. opts.fMode = ""update"";. ROOT::RDataFrame(""t1"", ""f.root""). .Define(""x"", ""idx*idx""). .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");. auto *tmain = f.Get<TTree>(""t1"");. auto *tfriend = f.Get<TTree>(""t2"");. tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;. }. ```. prints. ```. idx | t2.x | x | t2.idx |. 0 | 0 | 0 | 0 |. 1 | 1 | 1 | 1 |. 2 | 4 | 4 | 2 |. 3 | 9 | 9 | 3 |. 4 | 16 | 16 | 4 |. 5 | 25 | 25 | 5 |. ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8450
https://github.com/root-project/root/issues/8450:1151,deployability,log,logic,1151,"[DF] `Display` gets confused by friend columns, prints them twice; The following code:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. int main() {. ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;. opts.fMode = ""update"";. ROOT::RDataFrame(""t1"", ""f.root""). .Define(""x"", ""idx*idx""). .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");. auto *tmain = f.Get<TTree>(""t1"");. auto *tfriend = f.Get<TTree>(""t2"");. tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;. }. ```. prints. ```. idx | t2.x | x | t2.idx |. 0 | 0 | 0 | 0 |. 1 | 1 | 1 | 1 |. 2 | 4 | 4 | 2 |. 3 | 9 | 9 | 3 |. 4 | 16 | 16 | 4 |. 5 | 25 | 25 | 5 |. ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8450
https://github.com/root-project/root/issues/8450:306,safety,updat,update,306,"[DF] `Display` gets confused by friend columns, prints them twice; The following code:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. int main() {. ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;. opts.fMode = ""update"";. ROOT::RDataFrame(""t1"", ""f.root""). .Define(""x"", ""idx*idx""). .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");. auto *tmain = f.Get<TTree>(""t1"");. auto *tfriend = f.Get<TTree>(""t2"");. tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;. }. ```. prints. ```. idx | t2.x | x | t2.idx |. 0 | 0 | 0 | 0 |. 1 | 1 | 1 | 1 |. 2 | 4 | 4 | 2 |. 3 | 9 | 9 | 3 |. 4 | 16 | 16 | 4 |. 5 | 25 | 25 | 5 |. ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8450
https://github.com/root-project/root/issues/8450:911,safety,valid,valid,911,"[DF] `Display` gets confused by friend columns, prints them twice; The following code:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. int main() {. ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;. opts.fMode = ""update"";. ROOT::RDataFrame(""t1"", ""f.root""). .Define(""x"", ""idx*idx""). .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");. auto *tmain = f.Get<TTree>(""t1"");. auto *tfriend = f.Get<TTree>(""t2"");. tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;. }. ```. prints. ```. idx | t2.x | x | t2.idx |. 0 | 0 | 0 | 0 |. 1 | 1 | 1 | 1 |. 2 | 4 | 4 | 2 |. 3 | 9 | 9 | 3 |. 4 | 16 | 16 | 4 |. 5 | 25 | 25 | 5 |. ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8450
https://github.com/root-project/root/issues/8450:1096,safety,valid,valid,1096,"[DF] `Display` gets confused by friend columns, prints them twice; The following code:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. int main() {. ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;. opts.fMode = ""update"";. ROOT::RDataFrame(""t1"", ""f.root""). .Define(""x"", ""idx*idx""). .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");. auto *tmain = f.Get<TTree>(""t1"");. auto *tfriend = f.Get<TTree>(""t2"");. tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;. }. ```. prints. ```. idx | t2.x | x | t2.idx |. 0 | 0 | 0 | 0 |. 1 | 1 | 1 | 1 |. 2 | 4 | 4 | 2 |. 3 | 9 | 9 | 3 |. 4 | 16 | 16 | 4 |. 5 | 25 | 25 | 5 |. ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8450
https://github.com/root-project/root/issues/8450:1151,safety,log,logic,1151,"[DF] `Display` gets confused by friend columns, prints them twice; The following code:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. int main() {. ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;. opts.fMode = ""update"";. ROOT::RDataFrame(""t1"", ""f.root""). .Define(""x"", ""idx*idx""). .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");. auto *tmain = f.Get<TTree>(""t1"");. auto *tfriend = f.Get<TTree>(""t2"");. tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;. }. ```. prints. ```. idx | t2.x | x | t2.idx |. 0 | 0 | 0 | 0 |. 1 | 1 | 1 | 1 |. 2 | 4 | 4 | 2 |. 3 | 9 | 9 | 3 |. 4 | 16 | 16 | 4 |. 5 | 25 | 25 | 5 |. ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8450
https://github.com/root-project/root/issues/8450:306,security,updat,update,306,"[DF] `Display` gets confused by friend columns, prints them twice; The following code:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. int main() {. ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;. opts.fMode = ""update"";. ROOT::RDataFrame(""t1"", ""f.root""). .Define(""x"", ""idx*idx""). .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");. auto *tmain = f.Get<TTree>(""t1"");. auto *tfriend = f.Get<TTree>(""t2"");. tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;. }. ```. prints. ```. idx | t2.x | x | t2.idx |. 0 | 0 | 0 | 0 |. 1 | 1 | 1 | 1 |. 2 | 4 | 4 | 2 |. 3 | 9 | 9 | 3 |. 4 | 16 | 16 | 4 |. 5 | 25 | 25 | 5 |. ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8450
https://github.com/root-project/root/issues/8450:1151,security,log,logic,1151,"[DF] `Display` gets confused by friend columns, prints them twice; The following code:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. int main() {. ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;. opts.fMode = ""update"";. ROOT::RDataFrame(""t1"", ""f.root""). .Define(""x"", ""idx*idx""). .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");. auto *tmain = f.Get<TTree>(""t1"");. auto *tfriend = f.Get<TTree>(""t2"");. tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;. }. ```. prints. ```. idx | t2.x | x | t2.idx |. 0 | 0 | 0 | 0 |. 1 | 1 | 1 | 1 |. 2 | 4 | 4 | 2 |. 3 | 9 | 9 | 3 |. 4 | 16 | 16 | 4 |. 5 | 25 | 25 | 5 |. ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8450
https://github.com/root-project/root/issues/8450:1151,testability,log,logic,1151,"[DF] `Display` gets confused by friend columns, prints them twice; The following code:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TFile.h>. #include <TTree.h>. int main() {. ROOT::RDataFrame(32).Define(""idx"", ""rdfentry_"").Snapshot(""t1"", ""f.root"");. ROOT::RDF::RSnapshotOptions opts;. opts.fMode = ""update"";. ROOT::RDataFrame(""t1"", ""f.root""). .Define(""x"", ""idx*idx""). .Snapshot(""t2"", ""f.root"", {""x"", ""idx""}, opts);. TFile f(""f.root"");. auto *tmain = f.Get<TTree>(""t1"");. auto *tfriend = f.Get<TTree>(""t2"");. tmain->AddFriend(tfriend);. ROOT::RDataFrame(*tmain).Display("".*"", 100)->Print();. return 0;. }. ```. prints. ```. idx | t2.x | x | t2.idx |. 0 | 0 | 0 | 0 |. 1 | 1 | 1 | 1 |. 2 | 4 | 4 | 2 |. 3 | 9 | 9 | 3 |. 4 | 16 | 16 | 4 |. 5 | 25 | 25 | 5 |. ```. where `idx` and `t2.idx` are actually two different columns (one in the main tree and the other in the friend tree) but `x` and `t2.x` are two valid spellings of the _same_ column, which should then be printed only once. I think `Display` gets tripped up by the output of `RLoopManager::GetColumnNames()`, which reports the two valid spellings of `x`. It should instead use the same logic as `Snapshot`, which removes duplicates.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8450
https://github.com/root-project/root/pull/8451:215,deployability,build,build,215,"Simplify Doxyfile; With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8451
https://github.com/root-project/root/pull/8451:82,safety,INPUT,INPUT,82,"Simplify Doxyfile; With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8451
https://github.com/root-project/root/pull/8451:0,testability,Simpl,Simplify,0,"Simplify Doxyfile; With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8451
https://github.com/root-project/root/pull/8451:0,usability,Simpl,Simplify,0,"Simplify Doxyfile; With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8451
https://github.com/root-project/root/pull/8451:82,usability,INPUT,INPUT,82,"Simplify Doxyfile; With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8451
https://github.com/root-project/root/pull/8451:225,usability,document,documentation,225,"Simplify Doxyfile; With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8451
https://github.com/root-project/root/pull/8451:346,usability,guid,guide,346,"Simplify Doxyfile; With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8451
https://github.com/root-project/root/pull/8451:446,usability,guid,guide,446,"Simplify Doxyfile; With this PR the doxygen directory (./) is not included in the INPUT list of files. Only the top file `mainpage.md` is listed . This way we do not need to exclude the macros and scripts needed to build the documentation. Also the temporary file create in the doxygen directory do not pollute the list of files in the reference guide. Finally, the file `launcher.py` in the `tutorials` directory, is excluded from the reference guide.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8451
https://github.com/root-project/root/pull/8452:346,deployability,Contain,Contains,346,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:395,deployability,depend,dependent,395,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:245,energy efficiency,Current,Currently,245,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:160,integrability,sub,subclass,160,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:395,integrability,depend,dependent,395,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:526,integrability,rout,routines,526,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:227,interoperability,specif,specific,227,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:1047,interoperability,distribut,distributes,1047,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:359,modifiability,required chang,required changes,359,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:395,modifiability,depend,dependent,395,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:630,modifiability,reu,reused,630,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:395,safety,depend,dependent,395,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:395,testability,depend,dependent,395,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:27,usability,custom,customization,27,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:264,usability,support,support,264,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:306,usability,user,user,306,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:379,usability,support,support,379,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:742,usability,user,user,742,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:970,usability,user,user,970,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/pull/8452:1130,usability,close,closes,1130,"[ntuple] DAOS object class customization (2/2): provide `RNTupleWriteOptionsDaos`; This pull-request is a follow-up of #8402. `RNTupleWriteOptionsDaos`, i.e. a subclass of `RNTupleWriteOptions`, may now be used to provide DAOS-specific options. Currently, we only support setting the object class used for user data OIDs. ## Changes or fixes:. - Contains the required changes to support backend-dependent options: classes derived from `RNTupleWriteOptions` may carry additional options. - String serialization/deserialization routines moved to the `ROOT::Experimental::Internal::RNTupleSerialization` namespace, where they can be reused. - RPageStorageDaos: the provided object class, if given, is used for generating the OIDs that relate to user data. `OC_SX` is always used to store metadata (i.e. header/footer and anchor). The object class must be known to read the ntuple; thus, the object class name is stored in the anchor. - Changed the default object class for user data to the more conservative `OC_SX` (before was `OC_RP_XSF`). `OC_SX` distributes data over all the targets and is probably a more sane default. This PR closes issue #8205.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8452
https://github.com/root-project/root/issues/8453:895,availability,Operat,Operating,895,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:970,availability,down,download,970,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:816,deployability,build,build,816,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:883,deployability,version,version,883,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:952,deployability,instal,install,952,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:883,integrability,version,version,883,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:883,modifiability,version,version,883,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:770,safety,input,input,770,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:1024,testability,context,context,1024,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:1053,testability,context,context,1053,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:414,usability,clear,clear,414,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:462,usability,behavi,behavior,462,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:493,usability,behavi,behavior,493,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:511,usability,clear,clear,511,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:625,usability,behavi,behavior,625,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/issues/8453:770,usability,input,input,770,"segmentation violation; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8453
https://github.com/root-project/root/pull/8455:30,availability,error,error,30,[skip-ci] typos fix; . Syntax error in the markdown bullet list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8455
https://github.com/root-project/root/pull/8455:30,performance,error,error,30,[skip-ci] typos fix; . Syntax error in the markdown bullet list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8455
https://github.com/root-project/root/pull/8455:30,safety,error,error,30,[skip-ci] typos fix; . Syntax error in the markdown bullet list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8455
https://github.com/root-project/root/pull/8455:30,usability,error,error,30,[skip-ci] typos fix; . Syntax error in the markdown bullet list.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8455
https://github.com/root-project/root/pull/8456:80,deployability,build,build,80,[v624][RF] Fix warning: ‘arg’ shadows member of RooTemplateProxy; This PR fixes build warnings in the v6.24 nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8456
https://github.com/root-project/root/pull/8457:241,availability,avail,available,241,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:13,deployability,instal,installation,13,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:74,deployability,instal,installation,74,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:197,deployability,instal,install,197,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:251,deployability,instal,installation,251,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:278,deployability,build,building,278,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:375,deployability,fail,failed-,375,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:241,reliability,availab,available,241,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:375,reliability,fail,failed-,375,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:220,safety,compl,complete,220,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:241,safety,avail,available,241,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:220,security,compl,complete,220,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/pull/8457:241,security,availab,available,241,"[NFC] Remove installation instructions from README, point to website; The installation instructions in the README were outdated: they only. mentioned pre-compiled binaries, while https://root.cern/install offers. a more complete overview of available installation channels. The building instructions were misleading (see e.g. https://root-forum.cern.ch/t/cmake-generate-step-failed-rhel8/45400/16). and incomplete (they don't mention pre-requisites and make certain. assumptions about `pwd` and directory names).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8457
https://github.com/root-project/root/issues/8458:1072,integrability,pub,public,1072,"RLogger warnings; - [x] Checked for duplicates. ### Describe the bug. When using ROOT::RFile in my projects, I get some compiler warnings:. ```. In file included from /opt/root_bld/include/ROOT/RDirectory.hxx:20,. from /opt/root_bld/include/ROOT/RFile.hxx:19,. from zdt-daq/gui/MainWindow.cpp:49:. /opt/root_bld/include/ROOT/RLogger.hxx: In member function ‘void ROOT::Experimental::RLogDiagCount::Increment(ROOT::Experimental::ELogLevel)’:. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kUnset’ not handled in switch [-Wswitch-enum]. switch (severity) {. ^. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kInfo’ not handled in switch [-Wswitch-enum]. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kDebug’ not handled in switch [-Wswitch-enum]. /opt/root_bld/include/ROOT/RLogger.hxx: At global scope:. /opt/root_bld/include/ROOT/RLogger.hxx:136:7: warning: base class ‘class ROOT::Experimental::RLogChannel’ has accessible non-virtual destructor [-Wnon-virtual-dtor]. class RLogManager : public RLogChannel, public RLogHandler {. ^~~~~~~~~~~. ```. ### Expected behavior. No warnings are found. ### Setup. 1. ROOT master. 2. Ubuntu 19. 3. Self-built.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8458
https://github.com/root-project/root/issues/8458:1092,integrability,pub,public,1092,"RLogger warnings; - [x] Checked for duplicates. ### Describe the bug. When using ROOT::RFile in my projects, I get some compiler warnings:. ```. In file included from /opt/root_bld/include/ROOT/RDirectory.hxx:20,. from /opt/root_bld/include/ROOT/RFile.hxx:19,. from zdt-daq/gui/MainWindow.cpp:49:. /opt/root_bld/include/ROOT/RLogger.hxx: In member function ‘void ROOT::Experimental::RLogDiagCount::Increment(ROOT::Experimental::ELogLevel)’:. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kUnset’ not handled in switch [-Wswitch-enum]. switch (severity) {. ^. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kInfo’ not handled in switch [-Wswitch-enum]. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kDebug’ not handled in switch [-Wswitch-enum]. /opt/root_bld/include/ROOT/RLogger.hxx: At global scope:. /opt/root_bld/include/ROOT/RLogger.hxx:136:7: warning: base class ‘class ROOT::Experimental::RLogChannel’ has accessible non-virtual destructor [-Wnon-virtual-dtor]. class RLogManager : public RLogChannel, public RLogHandler {. ^~~~~~~~~~~. ```. ### Expected behavior. No warnings are found. ### Setup. 1. ROOT master. 2. Ubuntu 19. 3. Self-built.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8458
https://github.com/root-project/root/issues/8458:996,security,access,accessible,996,"RLogger warnings; - [x] Checked for duplicates. ### Describe the bug. When using ROOT::RFile in my projects, I get some compiler warnings:. ```. In file included from /opt/root_bld/include/ROOT/RDirectory.hxx:20,. from /opt/root_bld/include/ROOT/RFile.hxx:19,. from zdt-daq/gui/MainWindow.cpp:49:. /opt/root_bld/include/ROOT/RLogger.hxx: In member function ‘void ROOT::Experimental::RLogDiagCount::Increment(ROOT::Experimental::ELogLevel)’:. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kUnset’ not handled in switch [-Wswitch-enum]. switch (severity) {. ^. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kInfo’ not handled in switch [-Wswitch-enum]. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kDebug’ not handled in switch [-Wswitch-enum]. /opt/root_bld/include/ROOT/RLogger.hxx: At global scope:. /opt/root_bld/include/ROOT/RLogger.hxx:136:7: warning: base class ‘class ROOT::Experimental::RLogChannel’ has accessible non-virtual destructor [-Wnon-virtual-dtor]. class RLogManager : public RLogChannel, public RLogHandler {. ^~~~~~~~~~~. ```. ### Expected behavior. No warnings are found. ### Setup. 1. ROOT master. 2. Ubuntu 19. 3. Self-built.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8458
https://github.com/root-project/root/issues/8458:1145,usability,behavi,behavior,1145,"RLogger warnings; - [x] Checked for duplicates. ### Describe the bug. When using ROOT::RFile in my projects, I get some compiler warnings:. ```. In file included from /opt/root_bld/include/ROOT/RDirectory.hxx:20,. from /opt/root_bld/include/ROOT/RFile.hxx:19,. from zdt-daq/gui/MainWindow.cpp:49:. /opt/root_bld/include/ROOT/RLogger.hxx: In member function ‘void ROOT::Experimental::RLogDiagCount::Increment(ROOT::Experimental::ELogLevel)’:. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kUnset’ not handled in switch [-Wswitch-enum]. switch (severity) {. ^. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kInfo’ not handled in switch [-Wswitch-enum]. /opt/root_bld/include/ROOT/RLogger.hxx:72:14: warning: enumeration value ‘kDebug’ not handled in switch [-Wswitch-enum]. /opt/root_bld/include/ROOT/RLogger.hxx: At global scope:. /opt/root_bld/include/ROOT/RLogger.hxx:136:7: warning: base class ‘class ROOT::Experimental::RLogChannel’ has accessible non-virtual destructor [-Wnon-virtual-dtor]. class RLogManager : public RLogChannel, public RLogHandler {. ^~~~~~~~~~~. ```. ### Expected behavior. No warnings are found. ### Setup. 1. ROOT master. 2. Ubuntu 19. 3. Self-built.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8458
https://github.com/root-project/root/issues/8459:22,energy efficiency,load,loading,22,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:37,energy efficiency,core,core,37,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:278,energy efficiency,load,loads,278,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:379,energy efficiency,load,load,379,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:406,energy efficiency,core,core,406,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:22,performance,load,loading,22,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:278,performance,load,loads,278,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:379,performance,load,load,379,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:423,reliability,doe,does,423,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:532,testability,context,context,532,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:561,testability,context,context,561,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:147,usability,help,helpers,147,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/issues/8459:340,usability,behavi,behavior,340,"Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0; - [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. . However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8459
https://github.com/root-project/root/pull/8461:9,availability,error,error,9,[io] Add error message before assert (#8387).; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8461
https://github.com/root-project/root/pull/8461:15,integrability,messag,message,15,[io] Add error message before assert (#8387).; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8461
https://github.com/root-project/root/pull/8461:15,interoperability,messag,message,15,[io] Add error message before assert (#8387).; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8461
https://github.com/root-project/root/pull/8461:9,performance,error,error,9,[io] Add error message before assert (#8387).; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8461
https://github.com/root-project/root/pull/8461:9,safety,error,error,9,[io] Add error message before assert (#8387).; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8461
https://github.com/root-project/root/pull/8461:30,testability,assert,assert,30,[io] Add error message before assert (#8387).; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8461
https://github.com/root-project/root/pull/8461:9,usability,error,error,9,[io] Add error message before assert (#8387).; .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8461
https://github.com/root-project/root/pull/8462:64,availability,failur,failures,64,"Disable tutorials/legacy/thread/threadsh1.C; It causes randomic failures in our nightlies, and being in legacy. code we are happy with disabling the tutorial altogether. As per the discussion at https://mattermost.web.cern.ch/root/pl/g8m58haqp7fejmn3wjumbur78y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8462
https://github.com/root-project/root/pull/8462:64,deployability,fail,failures,64,"Disable tutorials/legacy/thread/threadsh1.C; It causes randomic failures in our nightlies, and being in legacy. code we are happy with disabling the tutorial altogether. As per the discussion at https://mattermost.web.cern.ch/root/pl/g8m58haqp7fejmn3wjumbur78y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8462
https://github.com/root-project/root/pull/8462:64,performance,failur,failures,64,"Disable tutorials/legacy/thread/threadsh1.C; It causes randomic failures in our nightlies, and being in legacy. code we are happy with disabling the tutorial altogether. As per the discussion at https://mattermost.web.cern.ch/root/pl/g8m58haqp7fejmn3wjumbur78y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8462
https://github.com/root-project/root/pull/8462:64,reliability,fail,failures,64,"Disable tutorials/legacy/thread/threadsh1.C; It causes randomic failures in our nightlies, and being in legacy. code we are happy with disabling the tutorial altogether. As per the discussion at https://mattermost.web.cern.ch/root/pl/g8m58haqp7fejmn3wjumbur78y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8462
https://github.com/root-project/root/pull/8463:82,deployability,integr,integrates,82,"[RF] Import remaining RooFit Python examples translated by Clemens Lange; This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:45,integrability,translat,translated,45,"[RF] Import remaining RooFit Python examples translated by Clemens Lange; This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:82,integrability,integr,integrates,82,"[RF] Import remaining RooFit Python examples translated by Clemens Lange; This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:116,integrability,translat,translations,116,"[RF] Import remaining RooFit Python examples translated by Clemens Lange; This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:45,interoperability,translat,translated,45,"[RF] Import remaining RooFit Python examples translated by Clemens Lange; This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:82,interoperability,integr,integrates,82,"[RF] Import remaining RooFit Python examples translated by Clemens Lange; This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:116,interoperability,translat,translations,116,"[RF] Import remaining RooFit Python examples translated by Clemens Lange; This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:82,modifiability,integr,integrates,82,"[RF] Import remaining RooFit Python examples translated by Clemens Lange; This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:82,reliability,integr,integrates,82,"[RF] Import remaining RooFit Python examples translated by Clemens Lange; This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:82,security,integr,integrates,82,"[RF] Import remaining RooFit Python examples translated by Clemens Lange; This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8463:82,testability,integr,integrates,82,"[RF] Import remaining RooFit Python examples translated by Clemens Lange; This PR integrates the remaining tutorial translations that were still missing after https://github.com/root-project/root/pull/8091. After this PR, Jira issue [ROOT-10966](https://sft.its.cern.ch/jira/browse/ROOT-10966) can be resolved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8463
https://github.com/root-project/root/pull/8464:265,deployability,fail,fails,265,"[rcanvas] Imrpove TObjectDrawable and RPadBase, provide df105.py tutorial; 1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation. 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable . 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls. 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. . 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/pull/8464:503,deployability,log,logical,503,"[rcanvas] Imrpove TObjectDrawable and RPadBase, provide df105.py tutorial; 1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation. 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable . 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls. 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. . 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/pull/8464:405,energy efficiency,draw,drawable,405,"[rcanvas] Imrpove TObjectDrawable and RPadBase, provide df105.py tutorial; 1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation. 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable . 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls. 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. . 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/pull/8464:806,energy efficiency,draw,draw,806,"[rcanvas] Imrpove TObjectDrawable and RPadBase, provide df105.py tutorial; 1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation. 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable . 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls. 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. . 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/pull/8464:1,reliability,rca,rcanvas,1,"[rcanvas] Imrpove TObjectDrawable and RPadBase, provide df105.py tutorial; 1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation. 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable . 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls. 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. . 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/pull/8464:265,reliability,fail,fails,265,"[rcanvas] Imrpove TObjectDrawable and RPadBase, provide df105.py tutorial; 1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation. 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable . 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls. 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. . 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/pull/8464:503,safety,log,logical,503,"[rcanvas] Imrpove TObjectDrawable and RPadBase, provide df105.py tutorial; 1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation. 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable . 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls. 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. . 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/pull/8464:503,security,log,logical,503,"[rcanvas] Imrpove TObjectDrawable and RPadBase, provide df105.py tutorial; 1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation. 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable . 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls. 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. . 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/pull/8464:503,testability,log,logical,503,"[rcanvas] Imrpove TObjectDrawable and RPadBase, provide df105.py tutorial; 1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation. 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable . 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls. 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. . 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/pull/8464:157,usability,support,support,157,"[rcanvas] Imrpove TObjectDrawable and RPadBase, provide df105.py tutorial; 1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation. 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable . 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls. 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. . 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/pull/8464:642,usability,custom,custom,642,"[rcanvas] Imrpove TObjectDrawable and RPadBase, provide df105.py tutorial; 1. Let use non-owned object in `TObjectDrawable`. This is the only way to provide support of objects like `THStack` and `TLegend` in PyROOT. Provide `TObjectDrawable::Set()` method - PyROOT fails with constructors template arguments evaluation. 2. Provide `Add()`, `AddPad()`, `AddFrame()` methods in RPadBase. All should add new drawable . 3. Make `RPad` constructors private - only RPadBase::AddPad can create new pad. Solves logical problem with `pad->SetParent(this)` calls. 4. Provide `v7/df105.py` tutorial which uses `THStack` and `TLegend`. Demonstrates that custom colors of histogram from THStack can be extracted and transported to client. . 5. Improve original `dataframe/df105_WBosonAnalysis.py` macro to properly use draw options",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8464
https://github.com/root-project/root/issues/8465:1231,availability,slo,slot,1231,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:1273,availability,slo,slot,1273,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:1300,availability,slo,slot,1300,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:1307,availability,slo,slot,1307,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:161,integrability,pub,public,161,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:550,integrability,pub,public,550,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:737,integrability,pub,public,737,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:47,reliability,doe,does,47,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:1231,reliability,slo,slot,1231,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:1273,reliability,slo,slot,1273,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:1300,reliability,slo,slot,1300,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:1307,reliability,slo,slot,1307,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:131,testability,Simpl,SimpleFiller,131,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:170,testability,Simpl,SimpleFiller,170,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:219,testability,Simpl,SimpleFiller,219,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:238,testability,Simpl,SimpleFiller,238,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:266,testability,Simpl,SimpleFiller,266,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:279,testability,Simpl,SimpleFiller,279,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:378,testability,Simpl,SimpleFiller,378,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:1536,testability,Simpl,SimpleFiller,1536,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:131,usability,Simpl,SimpleFiller,131,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:170,usability,Simpl,SimpleFiller,170,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:219,usability,Simpl,SimpleFiller,219,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:238,usability,Simpl,SimpleFiller,238,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:266,usability,Simpl,SimpleFiller,266,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:279,usability,Simpl,SimpleFiller,279,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:378,usability,Simpl,SimpleFiller,378,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/issues/8465:1536,usability,Simpl,SimpleFiller,1536,"[DF] Cannot pass an lvalue to Fill, Book; This does not compile although it should:. ```cpp. #include <ROOT/RDataFrame.hxx>. class SimpleFiller {. TH1D fHisto;. public:. SimpleFiller() : fHisto("""", """", 128, 0., 0.) {}. SimpleFiller(const SimpleFiller &) = default;. SimpleFiller(SimpleFiller &&) = default;. void Fill(double x) { fHisto.Fill(x); }. void Merge(const std::vector<SimpleFiller *> &others). {. TList l;. for (auto *o : others). l.Add(&o->GetHisto());. fHisto.Merge(&l);. }. TH1D &GetHisto() { return fHisto; }. };. class MaxSlotHelper : public ROOT::Detail::RDF::RActionImpl<MaxSlotHelper> {. const std::shared_ptr<unsigned int> fMaxSlot; // final result. std::vector<unsigned int> fMaxSlots; // per-thread partial results. public:. MaxSlotHelper(unsigned int nSlots). : fMaxSlot(std::make_shared<unsigned int>(std::numeric_limits<unsigned int>::lowest())),. fMaxSlots(nSlots, std::numeric_limits<unsigned int>::lowest()). {. }. MaxSlotHelper(MaxSlotHelper &&) = default;. MaxSlotHelper(const MaxSlotHelper &) = delete;. using Result_t = unsigned int;. std::shared_ptr<unsigned int> GetResultPtr() const { return fMaxSlot; }. void Initialize() {}. void InitTask(TTreeReader *, unsigned int) {}. void Exec(unsigned int slot, unsigned int /*slot2*/) { fMaxSlots[slot] = std::max(fMaxSlots[slot], slot); }. void Finalize() { *fMaxSlot = *std::max_element(fMaxSlots.begin(), fMaxSlots.end()); }. std::string GetActionName() { return ""MaxSlot""; }. };. int main() {. auto df = ROOT::RDataFrame(1).Define(""x"", [] { return 1; });. SimpleFiller sf;. auto filled = df.Fill(sf, {""x""});. MaxSlotHelper ms(1);. auto max = df.Book<int>(ms, {""x""});. }. ```. The problem is with the template type deduction using forwarding references, we probably need to pass the `T` through `std::decay` to remove ref/const qualifiers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8465
https://github.com/root-project/root/pull/8467:181,deployability,updat,updated,181,[RF] Pythonizations for RooFit DecayType enum and refactored existing pythonizations; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8467
https://github.com/root-project/root/pull/8467:50,modifiability,refact,refactored,50,[RF] Pythonizations for RooFit DecayType enum and refactored existing pythonizations; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8467
https://github.com/root-project/root/pull/8467:50,performance,refactor,refactored,50,[RF] Pythonizations for RooFit DecayType enum and refactored existing pythonizations; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8467
https://github.com/root-project/root/pull/8467:151,safety,test,tested,151,[RF] Pythonizations for RooFit DecayType enum and refactored existing pythonizations; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8467
https://github.com/root-project/root/pull/8467:181,safety,updat,updated,181,[RF] Pythonizations for RooFit DecayType enum and refactored existing pythonizations; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8467
https://github.com/root-project/root/pull/8467:181,security,updat,updated,181,[RF] Pythonizations for RooFit DecayType enum and refactored existing pythonizations; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8467
https://github.com/root-project/root/pull/8467:151,testability,test,tested,151,[RF] Pythonizations for RooFit DecayType enum and refactored existing pythonizations; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [X] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8467
https://github.com/root-project/root/pull/8468:66,safety,test,tests,66,"[DF] Fix compilation of Book, Fill with lvalue arguments; And add tests. This fixes #8465.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8468
https://github.com/root-project/root/pull/8468:66,testability,test,tests,66,"[DF] Fix compilation of Book, Fill with lvalue arguments; And add tests. This fixes #8465.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8468
https://github.com/root-project/root/issues/8469:29,deployability,fail,fails,29,"Full type name qualification fails for function types / argument types; The underlying bug of https://github.com/root-project/root/issues/8387 is the lack of full qualification of the argument types of function types: with. ```c++. namespace N {. struct S {};. using Func_t = int(S*);. }. ```. `TClass::GetClass(""vector<Func_t>"")` *should* fully qualify the name to `""vector<int(N::S*)>""` but instead leaves it at `""vector<int(S*)>""`: `cling/lib/Utils/AST.cpp`'s `GetPartiallyDesugaredTypeImpl()` checks whether the type is a `TemplateSpecializationType` and iterates over the template args, but it doesn't check whether it's a `FunctionProtoType` to iterate over the argument types. That's a bug which *might* be relevant for cases like this:. ```c++. template <class ACTION>. class ICanBeSerializedJustFine {. ACTION fAction; ///<! int fSerializeThis;. };. ```. Note: this relates (was discovered through) #8387",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8469
https://github.com/root-project/root/issues/8469:888,integrability,discover,discovered,888,"Full type name qualification fails for function types / argument types; The underlying bug of https://github.com/root-project/root/issues/8387 is the lack of full qualification of the argument types of function types: with. ```c++. namespace N {. struct S {};. using Func_t = int(S*);. }. ```. `TClass::GetClass(""vector<Func_t>"")` *should* fully qualify the name to `""vector<int(N::S*)>""` but instead leaves it at `""vector<int(S*)>""`: `cling/lib/Utils/AST.cpp`'s `GetPartiallyDesugaredTypeImpl()` checks whether the type is a `TemplateSpecializationType` and iterates over the template args, but it doesn't check whether it's a `FunctionProtoType` to iterate over the argument types. That's a bug which *might* be relevant for cases like this:. ```c++. template <class ACTION>. class ICanBeSerializedJustFine {. ACTION fAction; ///<! int fSerializeThis;. };. ```. Note: this relates (was discovered through) #8387",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8469
https://github.com/root-project/root/issues/8469:888,interoperability,discover,discovered,888,"Full type name qualification fails for function types / argument types; The underlying bug of https://github.com/root-project/root/issues/8387 is the lack of full qualification of the argument types of function types: with. ```c++. namespace N {. struct S {};. using Func_t = int(S*);. }. ```. `TClass::GetClass(""vector<Func_t>"")` *should* fully qualify the name to `""vector<int(N::S*)>""` but instead leaves it at `""vector<int(S*)>""`: `cling/lib/Utils/AST.cpp`'s `GetPartiallyDesugaredTypeImpl()` checks whether the type is a `TemplateSpecializationType` and iterates over the template args, but it doesn't check whether it's a `FunctionProtoType` to iterate over the argument types. That's a bug which *might* be relevant for cases like this:. ```c++. template <class ACTION>. class ICanBeSerializedJustFine {. ACTION fAction; ///<! int fSerializeThis;. };. ```. Note: this relates (was discovered through) #8387",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8469
https://github.com/root-project/root/issues/8469:29,reliability,fail,fails,29,"Full type name qualification fails for function types / argument types; The underlying bug of https://github.com/root-project/root/issues/8387 is the lack of full qualification of the argument types of function types: with. ```c++. namespace N {. struct S {};. using Func_t = int(S*);. }. ```. `TClass::GetClass(""vector<Func_t>"")` *should* fully qualify the name to `""vector<int(N::S*)>""` but instead leaves it at `""vector<int(S*)>""`: `cling/lib/Utils/AST.cpp`'s `GetPartiallyDesugaredTypeImpl()` checks whether the type is a `TemplateSpecializationType` and iterates over the template args, but it doesn't check whether it's a `FunctionProtoType` to iterate over the argument types. That's a bug which *might* be relevant for cases like this:. ```c++. template <class ACTION>. class ICanBeSerializedJustFine {. ACTION fAction; ///<! int fSerializeThis;. };. ```. Note: this relates (was discovered through) #8387",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8469
https://github.com/root-project/root/issues/8469:599,reliability,doe,doesn,599,"Full type name qualification fails for function types / argument types; The underlying bug of https://github.com/root-project/root/issues/8387 is the lack of full qualification of the argument types of function types: with. ```c++. namespace N {. struct S {};. using Func_t = int(S*);. }. ```. `TClass::GetClass(""vector<Func_t>"")` *should* fully qualify the name to `""vector<int(N::S*)>""` but instead leaves it at `""vector<int(S*)>""`: `cling/lib/Utils/AST.cpp`'s `GetPartiallyDesugaredTypeImpl()` checks whether the type is a `TemplateSpecializationType` and iterates over the template args, but it doesn't check whether it's a `FunctionProtoType` to iterate over the argument types. That's a bug which *might* be relevant for cases like this:. ```c++. template <class ACTION>. class ICanBeSerializedJustFine {. ACTION fAction; ///<! int fSerializeThis;. };. ```. Note: this relates (was discovered through) #8387",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8469
https://github.com/root-project/root/issues/8469:888,usability,discov,discovered,888,"Full type name qualification fails for function types / argument types; The underlying bug of https://github.com/root-project/root/issues/8387 is the lack of full qualification of the argument types of function types: with. ```c++. namespace N {. struct S {};. using Func_t = int(S*);. }. ```. `TClass::GetClass(""vector<Func_t>"")` *should* fully qualify the name to `""vector<int(N::S*)>""` but instead leaves it at `""vector<int(S*)>""`: `cling/lib/Utils/AST.cpp`'s `GetPartiallyDesugaredTypeImpl()` checks whether the type is a `TemplateSpecializationType` and iterates over the template args, but it doesn't check whether it's a `FunctionProtoType` to iterate over the argument types. That's a bug which *might* be relevant for cases like this:. ```c++. template <class ACTION>. class ICanBeSerializedJustFine {. ACTION fAction; ///<! int fSerializeThis;. };. ```. Note: this relates (was discovered through) #8387",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8469
https://github.com/root-project/root/issues/8470:234,deployability,fail,failing,234,"Desugaring involving unknown type name sometimes replace that name with the text ""int""; ```. TClass::GetClass(""vector<int(const Zyx*)>"")->GetName(). ```. returns. ```. (const char *) ""vector<int(const int*)>"". ```. rather than either failing or returning the input as-is. Note that the function parameter in the example must have the `const` keyword to trigger the problem. ```. root [6] TClass::GetClass(""vector<int(Zyx*)>"")->GetName(). ... (const char *) ""vector<int(Zyx*)>"". ```. Having the template parameter being a function (signature) is also essential, without it the result is correct. ```. root [7] TClass::GetClass(""vector<const Zyx*)>"")->GetName(). (const char *) ""vector<const Zyx*)>"". ```. Debugging: `root.exe -b -l -e 'TClass::GetClass(""vector<function<int(const Zyx*,const std::string&)> >"")->GetName()' -q`. We can see that the trouble appears to be triggers inside `ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling `:. ```. reakpoint 2, ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:1168,energy efficiency,core,core,1168,"onst char *) ""vector<int(const int*)>"". ```. rather than either failing or returning the input as-is. Note that the function parameter in the example must have the `const` keyword to trigger the problem. ```. root [6] TClass::GetClass(""vector<int(Zyx*)>"")->GetName(). ... (const char *) ""vector<int(Zyx*)>"". ```. Having the template parameter being a function (signature) is also essential, without it the result is correct. ```. root [7] TClass::GetClass(""vector<const Zyx*)>"")->GetName(). (const char *) ""vector<const Zyx*)>"". ```. Debugging: `root.exe -b -l -e 'TClass::GetClass(""vector<function<int(const Zyx*,const std::string&)> >"")->GetName()' -q`. We can see that the trouble appears to be triggers inside `ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling `:. ```. reakpoint 2, ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041. #4 0x00007ffff7d0a221 in TClass::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:1501,energy efficiency,core,core,1501,"parameter being a function (signature) is also essential, without it the result is correct. ```. root [7] TClass::GetClass(""vector<const Zyx*)>"")->GetName(). (const char *) ""vector<const Zyx*)>"". ```. Debugging: `root.exe -b -l -e 'TClass::GetClass(""vector<function<int(const Zyx*,const std::string&)> >"")->GetName()' -q`. We can see that the trouble appears to be triggers inside `ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling `:. ```. reakpoint 2, ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041. #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957. #5 0x00007ffff78df048 in ?? (). #6 0x0000000000000000 in ?? (). (gdb) n. ..... 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();. (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:1683,energy efficiency,core,core,1683,"onst Zyx*)>"". ```. Debugging: `root.exe -b -l -e 'TClass::GetClass(""vector<function<int(const Zyx*,const std::string&)> >"")->GetName()' -q`. We can see that the trouble appears to be triggers inside `ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling `:. ```. reakpoint 2, ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041. #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957. #5 0x00007ffff78df048 in ?? (). #6 0x0000000000000000 in ?? (). (gdb) n. ..... 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();. (gdb). 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));. (gdb). 639 if (!t.isNull()) {. (gdb) p t.dump(). TemplateSpecializationType 0x555556b681d0 'function<i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:1843,energy efficiency,core,core,1843," trouble appears to be triggers inside `ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling `:. ```. reakpoint 2, ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041. #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957. #5 0x00007ffff78df048 in ?? (). #6 0x0000000000000000 in ?? (). (gdb) n. ..... 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();. (gdb). 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));. (gdb). 639 if (!t.isNull()) {. (gdb) p t.dump(). TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function. |-TemplateArgument type 'int (const int *, const std::string &)'. `-RecordType 0x555556b67b20 'class std",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:2003,energy efficiency,load,load,2003,":TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041. #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957. #5 0x00007ffff78df048 in ?? (). #6 0x0000000000000000 in ?? (). (gdb) n. ..... 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();. (gdb). 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));. (gdb). 639 if (!t.isNull()) {. (gdb) p t.dump(). TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function. |-TemplateArgument type 'int (const int *, const std::string &)'. `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'. `-ClassTemplateSpecialization 0x555556b67a18 'function'. $34 = void. ```. (This ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:2106,energy efficiency,core,core,2106,".., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041. #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957. #5 0x00007ffff78df048 in ?? (). #6 0x0000000000000000 in ?? (). (gdb) n. ..... 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();. (gdb). 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));. (gdb). 639 if (!t.isNull()) {. (gdb) p t.dump(). TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function. |-TemplateArgument type 'int (const int *, const std::string &)'. `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'. `-ClassTemplateSpecialization 0x555556b67a18 'function'. $34 = void. ```. (This likely involves the fact that Clang's type printing routine spell unknown type as 'int' :) ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:2257,energy efficiency,load,load,2257,".., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041. #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957. #5 0x00007ffff78df048 in ?? (). #6 0x0000000000000000 in ?? (). (gdb) n. ..... 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();. (gdb). 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));. (gdb). 639 if (!t.isNull()) {. (gdb) p t.dump(). TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function. |-TemplateArgument type 'int (const int *, const std::string &)'. `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'. `-ClassTemplateSpecialization 0x555556b67a18 'function'. $34 = void. ```. (This likely involves the fact that Clang's type printing routine spell unknown type as 'int' :) ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:2322,energy efficiency,core,core,2322,".., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041. #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957. #5 0x00007ffff78df048 in ?? (). #6 0x0000000000000000 in ?? (). (gdb) n. ..... 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();. (gdb). 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));. (gdb). 639 if (!t.isNull()) {. (gdb) p t.dump(). TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function. |-TemplateArgument type 'int (const int *, const std::string &)'. `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'. `-ClassTemplateSpecialization 0x555556b67a18 'function'. $34 = void. ```. (This likely involves the fact that Clang's type printing routine spell unknown type as 'int' :) ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:3057,integrability,rout,routine,3057,".., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041. #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957. #5 0x00007ffff78df048 in ?? (). #6 0x0000000000000000 in ?? (). (gdb) n. ..... 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();. (gdb). 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));. (gdb). 639 if (!t.isNull()) {. (gdb) p t.dump(). TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function. |-TemplateArgument type 'int (const int *, const std::string &)'. `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'. `-ClassTemplateSpecialization 0x555556b67a18 'function'. $34 = void. ```. (This likely involves the fact that Clang's type printing routine spell unknown type as 'int' :) ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:295,modifiability,paramet,parameter,295,"Desugaring involving unknown type name sometimes replace that name with the text ""int""; ```. TClass::GetClass(""vector<int(const Zyx*)>"")->GetName(). ```. returns. ```. (const char *) ""vector<int(const int*)>"". ```. rather than either failing or returning the input as-is. Note that the function parameter in the example must have the `const` keyword to trigger the problem. ```. root [6] TClass::GetClass(""vector<int(Zyx*)>"")->GetName(). ... (const char *) ""vector<int(Zyx*)>"". ```. Having the template parameter being a function (signature) is also essential, without it the result is correct. ```. root [7] TClass::GetClass(""vector<const Zyx*)>"")->GetName(). (const char *) ""vector<const Zyx*)>"". ```. Debugging: `root.exe -b -l -e 'TClass::GetClass(""vector<function<int(const Zyx*,const std::string&)> >"")->GetName()' -q`. We can see that the trouble appears to be triggers inside `ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling `:. ```. reakpoint 2, ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:503,modifiability,paramet,parameter,503,"Desugaring involving unknown type name sometimes replace that name with the text ""int""; ```. TClass::GetClass(""vector<int(const Zyx*)>"")->GetName(). ```. returns. ```. (const char *) ""vector<int(const int*)>"". ```. rather than either failing or returning the input as-is. Note that the function parameter in the example must have the `const` keyword to trigger the problem. ```. root [6] TClass::GetClass(""vector<int(Zyx*)>"")->GetName(). ... (const char *) ""vector<int(Zyx*)>"". ```. Having the template parameter being a function (signature) is also essential, without it the result is correct. ```. root [7] TClass::GetClass(""vector<const Zyx*)>"")->GetName(). (const char *) ""vector<const Zyx*)>"". ```. Debugging: `root.exe -b -l -e 'TClass::GetClass(""vector<function<int(const Zyx*,const std::string&)> >"")->GetName()' -q`. We can see that the trouble appears to be triggers inside `ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling `:. ```. reakpoint 2, ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:2003,performance,load,load,2003,":TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041. #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957. #5 0x00007ffff78df048 in ?? (). #6 0x0000000000000000 in ?? (). (gdb) n. ..... 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();. (gdb). 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));. (gdb). 639 if (!t.isNull()) {. (gdb) p t.dump(). TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function. |-TemplateArgument type 'int (const int *, const std::string &)'. `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'. `-ClassTemplateSpecialization 0x555556b67a18 'function'. $34 = void. ```. (This ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:2257,performance,load,load,2257,".., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041. #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false). at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957. #5 0x00007ffff78df048 in ?? (). #6 0x0000000000000000 in ?? (). (gdb) n. ..... 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();. (gdb). 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));. (gdb). 639 if (!t.isNull()) {. (gdb) p t.dump(). TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function. |-TemplateArgument type 'int (const int *, const std::string &)'. `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'. `-ClassTemplateSpecialization 0x555556b67a18 'function'. $34 = void. ```. (This likely involves the fact that Clang's type printing routine spell unknown type as 'int' :) ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:234,reliability,fail,failing,234,"Desugaring involving unknown type name sometimes replace that name with the text ""int""; ```. TClass::GetClass(""vector<int(const Zyx*)>"")->GetName(). ```. returns. ```. (const char *) ""vector<int(const int*)>"". ```. rather than either failing or returning the input as-is. Note that the function parameter in the example must have the `const` keyword to trigger the problem. ```. root [6] TClass::GetClass(""vector<int(Zyx*)>"")->GetName(). ... (const char *) ""vector<int(Zyx*)>"". ```. Having the template parameter being a function (signature) is also essential, without it the result is correct. ```. root [7] TClass::GetClass(""vector<const Zyx*)>"")->GetName(). (const char *) ""vector<const Zyx*)>"". ```. Debugging: `root.exe -b -l -e 'TClass::GetClass(""vector<function<int(const Zyx*,const std::string&)> >"")->GetName()' -q`. We can see that the trouble appears to be triggers inside `ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling `:. ```. reakpoint 2, ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:259,safety,input,input,259,"Desugaring involving unknown type name sometimes replace that name with the text ""int""; ```. TClass::GetClass(""vector<int(const Zyx*)>"")->GetName(). ```. returns. ```. (const char *) ""vector<int(const int*)>"". ```. rather than either failing or returning the input as-is. Note that the function parameter in the example must have the `const` keyword to trigger the problem. ```. root [6] TClass::GetClass(""vector<int(Zyx*)>"")->GetName(). ... (const char *) ""vector<int(Zyx*)>"". ```. Having the template parameter being a function (signature) is also essential, without it the result is correct. ```. root [7] TClass::GetClass(""vector<const Zyx*)>"")->GetName(). (const char *) ""vector<const Zyx*)>"". ```. Debugging: `root.exe -b -l -e 'TClass::GetClass(""vector<function<int(const Zyx*,const std::string&)> >"")->GetName()' -q`. We can see that the trouble appears to be triggers inside `ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling `:. ```. reakpoint 2, ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:531,security,sign,signature,531,"Desugaring involving unknown type name sometimes replace that name with the text ""int""; ```. TClass::GetClass(""vector<int(const Zyx*)>"")->GetName(). ```. returns. ```. (const char *) ""vector<int(const int*)>"". ```. rather than either failing or returning the input as-is. Note that the function parameter in the example must have the `const` keyword to trigger the problem. ```. root [6] TClass::GetClass(""vector<int(Zyx*)>"")->GetName(). ... (const char *) ""vector<int(Zyx*)>"". ```. Having the template parameter being a function (signature) is also essential, without it the result is correct. ```. root [7] TClass::GetClass(""vector<const Zyx*)>"")->GetName(). (const char *) ""vector<const Zyx*)>"". ```. Debugging: `root.exe -b -l -e 'TClass::GetClass(""vector<function<int(const Zyx*,const std::string&)> >"")->GetName()' -q`. We can see that the trouble appears to be triggers inside `ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling `:. ```. reakpoint 2, ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8470:259,usability,input,input,259,"Desugaring involving unknown type name sometimes replace that name with the text ""int""; ```. TClass::GetClass(""vector<int(const Zyx*)>"")->GetName(). ```. returns. ```. (const char *) ""vector<int(const int*)>"". ```. rather than either failing or returning the input as-is. Note that the function parameter in the example must have the `const` keyword to trigger the problem. ```. root [6] TClass::GetClass(""vector<int(Zyx*)>"")->GetName(). ... (const char *) ""vector<int(Zyx*)>"". ```. Having the template parameter being a function (signature) is also essential, without it the result is correct. ```. root [7] TClass::GetClass(""vector<const Zyx*)>"")->GetName(). (const char *) ""vector<const Zyx*)>"". ```. Debugging: `root.exe -b -l -e 'TClass::GetClass(""vector<function<int(const Zyx*,const std::string&)> >"")->GetName()' -q`. We can see that the trouble appears to be triggers inside `ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling `:. ```. reakpoint 2, ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. 615 {. (gdb) p tname.c_str(). $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>"". (gdb) bt. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true). at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615. #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437. #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854. #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8470
https://github.com/root-project/root/issues/8471:766,testability,context,context,766,"Add Lambert W function to TMath; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I wanted to use the [Lambert W function](https://en.wikipedia.org/wiki/Lambert_W_function) to find a root of a function. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Having a `TMath::LambertW(Double_t x, Int_t k, Double_t tol=1e-10)` and `TMath::LambertW(TComplex x, Int_t k, Double_t tol=1e-10)`. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. Of course one can just solve it numerically by finding a root. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. [On the Lambert W function](https://cs.uwaterloo.ca/research/tr/1993/03/W.pdf) provides some theoretical background. I'm aware of two implementations of the Lambert W function in code:. https://github.com/fredrik-johansson/mpmath/blob/c11db84b3237bd8fc6721f5a0c5d7c0c98a24dc1/mpmath/functions/functions.py#L327-L490. and. https://github.com/scipy/scipy/blob/master/scipy/special/_lambertw.pxd. which is based on the first one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8471
https://github.com/root-project/root/issues/8471:795,testability,context,context,795,"Add Lambert W function to TMath; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I wanted to use the [Lambert W function](https://en.wikipedia.org/wiki/Lambert_W_function) to find a root of a function. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Having a `TMath::LambertW(Double_t x, Int_t k, Double_t tol=1e-10)` and `TMath::LambertW(TComplex x, Int_t k, Double_t tol=1e-10)`. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. Of course one can just solve it numerically by finding a root. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. [On the Lambert W function](https://cs.uwaterloo.ca/research/tr/1993/03/W.pdf) provides some theoretical background. I'm aware of two implementations of the Lambert W function in code:. https://github.com/fredrik-johansson/mpmath/blob/c11db84b3237bd8fc6721f5a0c5d7c0c98a24dc1/mpmath/functions/functions.py#L327-L490. and. https://github.com/scipy/scipy/blob/master/scipy/special/_lambertw.pxd. which is based on the first one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8471
https://github.com/root-project/root/issues/8471:108,usability,clear,clear,108,"Add Lambert W function to TMath; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I wanted to use the [Lambert W function](https://en.wikipedia.org/wiki/Lambert_W_function) to find a root of a function. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Having a `TMath::LambertW(Double_t x, Int_t k, Double_t tol=1e-10)` and `TMath::LambertW(TComplex x, Int_t k, Double_t tol=1e-10)`. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. Of course one can just solve it numerically by finding a root. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. [On the Lambert W function](https://cs.uwaterloo.ca/research/tr/1993/03/W.pdf) provides some theoretical background. I'm aware of two implementations of the Lambert W function in code:. https://github.com/fredrik-johansson/mpmath/blob/c11db84b3237bd8fc6721f5a0c5d7c0c98a24dc1/mpmath/functions/functions.py#L327-L490. and. https://github.com/scipy/scipy/blob/master/scipy/special/_lambertw.pxd. which is based on the first one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8471
https://github.com/root-project/root/issues/8471:385,usability,clear,clear,385,"Add Lambert W function to TMath; ### Is your feature request related to a problem? Please describe. <!--. A clear and concise description of what the problem is. E.g ""I always have to [...] when I want to [...]"". -->. I wanted to use the [Lambert W function](https://en.wikipedia.org/wiki/Lambert_W_function) to find a root of a function. ### Describe the solution you'd like. <!--. A clear and concise description of what you want to happen. -->. Having a `TMath::LambertW(Double_t x, Int_t k, Double_t tol=1e-10)` and `TMath::LambertW(TComplex x, Int_t k, Double_t tol=1e-10)`. ### Describe alternatives you've considered. <!--. Can you think of alternative solutions or features? -->. Of course one can just solve it numerically by finding a root. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->. [On the Lambert W function](https://cs.uwaterloo.ca/research/tr/1993/03/W.pdf) provides some theoretical background. I'm aware of two implementations of the Lambert W function in code:. https://github.com/fredrik-johansson/mpmath/blob/c11db84b3237bd8fc6721f5a0c5d7c0c98a24dc1/mpmath/functions/functions.py#L327-L490. and. https://github.com/scipy/scipy/blob/master/scipy/special/_lambertw.pxd. which is based on the first one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8471
https://github.com/root-project/root/pull/8472:76,deployability,build,build,76,[RF] Fix missing initializer warnings in MemPoolForRooSets.h; This PR fixes build warnings in the master nightlies. The same fix was originally done for v6.20 in https://github.com/root-project/root/pull/7995.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8472
https://github.com/root-project/root/pull/8473:82,deployability,build,build,82,[v624][RF] Fix missing initializer warnings in MemPoolForRooSets.h; This PR fixes build warnings in the v6.24 nightlies. The same fix was originally done for v6.20 in https://github.com/root-project/root/pull/7995.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8473
https://github.com/root-project/root/issues/8474:18,availability,fault,fault,18,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:103,availability,slo,slot,103,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:229,availability,fault,faults,229,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:911,availability,fault,fault,911,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1595,availability,Operat,Operating,1595,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1670,availability,down,download,1670,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1753,availability,slo,slot,1753,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1802,availability,slo,slot,1802,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1981,availability,slo,slot,1981,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:415,deployability,releas,released,415,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1151,deployability,releas,released,1151,"ripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1160,deployability,version,versions,1160,"h complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no proble",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1516,deployability,build,build,1516,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1583,deployability,version,version,1583,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1652,deployability,instal,install,1652,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1717,deployability,version,version,1717,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1921,deployability,releas,released,1921,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1935,deployability,version,versions,1935,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:18,energy efficiency,fault,fault,18,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:229,energy efficiency,fault,faults,229,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:911,energy efficiency,fault,fault,911,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:921,energy efficiency,draw,drawing,921,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:197,integrability,compon,components,197,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1160,integrability,version,versions,1160,"h complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no proble",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1583,integrability,version,version,1583,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1717,integrability,version,version,1717,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1935,integrability,version,versions,1935,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:197,interoperability,compon,components,197,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:197,modifiability,compon,components,197,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1160,modifiability,version,versions,1160,"h complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no proble",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1583,modifiability,version,version,1583,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1717,modifiability,version,version,1717,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1935,modifiability,version,versions,1935,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:18,performance,fault,fault,18,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:229,performance,fault,faults,229,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:911,performance,fault,fault,911,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:18,reliability,fault,fault,18,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:103,reliability,slo,slot,103,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:229,reliability,fault,faults,229,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:911,reliability,fault,fault,911,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1753,reliability,slo,slot,1753,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1802,reliability,slo,slot,1802,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1981,reliability,slo,slot,1981,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:18,safety,fault,fault,18,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:166,safety,compl,complicated,166,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:229,safety,fault,faults,229,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:911,safety,fault,fault,911,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:929,safety,compl,complicated,929,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1470,safety,input,input,1470,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1952,safety,test,tests,1952,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2068,safety,test,test,2068,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:166,security,compl,complicated,166,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:929,security,compl,complicated,929,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:312,testability,simpl,simple,312,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1824,testability,context,context,1824,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1853,testability,context,context,1853,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1952,testability,test,tests,1952,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2068,testability,test,test,2068,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2128,testability,simpl,simple,2128,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:312,usability,simpl,simple,312,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:832,usability,clear,clear,832,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:880,usability,behavi,behavior,880,"[RF] Segmentation fault in plotOn methid in PyROOT for ROOT>6.25; I am working with dev3 LCG nigthlies slot. . Starting from this week, my PyROOT/RooFit scripts with complicated PDFs with multiple components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1193,usability,behavi,behavior,1193,"components produce segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1211,usability,clear,clear,1211,"e segmentation faults for `plotOn` invocation. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I mak",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1325,usability,behavi,behavior,1325,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:1470,usability,input,input,1470,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/issues/8474:2128,usability,simpl,simple,2128,"ion. Unfortunately I can not reproduce the problem with simple PDFs. . There were no problem with last week nighlies as well as there are no problems with any released verisons of ROOT. - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. Segmentation fault for drawing complicated multicomponent PDFs in PyROOT/RooFit in calling for `plotOn` method. Problem appears from the start of this week. There were no problem till with last week nightlies . as well as there are no problems with any released versions of ROOT. . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. 1. ROOT version 6.25.01 from dev3 nightlies slot . 2. lxplus.cern.ch . 3. LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->. There are no problems with any released ROOT versions, and my tests with dev-3 LCG nightly slot till the mid mid of the previous week were successfull (unfortnuately I'venot run test Last Thursday and Friday). There are no problems with ""simple"" PDFs, and there is no problems with PDF-only plots. Problem appears when I make plot of DATA with multicomponent PDFs. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8474
https://github.com/root-project/root/pull/8476:32,availability,error,error,32,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:567,availability,error,error,567,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:321,deployability,fail,fails,321,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:38,integrability,messag,message,38,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:161,integrability,wrap,wrapper,161,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:574,integrability,messag,message,574,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:671,integrability,messag,message,671,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:986,integrability,wrap,wrapper,986,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:38,interoperability,messag,message,38,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:161,interoperability,wrapper,wrapper,161,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:574,interoperability,messag,message,574,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:671,interoperability,messag,message,671,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:986,interoperability,wrapper,wrapper,986,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:181,modifiability,inherit,inherits,181,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:295,modifiability,inherit,inheritance,295,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:620,modifiability,inherit,inheritance,620,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:1013,modifiability,inherit,inheritance,1013,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:1127,modifiability,inherit,inheritance,1127,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:32,performance,error,error,32,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:221,performance,I/O,I/O,221,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:567,performance,error,error,567,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:321,reliability,fail,fails,321,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:32,safety,error,error,32,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:567,safety,error,error,567,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:900,safety,prevent,preventing,900,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:900,security,preven,preventing,900,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:32,usability,error,error,32,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:251,usability,support,supported,251,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:567,usability,error,error,567,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:591,usability,user,user,591,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:691,usability,custom,custom,691,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8476:1171,usability,support,supported,1171,"[PyROOT] Provide an explanatory error message when pickling cross-inh…; …eritance Python objects. When a Python class derives from a C++ class, cppyy jits a C++ wrapper class. that inherits from the base C++	class. Since I/O on jitted classes is not. supported by ROOT, trying to pickle a cross-inheritance Python object fails. For this to work, dictionaries would need to be generated for the jitted class. before serialization, and they would need to be carried along for deserialization too. Therefore, this commit replaces the previous segfault by an explanatory error. message when the user tries to pickle a cross-inheritance Python object. It is. suggested in the message to define a custom `__reduce__` method for the derived. Python class. That `__reduce__` method can e.g. return a callable and some. arguments with which the derived object can be constructed during deserialization,. thus preventing any attempt to serialize the object itself. The old PyROOT did not jit any wrapper class during cross-inheritance (so it did. not suffer from the problem described above), but serialization/deserialization. of cross-inheritance Python objects was not properly supported anyway,. since the class of the unpickled object was the base C++ class, not the derived. Python class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8476
https://github.com/root-project/root/pull/8477:97,availability,error,errors,97,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:147,availability,error,errors,147,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:230,availability,error,error,230,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:412,availability,error,error,412,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:97,performance,error,errors,97,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:147,performance,error,errors,147,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:230,performance,error,error,230,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:412,performance,error,error,412,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:97,safety,error,errors,97,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:147,safety,error,errors,147,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:230,safety,error,error,230,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:412,safety,error,error,412,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:97,usability,error,errors,97,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:147,usability,error,errors,147,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:230,usability,error,error,230,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8477:412,usability,error,error,412,"Fix compilation with gcc 8.2 and c++17; The changes in this pull request fix several compilation errors when compiling with gcc 8.2 and c++17. The errors are all of the type:. ```. tree/dataframe/src/RDFInterfaceUtils.cxx:155:39: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return std::string(std::move(ss));. ^. tree/dataframe/src/RDFInterfaceUtils.cxx:179:63: error: call of overloaded ‘basic_string(std::remove_reference<TString&>::type)’ is ambiguous. return ParsedExpression{std::string(std::move(exprWithVars)), std::move(usedCols), std::move(varNames)};. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8477
https://github.com/root-project/root/pull/8478:204,deployability,updat,updated,204,Clarify difference TFile::Open and new TFile() when file does not exist; # This Pull request:. ## Changes or fixes:. Clarify how to check for non existing file when using TFile Open. ## Checklist:. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8478
https://github.com/root-project/root/pull/8478:57,reliability,doe,does,57,Clarify difference TFile::Open and new TFile() when file does not exist; # This Pull request:. ## Changes or fixes:. Clarify how to check for non existing file when using TFile Open. ## Checklist:. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8478
https://github.com/root-project/root/pull/8478:204,safety,updat,updated,204,Clarify difference TFile::Open and new TFile() when file does not exist; # This Pull request:. ## Changes or fixes:. Clarify how to check for non existing file when using TFile Open. ## Checklist:. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8478
https://github.com/root-project/root/pull/8478:204,security,updat,updated,204,Clarify difference TFile::Open and new TFile() when file does not exist; # This Pull request:. ## Changes or fixes:. Clarify how to check for non existing file when using TFile Open. ## Checklist:. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8478
https://github.com/root-project/root/pull/8479:448,deployability,contain,containing,448,[skip-ci] move the group tutorials definition in tutorials/index.md; This PR implements what is requested here https://github.com/root-project/root/issues/8342. The tutorials' groups definition are moved in tutorials/index.md . The tutorials will appear on the web in the order defined in that file. So we can now control the order. The \brief of each tutorials' groups is also moved in tutorials/index.md. Therefore the tutorials/*/index.md files containing only the group definition and a \brief can be removed. . Those containing more are kept and an extented documentation for those tutorials' groups can be written there. tutorials/demos.C has been fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8479
https://github.com/root-project/root/pull/8479:522,deployability,contain,containing,522,[skip-ci] move the group tutorials definition in tutorials/index.md; This PR implements what is requested here https://github.com/root-project/root/issues/8342. The tutorials' groups definition are moved in tutorials/index.md . The tutorials will appear on the web in the order defined in that file. So we can now control the order. The \brief of each tutorials' groups is also moved in tutorials/index.md. Therefore the tutorials/*/index.md files containing only the group definition and a \brief can be removed. . Those containing more are kept and an extented documentation for those tutorials' groups can be written there. tutorials/demos.C has been fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8479
https://github.com/root-project/root/pull/8479:554,modifiability,exten,extented,554,[skip-ci] move the group tutorials definition in tutorials/index.md; This PR implements what is requested here https://github.com/root-project/root/issues/8342. The tutorials' groups definition are moved in tutorials/index.md . The tutorials will appear on the web in the order defined in that file. So we can now control the order. The \brief of each tutorials' groups is also moved in tutorials/index.md. Therefore the tutorials/*/index.md files containing only the group definition and a \brief can be removed. . Those containing more are kept and an extented documentation for those tutorials' groups can be written there. tutorials/demos.C has been fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8479
https://github.com/root-project/root/pull/8479:314,security,control,control,314,[skip-ci] move the group tutorials definition in tutorials/index.md; This PR implements what is requested here https://github.com/root-project/root/issues/8342. The tutorials' groups definition are moved in tutorials/index.md . The tutorials will appear on the web in the order defined in that file. So we can now control the order. The \brief of each tutorials' groups is also moved in tutorials/index.md. Therefore the tutorials/*/index.md files containing only the group definition and a \brief can be removed. . Those containing more are kept and an extented documentation for those tutorials' groups can be written there. tutorials/demos.C has been fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8479
https://github.com/root-project/root/pull/8479:314,testability,control,control,314,[skip-ci] move the group tutorials definition in tutorials/index.md; This PR implements what is requested here https://github.com/root-project/root/issues/8342. The tutorials' groups definition are moved in tutorials/index.md . The tutorials will appear on the web in the order defined in that file. So we can now control the order. The \brief of each tutorials' groups is also moved in tutorials/index.md. Therefore the tutorials/*/index.md files containing only the group definition and a \brief can be removed. . Those containing more are kept and an extented documentation for those tutorials' groups can be written there. tutorials/demos.C has been fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8479
https://github.com/root-project/root/pull/8479:563,usability,document,documentation,563,[skip-ci] move the group tutorials definition in tutorials/index.md; This PR implements what is requested here https://github.com/root-project/root/issues/8342. The tutorials' groups definition are moved in tutorials/index.md . The tutorials will appear on the web in the order defined in that file. So we can now control the order. The \brief of each tutorials' groups is also moved in tutorials/index.md. Therefore the tutorials/*/index.md files containing only the group definition and a \brief can be removed. . Those containing more are kept and an extented documentation for those tutorials' groups can be written there. tutorials/demos.C has been fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8479
https://github.com/root-project/root/pull/8480:102,deployability,updat,updated,102,[TStatistic] fix typo; # This Pull request:. ## Changes or fixes:. Typo in docu. ## Checklist:. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8480
https://github.com/root-project/root/pull/8480:102,safety,updat,updated,102,[TStatistic] fix typo; # This Pull request:. ## Changes or fixes:. Typo in docu. ## Checklist:. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8480
https://github.com/root-project/root/pull/8480:102,security,updat,updated,102,[TStatistic] fix typo; # This Pull request:. ## Changes or fixes:. Typo in docu. ## Checklist:. - [x] updated the docs (if necessary).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8480
https://github.com/root-project/root/issues/8481:30,performance,content,content,30,"TH1 histogram with 64-bit int content; ### Is your feature request related to a problem? Please describe. I sometimes encounter the situation where I need to fill a histogram (always integer weights), thus I use TH1I, however sometimes the number of entries goes over INT_MAX, thus I have to switch to TH1D. It would be really helpful if ROOT provided a TH1L class that has as content Long64_t instead of Int_t. ### Describe the solution you'd like. To have a TH1L class. ### Describe alternatives you've considered. TH1D, but it's not integer weights (counts). ### Additional context. If you think this feature would be accepted, I could prepare a Pull Request, just copy-pasting the TH1I class and replacing TArrayI with TArrayL, as well as the INT_MAX limit checks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8481
https://github.com/root-project/root/issues/8481:377,performance,content,content,377,"TH1 histogram with 64-bit int content; ### Is your feature request related to a problem? Please describe. I sometimes encounter the situation where I need to fill a histogram (always integer weights), thus I use TH1I, however sometimes the number of entries goes over INT_MAX, thus I have to switch to TH1D. It would be really helpful if ROOT provided a TH1L class that has as content Long64_t instead of Int_t. ### Describe the solution you'd like. To have a TH1L class. ### Describe alternatives you've considered. TH1D, but it's not integer weights (counts). ### Additional context. If you think this feature would be accepted, I could prepare a Pull Request, just copy-pasting the TH1I class and replacing TArrayI with TArrayL, as well as the INT_MAX limit checks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8481
https://github.com/root-project/root/issues/8481:577,testability,context,context,577,"TH1 histogram with 64-bit int content; ### Is your feature request related to a problem? Please describe. I sometimes encounter the situation where I need to fill a histogram (always integer weights), thus I use TH1I, however sometimes the number of entries goes over INT_MAX, thus I have to switch to TH1D. It would be really helpful if ROOT provided a TH1L class that has as content Long64_t instead of Int_t. ### Describe the solution you'd like. To have a TH1L class. ### Describe alternatives you've considered. TH1D, but it's not integer weights (counts). ### Additional context. If you think this feature would be accepted, I could prepare a Pull Request, just copy-pasting the TH1I class and replacing TArrayI with TArrayL, as well as the INT_MAX limit checks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8481
https://github.com/root-project/root/issues/8481:327,usability,help,helpful,327,"TH1 histogram with 64-bit int content; ### Is your feature request related to a problem? Please describe. I sometimes encounter the situation where I need to fill a histogram (always integer weights), thus I use TH1I, however sometimes the number of entries goes over INT_MAX, thus I have to switch to TH1D. It would be really helpful if ROOT provided a TH1L class that has as content Long64_t instead of Int_t. ### Describe the solution you'd like. To have a TH1L class. ### Describe alternatives you've considered. TH1D, but it's not integer weights (counts). ### Additional context. If you think this feature would be accepted, I could prepare a Pull Request, just copy-pasting the TH1I class and replacing TArrayI with TArrayL, as well as the INT_MAX limit checks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8481
https://github.com/root-project/root/pull/8482:61,interoperability,compatib,compatib,61,[JupyROOT][8459] Backport changes in utils.py for JupyterLab compatib…; …ility. Related to https://github.com/root-project/root/issues/8459,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8482
https://github.com/root-project/root/pull/8483:0,energy efficiency,Optim,Optimize,0,"Optimize RAttrBase and RAttrValue classes; 1.Split aggregation functionality into `RAttrAggregation` class. It is base class for all kinds of `RAttrLine`, `RAttrFill`, ... 2. Use `union` to reduce memory consumption in RAttrBase. . Probably, one could use `variant` instead, but this requires c++17 and can be avoided. 3. Use `const char *` for name storage in `RAttrBase`- it never changed. If really necessary, one could create deep copy, but just by usage pattern it is not required at all. 4. Use normal data type to keep default value for `RAttrValue`. 5. Let use value classes as `RAttrValue<int>` standalone. Finally reduce `sizeof(RAttrValue<int>)` from 120 to 40 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8483
https://github.com/root-project/root/pull/8483:190,energy efficiency,reduc,reduce,190,"Optimize RAttrBase and RAttrValue classes; 1.Split aggregation functionality into `RAttrAggregation` class. It is base class for all kinds of `RAttrLine`, `RAttrFill`, ... 2. Use `union` to reduce memory consumption in RAttrBase. . Probably, one could use `variant` instead, but this requires c++17 and can be avoided. 3. Use `const char *` for name storage in `RAttrBase`- it never changed. If really necessary, one could create deep copy, but just by usage pattern it is not required at all. 4. Use normal data type to keep default value for `RAttrValue`. 5. Let use value classes as `RAttrValue<int>` standalone. Finally reduce `sizeof(RAttrValue<int>)` from 120 to 40 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8483
https://github.com/root-project/root/pull/8483:624,energy efficiency,reduc,reduce,624,"Optimize RAttrBase and RAttrValue classes; 1.Split aggregation functionality into `RAttrAggregation` class. It is base class for all kinds of `RAttrLine`, `RAttrFill`, ... 2. Use `union` to reduce memory consumption in RAttrBase. . Probably, one could use `variant` instead, but this requires c++17 and can be avoided. 3. Use `const char *` for name storage in `RAttrBase`- it never changed. If really necessary, one could create deep copy, but just by usage pattern it is not required at all. 4. Use normal data type to keep default value for `RAttrValue`. 5. Let use value classes as `RAttrValue<int>` standalone. Finally reduce `sizeof(RAttrValue<int>)` from 120 to 40 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8483
https://github.com/root-project/root/pull/8483:0,performance,Optimiz,Optimize,0,"Optimize RAttrBase and RAttrValue classes; 1.Split aggregation functionality into `RAttrAggregation` class. It is base class for all kinds of `RAttrLine`, `RAttrFill`, ... 2. Use `union` to reduce memory consumption in RAttrBase. . Probably, one could use `variant` instead, but this requires c++17 and can be avoided. 3. Use `const char *` for name storage in `RAttrBase`- it never changed. If really necessary, one could create deep copy, but just by usage pattern it is not required at all. 4. Use normal data type to keep default value for `RAttrValue`. 5. Let use value classes as `RAttrValue<int>` standalone. Finally reduce `sizeof(RAttrValue<int>)` from 120 to 40 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8483
https://github.com/root-project/root/pull/8483:197,performance,memor,memory,197,"Optimize RAttrBase and RAttrValue classes; 1.Split aggregation functionality into `RAttrAggregation` class. It is base class for all kinds of `RAttrLine`, `RAttrFill`, ... 2. Use `union` to reduce memory consumption in RAttrBase. . Probably, one could use `variant` instead, but this requires c++17 and can be avoided. 3. Use `const char *` for name storage in `RAttrBase`- it never changed. If really necessary, one could create deep copy, but just by usage pattern it is not required at all. 4. Use normal data type to keep default value for `RAttrValue`. 5. Let use value classes as `RAttrValue<int>` standalone. Finally reduce `sizeof(RAttrValue<int>)` from 120 to 40 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8483
https://github.com/root-project/root/pull/8483:310,safety,avoid,avoided,310,"Optimize RAttrBase and RAttrValue classes; 1.Split aggregation functionality into `RAttrAggregation` class. It is base class for all kinds of `RAttrLine`, `RAttrFill`, ... 2. Use `union` to reduce memory consumption in RAttrBase. . Probably, one could use `variant` instead, but this requires c++17 and can be avoided. 3. Use `const char *` for name storage in `RAttrBase`- it never changed. If really necessary, one could create deep copy, but just by usage pattern it is not required at all. 4. Use normal data type to keep default value for `RAttrValue`. 5. Let use value classes as `RAttrValue<int>` standalone. Finally reduce `sizeof(RAttrValue<int>)` from 120 to 40 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8483
https://github.com/root-project/root/pull/8483:197,usability,memor,memory,197,"Optimize RAttrBase and RAttrValue classes; 1.Split aggregation functionality into `RAttrAggregation` class. It is base class for all kinds of `RAttrLine`, `RAttrFill`, ... 2. Use `union` to reduce memory consumption in RAttrBase. . Probably, one could use `variant` instead, but this requires c++17 and can be avoided. 3. Use `const char *` for name storage in `RAttrBase`- it never changed. If really necessary, one could create deep copy, but just by usage pattern it is not required at all. 4. Use normal data type to keep default value for `RAttrValue`. 5. Let use value classes as `RAttrValue<int>` standalone. Finally reduce `sizeof(RAttrValue<int>)` from 120 to 40 bytes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8483
https://github.com/root-project/root/pull/8485:950,performance,time,time,950,"[DF] Split `HeadNode` class in different head nodes according to data source; This PR addresses step 1 of #8391. > Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. It also addresses the comments from the original PR regarding the files touched in this PR, except for the following:. * The comments about changing the names of the getters in `TreeHeadNode` and doing the parsing of constructor arguments only once in `__init__.` will be addressed both in another PR. Probably the properties can be removed or changed in favor of having the attributes already set during `__init__` thanks to the mentioned single-pass parsing. * Checking that `glob.glob` behaves similarly to TChain's globbing is left for another time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8485
https://github.com/root-project/root/pull/8485:494,safety,except,except,494,"[DF] Split `HeadNode` class in different head nodes according to data source; This PR addresses step 1 of #8391. > Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. It also addresses the comments from the original PR regarding the files touched in this PR, except for the following:. * The comments about changing the names of the getters in `TreeHeadNode` and doing the parsing of constructor arguments only once in `__init__.` will be addressed both in another PR. Probably the properties can be removed or changed in favor of having the attributes already set during `__init__` thanks to the mentioned single-pass parsing. * Checking that `glob.glob` behaves similarly to TChain's globbing is left for another time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8485
https://github.com/root-project/root/pull/8485:347,usability,user,user,347,"[DF] Split `HeadNode` class in different head nodes according to data source; This PR addresses step 1 of #8391. > Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor. It also addresses the comments from the original PR regarding the files touched in this PR, except for the following:. * The comments about changing the names of the getters in `TreeHeadNode` and doing the parsing of constructor arguments only once in `__init__.` will be addressed both in another PR. Probably the properties can be removed or changed in favor of having the attributes already set during `__init__` thanks to the mentioned single-pass parsing. * Checking that `glob.glob` behaves similarly to TChain's globbing is left for another time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8485
https://github.com/root-project/root/pull/8486:310,deployability,releas,release,310,"[RF] Add missing nullptr check to removeCommon helper in RooProdPdf; This fixes a bug recently introduced by commit bdf7502. Fixes issue https://github.com/root-project/root/issues/8474. Thank you so much @VanyaBelyaev for using ROOT master, which was crucial for me to fix this bug before it made it into any release!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8486
https://github.com/root-project/root/pull/8486:47,usability,help,helper,47,"[RF] Add missing nullptr check to removeCommon helper in RooProdPdf; This fixes a bug recently introduced by commit bdf7502. Fixes issue https://github.com/root-project/root/issues/8474. Thank you so much @VanyaBelyaev for using ROOT master, which was crucial for me to fix this bug before it made it into any release!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8486
https://github.com/root-project/root/issues/8487:14179,availability,error,error,14179,"LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14341,availability,Error,Error,14341,"../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14451,availability,Error,Error,14451,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14490,availability,Error,Error,14490,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15141,availability,Operat,Operating,15141,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15216,availability,down,download,15216,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:0,deployability,Build,Build,0,"Build fails on Ubuntu 20.04; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Build fails on Ubuntu 20.04 with the following output:. ```. [ 76%] Built target Cling. [ 76%] Linking CXX executable src/rootcling_stage1. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `clang::CodeGen::CodeGenFunction::EmitOMPAtomicSimpleUpdateExpr(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::BinaryOperatorKind, bool, llvm::AtomicOrdering, clang::SourceLocation, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)>)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15CodeGenFunction29EmitOMPAtomicSimpleUpdateExprENS0_6LValueENS0_6RValueENS_18BinaryOperatorKindEbN4llvm14AtomicOrderingENS_14SourceLocationENS5_12function_refIFS3_S3_EEE+0x15a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicUpdate(clang::CodeGen::LValue, llvm::AtomicOrdering, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)> const&, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `void clang::CodeGen::RegionCodeGenTy::CallbackFn<clang::CodeGen::CodeGenFunction::EmitOMPAtomicDirective(clang::OMPAtomicDirective const&)::{lambda(clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)#1}>(long, clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15RegionCodeGenTy10CallbackFnIZNS0_15CodeGenFunction22EmitOMPAtomicDirectiveERKNS_18OMPAtomicDirectiveEEUlRS3_RNS0_15PrePostActionTyEE_EEvlS7_S9_+0x9bd): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:6,deployability,fail,fails,6,"Build fails on Ubuntu 20.04; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Build fails on Ubuntu 20.04 with the following output:. ```. [ 76%] Built target Cling. [ 76%] Linking CXX executable src/rootcling_stage1. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `clang::CodeGen::CodeGenFunction::EmitOMPAtomicSimpleUpdateExpr(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::BinaryOperatorKind, bool, llvm::AtomicOrdering, clang::SourceLocation, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)>)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15CodeGenFunction29EmitOMPAtomicSimpleUpdateExprENS0_6LValueENS0_6RValueENS_18BinaryOperatorKindEbN4llvm14AtomicOrderingENS_14SourceLocationENS5_12function_refIFS3_S3_EEE+0x15a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicUpdate(clang::CodeGen::LValue, llvm::AtomicOrdering, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)> const&, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `void clang::CodeGen::RegionCodeGenTy::CallbackFn<clang::CodeGen::CodeGenFunction::EmitOMPAtomicDirective(clang::OMPAtomicDirective const&)::{lambda(clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)#1}>(long, clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15RegionCodeGenTy10CallbackFnIZNS0_15CodeGenFunction22EmitOMPAtomicDirectiveERKNS_18OMPAtomicDirectiveEEUlRS3_RNS0_15PrePostActionTyEE_EEvlS7_S9_+0x9bd): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:411,deployability,Build,Build,411,"Build fails on Ubuntu 20.04; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Build fails on Ubuntu 20.04 with the following output:. ```. [ 76%] Built target Cling. [ 76%] Linking CXX executable src/rootcling_stage1. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `clang::CodeGen::CodeGenFunction::EmitOMPAtomicSimpleUpdateExpr(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::BinaryOperatorKind, bool, llvm::AtomicOrdering, clang::SourceLocation, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)>)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15CodeGenFunction29EmitOMPAtomicSimpleUpdateExprENS0_6LValueENS0_6RValueENS_18BinaryOperatorKindEbN4llvm14AtomicOrderingENS_14SourceLocationENS5_12function_refIFS3_S3_EEE+0x15a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicUpdate(clang::CodeGen::LValue, llvm::AtomicOrdering, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)> const&, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `void clang::CodeGen::RegionCodeGenTy::CallbackFn<clang::CodeGen::CodeGenFunction::EmitOMPAtomicDirective(clang::OMPAtomicDirective const&)::{lambda(clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)#1}>(long, clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15RegionCodeGenTy10CallbackFnIZNS0_15CodeGenFunction22EmitOMPAtomicDirectiveERKNS_18OMPAtomicDirectiveEEUlRS3_RNS0_15PrePostActionTyEE_EEvlS7_S9_+0x9bd): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:417,deployability,fail,fails,417,"Build fails on Ubuntu 20.04; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Build fails on Ubuntu 20.04 with the following output:. ```. [ 76%] Built target Cling. [ 76%] Linking CXX executable src/rootcling_stage1. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `clang::CodeGen::CodeGenFunction::EmitOMPAtomicSimpleUpdateExpr(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::BinaryOperatorKind, bool, llvm::AtomicOrdering, clang::SourceLocation, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)>)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15CodeGenFunction29EmitOMPAtomicSimpleUpdateExprENS0_6LValueENS0_6RValueENS_18BinaryOperatorKindEbN4llvm14AtomicOrderingENS_14SourceLocationENS5_12function_refIFS3_S3_EEE+0x15a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicUpdate(clang::CodeGen::LValue, llvm::AtomicOrdering, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)> const&, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `void clang::CodeGen::RegionCodeGenTy::CallbackFn<clang::CodeGen::CodeGenFunction::EmitOMPAtomicDirective(clang::OMPAtomicDirective const&)::{lambda(clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)#1}>(long, clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15RegionCodeGenTy10CallbackFnIZNS0_15CodeGenFunction22EmitOMPAtomicDirectiveERKNS_18OMPAtomicDirectiveEEUlRS3_RNS0_15PrePostActionTyEE_EEvlS7_S9_+0x9bd): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14281,deployability,build,build,14281,"en::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14821,deployability,build,build,14821,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15062,deployability,build,build,15062,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15129,deployability,version,version,15129,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15198,deployability,instal,install,15198,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14227,energy efficiency,core,core,14227,":CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / yo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14297,energy efficiency,core,core,14297,"ng::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Addi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14392,energy efficiency,core,core,14392,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15129,integrability,version,version,15129,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:4357,modifiability,Scal,ScalarExprEmitter,4357,"llvm/src/lib/libclangCodeGen.a(CGExpr.cpp.o): in function `clang::CodeGen::CodeGenFunction::EmitLoadOfScalar(clang::CodeGen::Address, bool, clang::QualType, clang::SourceLocation, clang::CodeGen::LValueBaseInfo, clang::CodeGen::TBAAAccessInfo, bool)':. CGExpr.cpp:(.text._ZN5clang7CodeGen15CodeGenFunction16EmitLoadOfScalarENS0_7AddressEbNS_8QualTypeENS_14SourceLocationENS0_14LValueBaseInfoENS0_14TBAAAccessInfoEb+0x18f): undefined reference to `clang::CodeGen::CodeGenFunction::LValueIsSuitableForInlineAtomic(clang::CodeGen::LValue)'. /usr/bin/ld: CGExpr.cpp:(.text._ZN5clang7CodeGen15CodeGenFunction16EmitLoadOfScalarENS0_7AddressEbNS_8QualTypeENS_14SourceLocationENS0_14LValueBaseInfoENS0_14TBAAAccessInfoEb+0x21f): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprScalar.cpp.o): in function `(anonymous namespace)::ScalarExprEmitter::EmitScalarPrePostIncDec(clang::UnaryOperator const*, clang::CodeGen::LValue, bool, bool)':. CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter23EmitScalarPrePostIncDecEPKN5clang13UnaryOperatorENS1_7CodeGen6LValueEbb+0x765): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicCompareExchange(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::CodeGen::RValue, clang::SourceLocation, llvm::AtomicOrdering, llvm::AtomicOrdering, bool, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprScalar.cpp.o): in function `(anonymous namespace)::ScalarExprEmitter::Visit(clang::Expr*)':. CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter5VisitEPN5clang4ExprE+0x2d3): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprScalar.cpp.o): in function `(anonymous namespace)::ScalarExprEmitter::EmitCompoundA",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:4989,modifiability,Scal,ScalarExprEmitter,4989,"ssEbNS_8QualTypeENS_14SourceLocationENS0_14LValueBaseInfoENS0_14TBAAAccessInfoEb+0x21f): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprScalar.cpp.o): in function `(anonymous namespace)::ScalarExprEmitter::EmitScalarPrePostIncDec(clang::UnaryOperator const*, clang::CodeGen::LValue, bool, bool)':. CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter23EmitScalarPrePostIncDecEPKN5clang13UnaryOperatorENS1_7CodeGen6LValueEbb+0x765): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicCompareExchange(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::CodeGen::RValue, clang::SourceLocation, llvm::AtomicOrdering, llvm::AtomicOrdering, bool, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprScalar.cpp.o): in function `(anonymous namespace)::ScalarExprEmitter::Visit(clang::Expr*)':. CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter5VisitEPN5clang4ExprE+0x2d3): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprScalar.cpp.o): in function `(anonymous namespace)::ScalarExprEmitter::EmitCompoundAssignLValue(clang::CompoundAssignOperator const*, llvm::Value* ((anonymous namespace)::ScalarExprEmitter::*)((anonymous namespace)::BinOpInfo const&), llvm::Value*&) [clone .constprop.0]':. CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter24EmitCompoundAssignLValueEPKN5clang22CompoundAssignOperatorEMS0_FPN4llvm5ValueERKNS_9BinOpInfoEERS7_.constprop.0+0x67c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicCompareExchange(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::CodeGen::RValue, clang::SourceLocation, llvm::AtomicOrdering, llvm::AtomicOrdering, bool, clang::CodeGen::AggValueSlot)'. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:5334,modifiability,Scal,ScalarExprEmitter,5334,"s namespace)::ScalarExprEmitter::EmitScalarPrePostIncDec(clang::UnaryOperator const*, clang::CodeGen::LValue, bool, bool)':. CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter23EmitScalarPrePostIncDecEPKN5clang13UnaryOperatorENS1_7CodeGen6LValueEbb+0x765): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicCompareExchange(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::CodeGen::RValue, clang::SourceLocation, llvm::AtomicOrdering, llvm::AtomicOrdering, bool, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprScalar.cpp.o): in function `(anonymous namespace)::ScalarExprEmitter::Visit(clang::Expr*)':. CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter5VisitEPN5clang4ExprE+0x2d3): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprScalar.cpp.o): in function `(anonymous namespace)::ScalarExprEmitter::EmitCompoundAssignLValue(clang::CompoundAssignOperator const*, llvm::Value* ((anonymous namespace)::ScalarExprEmitter::*)((anonymous namespace)::BinOpInfo const&), llvm::Value*&) [clone .constprop.0]':. CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter24EmitCompoundAssignLValueEPKN5clang22CompoundAssignOperatorEMS0_FPN4llvm5ValueERKNS_9BinOpInfoEERS7_.constprop.0+0x67c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicCompareExchange(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::CodeGen::RValue, clang::SourceLocation, llvm::AtomicOrdering, llvm::AtomicOrdering, bool, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangSema.a(SemaExprObjC.cpp.o): in function `applyCocoaAPICheck(clang::Sema&, clang::ObjCMessageExpr const*, unsigned int, bool (*)(clang::ObjCMessageExpr const*, clang::NSAPI const&, clang::edit::Commit&)) [clone .constprop.0]':. SemaExprObjC.cpp:(.text._ZL18applyCocoaAPICheckRN5clang4SemaEPKNS_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:5453,modifiability,Scal,ScalarExprEmitter,5453,"l)':. CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter23EmitScalarPrePostIncDecEPKN5clang13UnaryOperatorENS1_7CodeGen6LValueEbb+0x765): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicCompareExchange(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::CodeGen::RValue, clang::SourceLocation, llvm::AtomicOrdering, llvm::AtomicOrdering, bool, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprScalar.cpp.o): in function `(anonymous namespace)::ScalarExprEmitter::Visit(clang::Expr*)':. CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter5VisitEPN5clang4ExprE+0x2d3): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprScalar.cpp.o): in function `(anonymous namespace)::ScalarExprEmitter::EmitCompoundAssignLValue(clang::CompoundAssignOperator const*, llvm::Value* ((anonymous namespace)::ScalarExprEmitter::*)((anonymous namespace)::BinOpInfo const&), llvm::Value*&) [clone .constprop.0]':. CGExprScalar.cpp:(.text._ZN12_GLOBAL__N_117ScalarExprEmitter24EmitCompoundAssignLValueEPKN5clang22CompoundAssignOperatorEMS0_FPN4llvm5ValueERKNS_9BinOpInfoEERS7_.constprop.0+0x67c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicCompareExchange(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::CodeGen::RValue, clang::SourceLocation, llvm::AtomicOrdering, llvm::AtomicOrdering, bool, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangSema.a(SemaExprObjC.cpp.o): in function `applyCocoaAPICheck(clang::Sema&, clang::ObjCMessageExpr const*, unsigned int, bool (*)(clang::ObjCMessageExpr const*, clang::NSAPI const&, clang::edit::Commit&)) [clone .constprop.0]':. SemaExprObjC.cpp:(.text._ZL18applyCocoaAPICheckRN5clang4SemaEPKNS_15ObjCMessageExprEjPFbS4_RKNS_5NSAPIERNS_4edit6CommitEE.constprop.0+0x13c): undefined reference to `clang::edit::rewrit",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15129,modifiability,version,version,15129,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14179,performance,error,error,14179,"LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14341,performance,Error,Error,14341,"../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14451,performance,Error,Error,14451,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14490,performance,Error,Error,14490,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:6,reliability,fail,fails,6,"Build fails on Ubuntu 20.04; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Build fails on Ubuntu 20.04 with the following output:. ```. [ 76%] Built target Cling. [ 76%] Linking CXX executable src/rootcling_stage1. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `clang::CodeGen::CodeGenFunction::EmitOMPAtomicSimpleUpdateExpr(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::BinaryOperatorKind, bool, llvm::AtomicOrdering, clang::SourceLocation, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)>)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15CodeGenFunction29EmitOMPAtomicSimpleUpdateExprENS0_6LValueENS0_6RValueENS_18BinaryOperatorKindEbN4llvm14AtomicOrderingENS_14SourceLocationENS5_12function_refIFS3_S3_EEE+0x15a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicUpdate(clang::CodeGen::LValue, llvm::AtomicOrdering, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)> const&, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `void clang::CodeGen::RegionCodeGenTy::CallbackFn<clang::CodeGen::CodeGenFunction::EmitOMPAtomicDirective(clang::OMPAtomicDirective const&)::{lambda(clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)#1}>(long, clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15RegionCodeGenTy10CallbackFnIZNS0_15CodeGenFunction22EmitOMPAtomicDirectiveERKNS_18OMPAtomicDirectiveEEUlRS3_RNS0_15PrePostActionTyEE_EEvlS7_S9_+0x9bd): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:417,reliability,fail,fails,417,"Build fails on Ubuntu 20.04; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. Build fails on Ubuntu 20.04 with the following output:. ```. [ 76%] Built target Cling. [ 76%] Linking CXX executable src/rootcling_stage1. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `clang::CodeGen::CodeGenFunction::EmitOMPAtomicSimpleUpdateExpr(clang::CodeGen::LValue, clang::CodeGen::RValue, clang::BinaryOperatorKind, bool, llvm::AtomicOrdering, clang::SourceLocation, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)>)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15CodeGenFunction29EmitOMPAtomicSimpleUpdateExprENS0_6LValueENS0_6RValueENS_18BinaryOperatorKindEbN4llvm14AtomicOrderingENS_14SourceLocationENS5_12function_refIFS3_S3_EEE+0x15a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicUpdate(clang::CodeGen::LValue, llvm::AtomicOrdering, llvm::function_ref<clang::CodeGen::RValue (clang::CodeGen::RValue)> const&, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGStmtOpenMP.cpp.o): in function `void clang::CodeGen::RegionCodeGenTy::CallbackFn<clang::CodeGen::CodeGenFunction::EmitOMPAtomicDirective(clang::OMPAtomicDirective const&)::{lambda(clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)#1}>(long, clang::CodeGen::CodeGenFunction&, clang::CodeGen::PrePostActionTy&)':. CGStmtOpenMP.cpp:(.text._ZN5clang7CodeGen15RegionCodeGenTy10CallbackFnIZNS0_15CodeGenFunction22EmitOMPAtomicDirectiveERKNS_18OMPAtomicDirectiveEEUlRS3_RNS0_15PrePostActionTyEE_EEvlS7_S9_+0x9bd): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:12676,safety,Compl,ComplexExprEmitter,12676,"14BinaryOperatorE+0x11b): undefined reference to `clang::CodeGen::CodeGenFunction::LValueIsSuitableForInlineAtomic(clang::CodeGen::LValue)'. /usr/bin/ld: CGExprAgg.cpp:(.text._ZN12_GLOBAL__N_114AggExprEmitter14VisitBinAssignEPKN5clang14BinaryOperatorE+0x1fd): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: CGExprAgg.cpp:(.text._ZN12_GLOBAL__N_114AggExprEmitter14VisitBinAssignEPKN5clang14BinaryOperatorE+0x337): undefined reference to `clang::CodeGen::CodeGenFunction::LValueIsSuitableForInlineAtomic(clang::CodeGen::LValue)'. /usr/bin/ld: CGExprAgg.cpp:(.text._ZN12_GLOBAL__N_114AggExprEmitter14VisitBinAssignEPKN5clang14BinaryOperatorE+0x3ee): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitStoreOfComplex(std::pair<llvm::Value*, llvm::Value*>, clang::CodeGen::LValue, bool)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter18EmitStoreOfComplexESt4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x308): undefined reference to `clang::CodeGen::CodeGenFunction::LValueIsSuitableForInlineAtomic(clang::CodeGen::LValue)'. /usr/bin/ld: CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter18EmitStoreOfComplexESt4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined refere",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:13448,safety,Compl,ComplexExprEmitter,13448,":CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitStoreOfComplex(std::pair<llvm::Value*, llvm::Value*>, clang::CodeGen::LValue, bool)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter18EmitStoreOfComplexESt4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x308): undefined reference to `clang::CodeGen::CodeGenFunction::LValueIsSuitableForInlineAtomic(clang::CodeGen::LValue)'. /usr/bin/ld: CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter18EmitStoreOfComplexESt4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:13940,safety,Compl,ComplexExprEmitter,13940,"to `clang::CodeGen::CodeGenFunction::LValueIsSuitableForInlineAtomic(clang::CodeGen::LValue)'. /usr/bin/ld: CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter18EmitStoreOfComplexESt4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally some",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14179,safety,error,error,14179,"LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14341,safety,Error,Error,14341,"../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14451,safety,Error,Error,14451,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14490,safety,Error,Error,14490,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15016,safety,input,input,15016,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:12676,security,Compl,ComplexExprEmitter,12676,"14BinaryOperatorE+0x11b): undefined reference to `clang::CodeGen::CodeGenFunction::LValueIsSuitableForInlineAtomic(clang::CodeGen::LValue)'. /usr/bin/ld: CGExprAgg.cpp:(.text._ZN12_GLOBAL__N_114AggExprEmitter14VisitBinAssignEPKN5clang14BinaryOperatorE+0x1fd): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: CGExprAgg.cpp:(.text._ZN12_GLOBAL__N_114AggExprEmitter14VisitBinAssignEPKN5clang14BinaryOperatorE+0x337): undefined reference to `clang::CodeGen::CodeGenFunction::LValueIsSuitableForInlineAtomic(clang::CodeGen::LValue)'. /usr/bin/ld: CGExprAgg.cpp:(.text._ZN12_GLOBAL__N_114AggExprEmitter14VisitBinAssignEPKN5clang14BinaryOperatorE+0x3ee): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitStoreOfComplex(std::pair<llvm::Value*, llvm::Value*>, clang::CodeGen::LValue, bool)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter18EmitStoreOfComplexESt4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x308): undefined reference to `clang::CodeGen::CodeGenFunction::LValueIsSuitableForInlineAtomic(clang::CodeGen::LValue)'. /usr/bin/ld: CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter18EmitStoreOfComplexESt4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined refere",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:13448,security,Compl,ComplexExprEmitter,13448,":CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitStoreOfComplex(std::pair<llvm::Value*, llvm::Value*>, clang::CodeGen::LValue, bool)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter18EmitStoreOfComplexESt4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x308): undefined reference to `clang::CodeGen::CodeGenFunction::LValueIsSuitableForInlineAtomic(clang::CodeGen::LValue)'. /usr/bin/ld: CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter18EmitStoreOfComplexESt4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:13940,security,Compl,ComplexExprEmitter,13940,"to `clang::CodeGen::CodeGenFunction::LValueIsSuitableForInlineAtomic(clang::CodeGen::LValue)'. /usr/bin/ld: CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter18EmitStoreOfComplexESt4pairIPN4llvm5ValueES4_EN5clang7CodeGen6LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally some",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15306,testability,context,context,15306,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15335,testability,context,context,15335,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14179,usability,error,error,14179,"LValueEb+0x39a): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14205,usability,statu,status,14205," reference to `clang::CodeGen::CodeGenFunction::EmitAtomicStore(clang::CodeGen::RValue, clang::CodeGen::LValue, bool)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14341,usability,Error,Error,14341,"../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14451,usability,Error,Error,14451,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14490,usability,Error,Error,14490,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14512,usability,clear,clear,14512,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14560,usability,behavi,behavior,14560,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14591,usability,behavi,behavior,14591,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14618,usability,clear,clear,14618,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:14871,usability,behavi,behavior,14871,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8487:15016,usability,input,input,15016,"/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::EmitLoadOfLValue(clang::CodeGen::LValue, clang::SourceLocation)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter16EmitLoadOfLValueEN5clang7CodeGen6LValueENS1_14SourceLocationE+0x15c): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicLoad(clang::CodeGen::LValue, clang::SourceLocation, clang::CodeGen::AggValueSlot)'. /usr/bin/ld: ../../interpreter/llvm/src/lib/libclangCodeGen.a(CGExprComplex.cpp.o): in function `(anonymous namespace)::ComplexExprEmitter::Visit(clang::Expr*)':. CGExprComplex.cpp:(.text._ZN12_GLOBAL__N_118ComplexExprEmitter5VisitEPN5clang4ExprE+0x97d): undefined reference to `clang::CodeGen::CodeGenFunction::EmitAtomicExpr(clang::AtomicExpr*)'. collect2: error: ld returned 1 exit status. make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:228: core/rootcling_stage1/src/rootcling_stage1] Error 1. make[1]: *** [CMakeFiles/Makefile2:27877: core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2. make: *** [Makefile:152: all] Error 2. ```. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. It work? <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. I ran:. ```. mkdir rootinstall rootbuild. cd rootbuild. cmake -DCMAKE_INSTALL_PREFIX=../rootintstall ../root. cmake --build . -- -j4. ```. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. Master branch of root-project/root. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8487
https://github.com/root-project/root/issues/8488:170,interoperability,specif,specified,170,Axis Title for TEveRGBAPaletteOverlay; ### Is your feature request related to a problem? Please describe. <!--. Position of TEveRGBAPaletteOverlay TAxis title can not be specified. -->. ### Describe the solution you'd like. <!--. That it can be . -->. ### Describe alternatives you've considered. <!--. Text overlay as a new object in Eve. -->. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8488
https://github.com/root-project/root/issues/8488:360,testability,context,context,360,Axis Title for TEveRGBAPaletteOverlay; ### Is your feature request related to a problem? Please describe. <!--. Position of TEveRGBAPaletteOverlay TAxis title can not be specified. -->. ### Describe the solution you'd like. <!--. That it can be . -->. ### Describe alternatives you've considered. <!--. Text overlay as a new object in Eve. -->. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8488
https://github.com/root-project/root/issues/8488:389,testability,context,context,389,Axis Title for TEveRGBAPaletteOverlay; ### Is your feature request related to a problem? Please describe. <!--. Position of TEveRGBAPaletteOverlay TAxis title can not be specified. -->. ### Describe the solution you'd like. <!--. That it can be . -->. ### Describe alternatives you've considered. <!--. Text overlay as a new object in Eve. -->. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8488
https://github.com/root-project/root/pull/8489:103,deployability,build,build,103,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8489
https://github.com/root-project/root/pull/8489:445,safety,test,test,445,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8489
https://github.com/root-project/root/pull/8489:450,safety,test,test,450,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8489
https://github.com/root-project/root/pull/8489:445,testability,test,test,445,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8489
https://github.com/root-project/root/pull/8489:450,testability,test,test,450,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8489
https://github.com/root-project/root/issues/8490:152,availability,fault,faulty,152,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:485,availability,cluster,clusters,485,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:897,availability,cluster,clusters,897,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1308,availability,Operat,Operating,1308,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1383,availability,down,download,1383,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:87,deployability,log,logic,87,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:485,deployability,cluster,clusters,485,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:897,deployability,cluster,clusters,897,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1229,deployability,build,build,1229,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1296,deployability,version,version,1296,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1365,deployability,instal,install,1365,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:152,energy efficiency,fault,faulty,152,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1296,integrability,version,version,1296,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:126,interoperability,distribut,distributed,126,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:246,interoperability,bind,bindings,246,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:530,interoperability,distribut,distributed,530,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:640,interoperability,bind,bindings,640,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:246,modifiability,bind,bindings,246,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:640,modifiability,bind,bindings,640,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1296,modifiability,version,version,1296,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:152,performance,fault,faulty,152,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:152,reliability,fault,faulty,152,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:0,safety,Avoid,Avoid,0,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:87,safety,log,logic,87,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:109,safety,input,input,109,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:152,safety,fault,faulty,152,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:440,safety,input,input,440,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1183,safety,input,input,1183,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:87,security,log,logic,87,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:87,testability,log,logic,87,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1437,testability,context,context,1437,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1466,testability,context,context,1466,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:109,usability,input,input,109,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:418,usability,behavi,behavior,418,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:440,usability,input,input,440,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:836,usability,user,user,836,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1038,usability,behavi,behavior,1038,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/issues/8490:1183,usability,input,input,1183,"Avoid Python globbing when we actually need TChain globbing; ### Describe the bug. The logic to retrieve the input files of a distributed RDataFrame is faulty at. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L744-L748. Because the globbing done by `glob.glob` is not the same as that done by `TChain`, in general. ### Expected behavior. The list of input files is actually used to retrieve the clusters of all the trees used to create the distributed RDataFrame in. https://github.com/root-project/root/blob/76fa2000a41ede1080650393f66f336f9baa8255/bindings/experimental/distrdf/python/DistRDF/Node.py#L363-L368. So in general this extra globbing step is not needed. A way to solve this is to directly create the TChain with whatever string the user passes (i.e. with globbing characters) and retrieve the clusters from the TChain rather than traversing the list of files coming out of the globbing. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8490
https://github.com/root-project/root/pull/8491:480,availability,Failur,Failures,480,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:168,deployability,depend,dependency,168,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:480,deployability,Fail,Failures,480,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:503,deployability,depend,dependencies,503,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:543,deployability,observ,observed,543,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:168,integrability,depend,dependency,168,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:503,integrability,depend,dependencies,503,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:168,modifiability,depend,dependency,168,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:503,modifiability,depend,dependencies,503,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:480,performance,Failur,Failures,480,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:480,reliability,Fail,Failures,480,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:16,safety,Avoid,Avoid,16,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:156,safety,test,tests,156,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:168,safety,depend,dependency,168,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:221,safety,test,tests,221,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:377,safety,test,tests,377,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:428,safety,test,tests,428,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:437,safety,avoid,avoid,437,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:503,safety,depend,dependencies,503,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:598,safety,avoid,avoid,598,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:151,testability,unit,unit,151,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:156,testability,test,tests,156,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:168,testability,depend,dependency,168,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:221,testability,test,tests,221,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:377,testability,test,tests,377,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:428,testability,test,tests,428,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:503,testability,depend,dependencies,503,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:543,testability,observ,observed,543,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8491:352,usability,indicat,indicate,352,"[RF][Tutorials] Avoid race condition in RooFit python tutorials; The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite. tutorial in the unit tests. This dependency was already defined for the. C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in. this commit make the same definitions for the Python tutorials, and also. indicate that the Python tests rf502 and rf503 should be run after the. C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8491
https://github.com/root-project/root/pull/8492:27,availability,error,error,27,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:0,deployability,Updat,Update,0,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:502,deployability,updat,updated,502,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:7,performance,concurren,concurrentfill,7,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:27,performance,error,error,27,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:0,safety,Updat,Update,0,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:27,safety,error,error,27,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:472,safety,test,tested,472,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:502,safety,updat,updated,502,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:0,security,Updat,Update,0,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:502,security,updat,updated,502,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:472,testability,test,tested,472,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8492:27,usability,error,error,27,"Update concurrentfill.cxx; error: reference to 'Experimental' is ambiguous. Experimental::RH2D hist{{100, 0., 1.}, {{0., 1., 2., 3., 10.}}};. ^. ...root.../include/ROOT/RLogger.hxx:28:11: note: candidate found by name lookup is 'ROOT::Experimental'. namespace Experimental {. ^. ...root.../include/TMVA/RBDT.hxx:31:11: note: candidate found by name lookup is 'TMVA::Experimental'. namespace Experimental {. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8492
https://github.com/root-project/root/pull/8493:472,integrability,pub,public,472,"Introduce RAttrEnum class, apply for RAttrMarker style; * Provides specialization for RAttrValue<enum>. * Make type conversion, check for valid range. * Used in RAttrMarker style. * Fix bug in RAttrAggregation. Seems to be, there is a bug in the cling, therefore there is `#ifdef` in the RAttrEnum.hxx. ```cpp. #ifdef __CLING__. template<typename T>. #else. template<typename T, typename std::enable_if<std::is_enum<T>::value>::type* = nullptr>. #endif. class RAttrEnum : public RAttrValue<T> {. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8493
https://github.com/root-project/root/pull/8493:116,interoperability,convers,conversion,116,"Introduce RAttrEnum class, apply for RAttrMarker style; * Provides specialization for RAttrValue<enum>. * Make type conversion, check for valid range. * Used in RAttrMarker style. * Fix bug in RAttrAggregation. Seems to be, there is a bug in the cling, therefore there is `#ifdef` in the RAttrEnum.hxx. ```cpp. #ifdef __CLING__. template<typename T>. #else. template<typename T, typename std::enable_if<std::is_enum<T>::value>::type* = nullptr>. #endif. class RAttrEnum : public RAttrValue<T> {. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8493
https://github.com/root-project/root/pull/8493:138,safety,valid,valid,138,"Introduce RAttrEnum class, apply for RAttrMarker style; * Provides specialization for RAttrValue<enum>. * Make type conversion, check for valid range. * Used in RAttrMarker style. * Fix bug in RAttrAggregation. Seems to be, there is a bug in the cling, therefore there is `#ifdef` in the RAttrEnum.hxx. ```cpp. #ifdef __CLING__. template<typename T>. #else. template<typename T, typename std::enable_if<std::is_enum<T>::value>::type* = nullptr>. #endif. class RAttrEnum : public RAttrValue<T> {. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8493
https://github.com/root-project/root/issues/8494:240,integrability,pub,public,240,"cling crashes on conditional parameter in template; - [*] Checked for duplicates. Following class declaration crashes cling:. ```cpp. template<typename T, typename std::enable_if<std::is_enum<T>::value>::type* = nullptr>. class RAttrEnum : public RAttrValue<T> {. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8494
https://github.com/root-project/root/issues/8494:29,modifiability,paramet,parameter,29,"cling crashes on conditional parameter in template; - [*] Checked for duplicates. Following class declaration crashes cling:. ```cpp. template<typename T, typename std::enable_if<std::is_enum<T>::value>::type* = nullptr>. class RAttrEnum : public RAttrValue<T> {. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8494
https://github.com/root-project/root/pull/8495:8,deployability,Updat,Update,8,"Revert ""Update concurrentfill.cxx (#8492)"" [skip-ci]; This reverts commit 19929b63022af972f3fa78041026c047ee0e3fc8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8495
https://github.com/root-project/root/pull/8495:15,performance,concurren,concurrentfill,15,"Revert ""Update concurrentfill.cxx (#8492)"" [skip-ci]; This reverts commit 19929b63022af972f3fa78041026c047ee0e3fc8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8495
https://github.com/root-project/root/pull/8495:8,safety,Updat,Update,8,"Revert ""Update concurrentfill.cxx (#8492)"" [skip-ci]; This reverts commit 19929b63022af972f3fa78041026c047ee0e3fc8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8495
https://github.com/root-project/root/pull/8495:8,security,Updat,Update,8,"Revert ""Update concurrentfill.cxx (#8492)"" [skip-ci]; This reverts commit 19929b63022af972f3fa78041026c047ee0e3fc8.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8495
https://github.com/root-project/root/pull/8496:342,deployability,version,version,342,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:535,deployability,updat,updated,535,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:342,integrability,version,version,342,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:330,interoperability,specif,specify,330,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:406,interoperability,specif,specify,406,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:342,modifiability,version,version,342,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:311,reliability,Doe,Does,311,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:383,reliability,doe,does,383,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:417,safety,test,tested,417,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:505,safety,test,tested,505,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:535,safety,updat,updated,535,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:535,security,updat,updated,535,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:417,testability,test,tested,417,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/pull/8496:505,testability,test,tested,505,"MathMore: Add Lambert W functions; # This Pull request:. ## Changes or fixes:. Adds the Lambert W function to MathMore using GSL. One question: I'm not sure what some of the docstrings in the source file mean. I copied these from other functions:. ```cxx. // [5.2.1.18] Laguerre polynomials. // (26.x.11). ```. Does the first one specify the version the function is introduced? What does the second number specify? I tested it and it works, the only thing missing are the docstrings. ## Checklist:. - [x] tested changes locally. - [x] updated the docs (if necessary). This PR fixes #8471. /cc @lmoneta.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8496
https://github.com/root-project/root/issues/8497:804,deployability,version,versions,804,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1104,deployability,version,version,1104," Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1189,deployability,version,versions,1189,"ctor<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.pu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1273,deployability,observ,observed,1273,"ese are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . #####",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:2446,deployability,observ,observed,2446,"ies of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . ##################. ##Function to visualize the bug. def show_bug() :. . f = TFile( 'VectorTree.root'). tree=f.Get(""Tree""). . h=TH1F(""h"",""h"",20,25.,1000.). ##The same bug is observed also with projection. tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""). h.Print(""all""). f.Close(). #####Call the functions. if __name__ == '__main__':. ###Function to create a tree. create_tree(). ###Function to reproduce the bug. show_bug(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:109,energy efficiency,Draw,Draw,109,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:325,energy efficiency,Draw,Draw,325,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:678,energy efficiency,draw,draw,678,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:938,energy efficiency,Draw,Draw,938,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:2482,energy efficiency,Draw,Draw,2482,"ies of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . ##################. ##Function to visualize the bug. def show_bug() :. . f = TFile( 'VectorTree.root'). tree=f.Get(""Tree""). . h=TH1F(""h"",""h"",20,25.,1000.). ##The same bug is observed also with projection. tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""). h.Print(""all""). f.Close(). #####Call the functions. if __name__ == '__main__':. ###Function to create a tree. create_tree(). ###Function to reproduce the bug. show_bug(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:755,integrability,event,events,755,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:804,integrability,version,versions,804,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1104,integrability,version,version,1104," Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1189,integrability,version,versions,1189,"ctor<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.pu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:804,modifiability,version,versions,804,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1104,modifiability,version,version,1104," Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.ra",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1189,modifiability,version,versions,1189,"ctor<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.pu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1032,performance,content,content,1032,"rees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:497,safety,test,tested,497,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1212,safety,test,tested,1212,"icles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:497,testability,test,tested,497,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1139,testability,context,context,1139,"r from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1212,testability,test,tested,1212,"icles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1273,testability,observ,observed,1273,"ese are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . #####",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:2446,testability,observ,observed,2446,"ies of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . ##################. ##Function to visualize the bug. def show_bug() :. . f = TFile( 'VectorTree.root'). tree=f.Get(""Tree""). . h=TH1F(""h"",""h"",20,25.,1000.). ##The same bug is observed also with projection. tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""). h.Print(""all""). f.Close(). #####Call the functions. if __name__ == '__main__':. ###Function to create a tree. create_tree(). ###Function to reproduce the bug. show_bug(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:309,usability,command,command,309,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:637,usability,behavi,behavior,637,"Problem in projecting vectors from trees; ### Describe the bug. I encounter a problem while using Project or Draw and I want to project a vector from TTree. Assume that all_particles_pt is a vector<double>, all_particles_m is a vector<double> and index is an integer, all of these are branches of a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1291,usability,behavi,behavior,1291,"f a tree. The command. `tree->Draw(""all_particles_pt"", ""all_particles_m[index] > 100"") `. returns 0 entries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . ##################. ##F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1394,usability,help,help,1394,"ntries, independently on the actual value of the condition, so the histogram will always be empty. I tested with several files and in both with cases where all_particles_pt and all_particles_m are the same or different vectors. ### Expected behavior. I would expect that this would draw/project in an histogram all the entries of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . ##################. ##Function to visualize the bug. def show_bug() :. . f = TFile( 'VectorTree.root'). tree=f.Get(""Tree""). ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1936,usability,clear,clear,1936,"ies of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . ##################. ##Function to visualize the bug. def show_bug() :. . f = TFile( 'VectorTree.root'). tree=f.Get(""Tree""). . h=TH1F(""h"",""h"",20,25.,1000.). ##The same bug is observed also with projection. tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""). h.Print(""all""). f.Close(). #####Call the functions. if __name__ == '__main__':. ###Function to create a tree. create_tree(). ###Function to reproduce the bug. show_bug(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:1947,usability,clear,clear,1947,"ies of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . ##################. ##Function to visualize the bug. def show_bug() :. . f = TFile( 'VectorTree.root'). tree=f.Get(""Tree""). . h=TH1F(""h"",""h"",20,25.,1000.). ##The same bug is observed also with projection. tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""). h.Print(""all""). f.Close(). #####Call the functions. if __name__ == '__main__':. ###Function to create a tree. create_tree(). ###Function to reproduce the bug. show_bug(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:2261,usability,Close,Close,2261,"ies of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . ##################. ##Function to visualize the bug. def show_bug() :. . f = TFile( 'VectorTree.root'). tree=f.Get(""Tree""). . h=TH1F(""h"",""h"",20,25.,1000.). ##The same bug is observed also with projection. tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""). h.Print(""all""). f.Close(). #####Call the functions. if __name__ == '__main__':. ###Function to create a tree. create_tree(). ###Function to reproduce the bug. show_bug(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:2306,usability,visual,visualize,2306,"ies of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . ##################. ##Function to visualize the bug. def show_bug() :. . f = TFile( 'VectorTree.root'). tree=f.Get(""Tree""). . h=TH1F(""h"",""h"",20,25.,1000.). ##The same bug is observed also with projection. tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""). h.Print(""all""). f.Close(). #####Call the functions. if __name__ == '__main__':. ###Function to create a tree. create_tree(). ###Function to reproduce the bug. show_bug(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8497:2563,usability,Close,Close,2563,"ies of all_particles_pt for all the events passing the condition. This works in ROOT versions <= 6.18.04. ### To Reproduce. I have posted at the end a small pyroot code that creates a tree with 2 vectors and an int and Draw it in an histogram. Both running in 6.20.06 and 6.18.04 should print on the terminal the content of an histogram, with 6.20.06 I see it empty. . ### Setup. ROOT version > 6.20.06 . ### Additional context. I have never seen this problem with ROOT versions <= 6.18.04. I tested 6.22.06 and the bug appears to be still there. I have observed the same behavior opening the file with ROOT or pyroot, with files created with ROOT or pyroot. Thanks for your help! Federica. . =========CODE==================. ```. ##FFabbri 21/06/2021. import re, array, os. import ROOT. from ROOT import TFile, TTree, TH1F. import random. ## function to create a tree with vectors. def create_tree():. m=ROOT.std.vector('double')(). pt=ROOT.std.vector('double')(). index=array.array('i', [0]). f = TFile( 'VectorTree.root', 'RECREATE' ). tree = TTree( 'Tree', 'Tree' ). tree.Branch( 'all_particles_pt', pt). tree.Branch( 'all_particles_mass', m). tree.Branch( 'index', index,'index/I'). . for i in range(0,500):. pt.clear(). m.clear(). . number_of_particles=random.randint(1,5). index[0]=random.randint(1,number_of_particles). . for j in range(0,number_of_particles):. random_pt=random.random()*(975.)+25. random_m=random.random()*(100.)+50. . pt.push_back(random_pt). m.push_back(random_m). . . tree.Fill(). . tree.Print(). tree.Write(). f.Close(). . ##################. ##Function to visualize the bug. def show_bug() :. . f = TFile( 'VectorTree.root'). tree=f.Get(""Tree""). . h=TH1F(""h"",""h"",20,25.,1000.). ##The same bug is observed also with projection. tree.Draw(""all_particles_pt >> h"",""all_particles_mass[index]>100""). h.Print(""all""). f.Close(). #####Call the functions. if __name__ == '__main__':. ###Function to create a tree. create_tree(). ###Function to reproduce the bug. show_bug(). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8497
https://github.com/root-project/root/issues/8499:157,availability,error,error,157,"Dict type alias fwd decl: underlying type not fwd declared; Reported by ALICE:. ```. G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}. ^. G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8499
https://github.com/root-project/root/issues/8499:365,availability,error,error,365,"Dict type alias fwd decl: underlying type not fwd declared; Reported by ALICE:. ```. G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}. ^. G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8499
https://github.com/root-project/root/issues/8499:157,performance,error,error,157,"Dict type alias fwd decl: underlying type not fwd declared; Reported by ALICE:. ```. G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}. ^. G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8499
https://github.com/root-project/root/issues/8499:365,performance,error,error,365,"Dict type alias fwd decl: underlying type not fwd declared; Reported by ALICE:. ```. G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}. ^. G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8499
https://github.com/root-project/root/issues/8499:157,safety,error,error,157,"Dict type alias fwd decl: underlying type not fwd declared; Reported by ALICE:. ```. G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}. ^. G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8499
https://github.com/root-project/root/issues/8499:365,safety,error,error,365,"Dict type alias fwd decl: underlying type not fwd declared; Reported by ALICE:. ```. G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}. ^. G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8499
https://github.com/root-project/root/issues/8499:157,usability,error,error,157,"Dict type alias fwd decl: underlying type not fwd declared; Reported by ALICE:. ```. G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}. ^. G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8499
https://github.com/root-project/root/issues/8499:365,usability,error,error,365,"Dict type alias fwd decl: underlying type not fwd declared; Reported by ALICE:. ```. G__O2DetectorsVertexing dictionary forward declarations' payload:16:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter2 = DCAFitterN<2, o2::track::TrackParCov>;}}. ^. G__O2DetectorsVertexing dictionary forward declarations' payload:17:53: error: no template named 'DCAFitterN'. namespace o2{namespace vertexing{using DCAFitter3 = DCAFitterN<3, o2::track::TrackParCov>;}}. ^. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8499
https://github.com/root-project/root/pull/8500:103,deployability,build,build,103,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8500
https://github.com/root-project/root/pull/8500:445,safety,test,test,445,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8500
https://github.com/root-project/root/pull/8500:450,safety,test,test,450,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8500
https://github.com/root-project/root/pull/8500:445,testability,test,test,445,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8500
https://github.com/root-project/root/pull/8500:450,testability,test,test,450,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8500
https://github.com/root-project/root/pull/8501:109,deployability,build,build,109,"[v620][RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8501
https://github.com/root-project/root/pull/8501:451,safety,test,test,451,"[v620][RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8501
https://github.com/root-project/root/pull/8501:456,safety,test,test,456,"[v620][RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8501
https://github.com/root-project/root/pull/8501:451,testability,test,test,451,"[v620][RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8501
https://github.com/root-project/root/pull/8501:456,testability,test,test,456,"[v620][RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8501
https://github.com/root-project/root/pull/8502:103,deployability,build,build,103,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8502
https://github.com/root-project/root/pull/8502:445,safety,test,test,445,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8502
https://github.com/root-project/root/pull/8502:450,safety,test,test,450,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8502
https://github.com/root-project/root/pull/8502:445,testability,test,test,445,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8502
https://github.com/root-project/root/pull/8502:450,testability,test,test,450,"[RF] Fix missing initializer warnings in MemPoolForRooSets.h (2nd try); This PR should finally fix the build warnings in the master nightlies,. after the unsuccessful fix attempt in commit. 4ed5ea3976743d1206a8f8c7579adeb1818a9695. I have checked that the missing field initializer warnings go away with. this change by compiling the following example snippet under gcc48:. ```C++. // compile with g++ -Wmissing-field-initializers -std=c++11 -o test test.cc. struct A{. A(). : arr_{{}}. {}. std::array<int, 10> arr_ = {{}};. };. int main() {. A a{};. std::cout << a.arr_[0] << std::endl;. return 0;. }. ```. The warnings are reproduced, and can successfully be suppressed by. replacing `{}` with `{{}}`. This is a backport of 855fd44340e13161f88ca09a86e50abf5c1cd5a1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8502
https://github.com/root-project/root/issues/8503:344,deployability,stack,stackoverflow,344,"ranluxpp code is using left shift of negative value -1 which is undefined per the C standard; In ranluxpp code, there is a left shift of negative value (c == -1). https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:. https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:. ```. int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);. ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:. https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:614,energy efficiency,CPU,CPU,614,"ranluxpp code is using left shift of negative value -1 which is undefined per the C standard; In ranluxpp code, there is a left shift of negative value (c == -1). https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:. https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:. ```. int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);. ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:. https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:84,interoperability,standard,standard,84,"ranluxpp code is using left shift of negative value -1 which is undefined per the C standard; In ranluxpp code, there is a left shift of negative value (c == -1). https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:. https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:. ```. int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);. ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:. https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:308,interoperability,standard,standard,308,"ranluxpp code is using left shift of negative value -1 which is undefined per the C standard; In ranluxpp code, there is a left shift of negative value (c == -1). https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:. https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:. ```. int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);. ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:. https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:704,modifiability,portab,portable,704,"ranluxpp code is using left shift of negative value -1 which is undefined per the C standard; In ranluxpp code, there is a left shift of negative value (c == -1). https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:. https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:. ```. int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);. ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:. https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:573,performance,perform,performance,573,"ranluxpp code is using left shift of negative value -1 which is undefined per the C standard; In ranluxpp code, there is a left shift of negative value (c == -1). https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:. https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:. ```. int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);. ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:. https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:614,performance,CPU,CPU,614,"ranluxpp code is using left shift of negative value -1 which is undefined per the C standard; In ranluxpp code, there is a left shift of negative value (c == -1). https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:. https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:. ```. int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);. ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:. https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:593,testability,verif,verified,593,"ranluxpp code is using left shift of negative value -1 which is undefined per the C standard; In ranluxpp code, there is a left shift of negative value (c == -1). https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:. https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:. ```. int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);. ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:. https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:276,usability,behavi,behavior,276,"ranluxpp code is using left shift of negative value -1 which is undefined per the C standard; In ranluxpp code, there is a left shift of negative value (c == -1). https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:. https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:. ```. int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);. ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:. https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:433,usability,behavi,behavior,433,"ranluxpp code is using left shift of negative value -1 which is undefined per the C standard; In ranluxpp code, there is a left shift of negative value (c == -1). https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:. https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:. ```. int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);. ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:. https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8503:573,usability,perform,performance,573,"ranluxpp code is using left shift of negative value -1 which is undefined per the C standard; In ranluxpp code, there is a left shift of negative value (c == -1). https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:. https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:. ```. int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);. ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:. https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8503
https://github.com/root-project/root/issues/8504:202,modifiability,portab,portable,202,FYI - standalone C implementation of ranluxpp ; FYI - I have created a standalone implementation of ranluxpp written in C based on your code. You can check it here:. https://github.com/jirka-h/ranluxpp-portable,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8504
https://github.com/root-project/root/issues/8505:2996,availability,Operat,Operating,2996,"r(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything above should be enough. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master built from source on Fedora32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:3071,availability,down,download,3071,"r(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything above should be enough. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master built from source on Fedora32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:2882,deployability,build,build,2882,"r(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything above should be enough. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master built from source on Fedora32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:2984,deployability,version,version,2984,"r(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything above should be enough. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master built from source on Fedora32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:3053,deployability,instal,install,3053,"r(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything above should be enough. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master built from source on Fedora32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:2984,integrability,version,version,2984,"r(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything above should be enough. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master built from source on Fedora32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:2984,modifiability,version,version,2984,"r(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything above should be enough. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master built from source on Fedora32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:84,performance,time,times,84,"TEntryList + TChain reads wrong number of entries if reading the same file multiple times; - [x] Checked for duplicates. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It is possible to construct a TChain that reads the same tree from the same file twice. It appears that if I create a TEntryList for said chain, it will only read the entries the first time, while the second read of the same file will be ignored. Let's create a file with a tree and 20 entries. Something like this is enough. ```python. ROOT.RDataFrame(20).Define(""x"",""rdfentry_"").Snapshot(""entries"",""file_20entries_1.root""). ```. Then the following snippet. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TChain.h>. #include <TEntryList.h>. #include <iostream>. int main(){. auto start_1{0};. auto start_2{0};. auto end_1{20};. auto end_2{10};. TEntryList elists;. TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};. TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){. elist1.Enter(entry);. }. for(auto entry = start_2; entry < end_2; entry++){. elist2.Enter(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:402,performance,time,time,402,"TEntryList + TChain reads wrong number of entries if reading the same file multiple times; - [x] Checked for duplicates. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It is possible to construct a TChain that reads the same tree from the same file twice. It appears that if I create a TEntryList for said chain, it will only read the entries the first time, while the second read of the same file will be ignored. Let's create a file with a tree and 20 entries. Something like this is enough. ```python. ROOT.RDataFrame(20).Define(""x"",""rdfentry_"").Snapshot(""entries"",""file_20entries_1.root""). ```. Then the following snippet. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TChain.h>. #include <TEntryList.h>. #include <iostream>. int main(){. auto start_1{0};. auto start_2{0};. auto end_1{20};. auto end_2{10};. TEntryList elists;. TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};. TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){. elist1.Enter(entry);. }. for(auto entry = start_2; entry < end_2; entry++){. elist2.Enter(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:2836,safety,input,input,2836,"r(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything above should be enough. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master built from source on Fedora32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:1970,security,ident,identical,1970,"""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){. elist1.Enter(entry);. }. for(auto entry = start_2; entry < end_2; entry++){. elist2.Enter(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything above should be enough. ### Setup. <!--.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:151,usability,clear,clear,151,"TEntryList + TChain reads wrong number of entries if reading the same file multiple times; - [x] Checked for duplicates. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It is possible to construct a TChain that reads the same tree from the same file twice. It appears that if I create a TEntryList for said chain, it will only read the entries the first time, while the second read of the same file will be ignored. Let's create a file with a tree and 20 entries. Something like this is enough. ```python. ROOT.RDataFrame(20).Define(""x"",""rdfentry_"").Snapshot(""entries"",""file_20entries_1.root""). ```. Then the following snippet. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TChain.h>. #include <TEntryList.h>. #include <iostream>. int main(){. auto start_1{0};. auto start_2{0};. auto end_1{20};. auto end_2{10};. TEntryList elists;. TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};. TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){. elist1.Enter(entry);. }. for(auto entry = start_2; entry < end_2; entry++){. elist2.Enter(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:199,usability,behavi,behavior,199,"TEntryList + TChain reads wrong number of entries if reading the same file multiple times; - [x] Checked for duplicates. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. It is possible to construct a TChain that reads the same tree from the same file twice. It appears that if I create a TEntryList for said chain, it will only read the entries the first time, while the second read of the same file will be ignored. Let's create a file with a tree and 20 entries. Something like this is enough. ```python. ROOT.RDataFrame(20).Define(""x"",""rdfentry_"").Snapshot(""entries"",""file_20entries_1.root""). ```. Then the following snippet. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <TChain.h>. #include <TEntryList.h>. #include <iostream>. int main(){. auto start_1{0};. auto start_2{0};. auto end_1{20};. auto end_2{10};. TEntryList elists;. TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};. TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){. elist1.Enter(entry);. }. for(auto entry = start_2; entry < end_2; entry++){. elist2.Enter(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:1723,usability,behavi,behavior,1723,"Chain.h>. #include <TEntryList.h>. #include <iostream>. int main(){. auto start_1{0};. auto start_2{0};. auto end_1{20};. auto end_2{10};. TEntryList elists;. TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};. TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){. elist1.Enter(entry);. }. for(auto entry = start_2; entry < end_2; entry++){. elist2.Enter(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that trigger",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:1741,usability,clear,clear,1741,"e <TEntryList.h>. #include <iostream>. int main(){. auto start_1{0};. auto start_2{0};. auto end_1{20};. auto end_2{10};. TEntryList elists;. TEntryList elist1{""e"",""e"",""entries"",""file_20entries_1.root""};. TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. for(auto entry = start_1; entry < end_1; entry++){. elist1.Enter(entry);. }. for(auto entry = start_2; entry < end_2; entry++){. elist2.Enter(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:2691,usability,behavi,behavior,2691,"r(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything above should be enough. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master built from source on Fedora32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/issues/8505:2836,usability,input,input,2836,"r(entry);. }. elists.Add(&elist1);. elists.Add(&elist2);. TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. chain.Add(""file_20entries_1.root"");. chain.SetEntryList(&elists);. ROOT::RDataFrame df{chain};. std::cout << df.Count().GetValue() << ""\n"";. }. ```. Will output the following. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles . 20. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. The expected result of the above snippet is 30, that is 20 entries from the first TEntryList and 10 entries from the second. Note that, if I create a second file identical to the first one and call it `file_20entries_2.root`, changing the above snippet with. ```diff. - TEntryList elist2{""e"",""e"",""entries"",""file_20entries_1.root""};. + TEntryList elist2{""e"",""e"",""entries"",""file_20entries_2.root""};. ... TChain chain{""entries""};. chain.Add(""file_20entries_1.root"");. - chain.Add(""file_20entries_1.root"");. + chain.Add(""file_20entries_2.root"");. ```. yields the correct result:. ```. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: g++ -o tentrylist_emptysource_twofiles tentrylist_emptysource_twofiles.cpp `root-config --cflags --glibs`. vpadulan@fedorathinkpad-T550 [~/Projects/rootcode]: ./tentrylist_emptysource_twofiles. 30. ```. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. Everything above should be enough. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT master built from source on Fedora32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8505
https://github.com/root-project/root/pull/8506:8,deployability,updat,update,8,[cmake] update urls in windows installer [skip-ci];,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8506
https://github.com/root-project/root/pull/8506:31,deployability,instal,installer,31,[cmake] update urls in windows installer [skip-ci];,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8506
https://github.com/root-project/root/pull/8506:8,safety,updat,update,8,[cmake] update urls in windows installer [skip-ci];,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8506
https://github.com/root-project/root/pull/8506:8,security,updat,update,8,[cmake] update urls in windows installer [skip-ci];,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8506
https://github.com/root-project/root/issues/8507:232,modifiability,paramet,parameters,232,"[RF] Add documentation for RooKeysPdf, and to its Mirror option; ### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters. In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {. p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/issues/8507:270,modifiability,paramet,parameter,270,"[RF] Add documentation for RooKeysPdf, and to its Mirror option; ### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters. In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {. p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/issues/8507:432,modifiability,paramet,parameter,432,"[RF] Add documentation for RooKeysPdf, and to its Mirror option; ### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters. In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {. p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/issues/8507:778,testability,understand,understand,778,"[RF] Add documentation for RooKeysPdf, and to its Mirror option; ### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters. In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {. p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/issues/8507:840,testability,simpl,simple,840,"[RF] Add documentation for RooKeysPdf, and to its Mirror option; ### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters. In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {. p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/issues/8507:898,testability,context,context,898,"[RF] Add documentation for RooKeysPdf, and to its Mirror option; ### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters. In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {. p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/issues/8507:9,usability,document,documentation,9,"[RF] Add documentation for RooKeysPdf, and to its Mirror option; ### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters. In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {. p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/issues/8507:139,usability,document,documentation,139,"[RF] Add documentation for RooKeysPdf, and to its Mirror option; ### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters. In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {. p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/issues/8507:840,usability,simpl,simple,840,"[RF] Add documentation for RooKeysPdf, and to its Mirror option; ### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters. In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {. p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/issues/8507:850,usability,intuit,intuitive,850,"[RF] Add documentation for RooKeysPdf, and to its Mirror option; ### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters. In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {. p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/issues/8507:1025,usability,close,closely,1025,"[RF] Add documentation for RooKeysPdf, and to its Mirror option; ### Explain what you would like to see improved. It would be great to add documentation for several [RooKeysPdf](https://root.cern.ch/doc/master/classRooKeysPdf.html) parameters. In particular, there is a parameter *rho* in two constructors, which has no explanation. Constructors descriptions are very unclear. However, *rho* is explained in the article. There is a parameter Mirror, which I could not find in the article (it has more options than there). From the code it looks like usually it is just reflecting pdf around the border:. if (_mirrorLeft) {. p.x = 2. * _lo - x;. But from the [source code, line 261](https://github.com/root-project/root/blob/master/roofit/roofit/src/RooKeysPdf.cxx#L261) I can't understand the meaning of *_asymLeft* option (the code is not simple or intuitive, and has no comments). ### Additional context. Maybe it would be worth to give a link to [RooNDKeysPdf](https://root.cern.ch/doc/master/classRooNDKeysPdf.html) as a closely related class?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8507
https://github.com/root-project/root/pull/8509:22,energy efficiency,current,current,22,[cmake] fix cpack for current master; * provide proper list of pythonization files for RootFit. * avoid empty string with extra . in produce file name,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8509
https://github.com/root-project/root/pull/8509:98,safety,avoid,avoid,98,[cmake] fix cpack for current master; * provide proper list of pythonization files for RootFit. * avoid empty string with extra . in produce file name,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8509
https://github.com/root-project/root/pull/8510:857,deployability,updat,updated,857,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:206,interoperability,specif,specific,206,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:125,modifiability,paramet,parameters-for-gslsimanminimizer-when-using-root-fitter,125,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:249,reliability,doe,does,249,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:857,safety,updat,updated,857,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:857,security,updat,updated,857,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:16,usability,Minim,Minimizer,16,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:297,usability,Minim,Minimizer,297,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:347,usability,minim,minimizers,347,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:536,usability,minim,minimizing,536,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:621,usability,Minim,Minimizer,621,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:793,usability,Minim,MinimizerOptions,793,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:1025,usability,Minim,MinimizerOptions,1025,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:1170,usability,Minim,MinimizerOptions,1170,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8510:1238,usability,Minim,MinimizerOptions,1238,"Fix setting the Minimizer options in GSLSimAnMinimizer; As reported in https://root-forum.cern.ch/t/how-can-i-set-the-tuning-parameters-for-gslsimanminimizer-when-using-root-fitter/45497 the setting of the specific options for the GSLSimAnMinimizer does not work from the Fitter class or the base Minimizer class. This is happening also for other minimizers. This is now fixed in this PR by removing SetOptions() and Options() derived methods (one can use the base class ones) . and correctly set the options in the solver class before minimizing. The setting of the options through the Fitter class is fixed by adding a Minimizer::SetExtraOptions method and calling it from FItConfig::CreateMinimizer. . In addition when not using Minuit or Minuit2 do not have Migrad as default algorithm in MinimizerOptions. An example on how to set the options has been updated in the doc. . This code example also shows that now setting of the options works:. ```. {. TH1D h1(""h1"",""h1"",100,-3,4) ; . h1.FillRandom(""gaus""); . ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLSimAn"") ; . ROOT::Math::GenAlgoOptions simanOpt; ; . simanOpt.SetValue(""n_tries"", 1000); . ROOT::Math::MinimizerOptions::SetDefaultExtraOptions(&simanOpt) ; . ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(1) ; // options ar enow printed when level is >=1 . h1.Fit(""gaus"") ;. }. ``` .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8510
https://github.com/root-project/root/pull/8511:127,availability,failur,failure,127,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:127,deployability,fail,failure,127,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:541,energy efficiency,model,model,541,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:589,energy efficiency,model,model,589,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:673,energy efficiency,model,model,673,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:127,performance,failur,failure,127,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:127,reliability,fail,failure,127,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:143,safety,except,exception,143,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:265,safety,except,exception,265,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:815,safety,except,exception,815,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:541,security,model,model,541,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:589,security,model,model,589,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:673,security,model,model,673,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:924,security,access,access,924,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:119,testability,assert,assert,119,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8511:720,usability,Close,Close,720,"[ntuple] Check RNTuple name, location strings are not empty; In the case of the storage location, this change turns an assert. failure into an exception:. Before:. ```. Fatal: fileStream violated at line 1145 of `ntuple/v7/src/RMiniFile.cxx'. ```. After:. ```. C++ exception with description ""empty storage location"". ```. For the RNTuple name, the empty string only caused issues when added to. a TFile (but that's enough to ban it):. ```cpp. std::string path = ""some_file.root"". auto file = TFile::Open(path.c_str(), ""RECREATE"");. {. auto model = RNTupleModel::Create();. auto fieldPt = model->MakeField<float>(""pt"", 42.0);. auto ntuple = RNTupleWriter::Append(std::move(model), """", *file);. ntuple->Fill();. }. file->Close();. delete file;. // throws. auto ntuple = RNTupleReader::Open("""", path);. ```. ```. C++ exception with description ""no RNTuple named '' in file 'test_ntuple_empty_filename.root' (unchecked RResult access!). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8511
https://github.com/root-project/root/pull/8512:132,security,ident,identifiers,132,"[cling] Also fwd decl underlying type of using decls:; Before, only the using decl itself was forward declared, causing. undeclared identifiers in forward declaration code, as witnessed in. https://github.com/root-project/root/issues/8499. Given the similarity of using and typedef, merge both into a single. function, making sure both have the same featureset, and through that. fixing this issue as a side-effect.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8512
https://github.com/root-project/root/issues/8513:204,availability,Error,Error,204,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:297,availability,error,error,297,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:0,deployability,Fail,Fail,0,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:8,deployability,build,build,8,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:14,energy efficiency,core,core,14,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:97,energy efficiency,core,core,97,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:155,energy efficiency,core,core,155,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:243,energy efficiency,core,core,243,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:523,energy efficiency,core,core,523,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:696,energy efficiency,core,core,696,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:210,integrability,messag,message,210,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:210,interoperability,messag,message,210,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:204,performance,Error,Error,204,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:297,performance,error,error,297,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:0,reliability,Fail,Fail,0,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:204,safety,Error,Error,204,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:297,safety,error,error,297,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:204,usability,Error,Error,204,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/issues/8513:297,usability,error,error,297,"Fail to build core/meta/src/TEnumConstant.cxx in gcc 11. Need to include <limits> in header file core/foundation/inc/ROOT/libcpp_string_view.h; In gcc 11, core/meta/src/TEnumConstant.cxx cannot be built. Error message:. ```. /tmp/root-6.22.06/core/foundation/inc/ROOT/libcpp_string_view.h:275:63: error: ‘numeric_limits’ is not a member of ‘std’. 275 | size_type max_size() const _NOEXCEPT { return (_VSTD::numeric_limits<size_type>::max)(); }. | ^~~~~~~~~~~~~~. ```. This is because <limits> is not explicitly included by core/foundation/inc/ROOT/libcpp_string_view.h. It can be built if the header is included. https://github.com/root-project/root/blob/71e0b990b889ff292be5bfa79d1f85e15440eaa5/core/foundation/inc/ROOT/RWrap_libcpp_string_view.h#L40-L45",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8513
https://github.com/root-project/root/pull/8514:108,deployability,build,build,108,[RF] Fix warning about sigma parameter shadowing RooCrystalBall member; This fixes warnings in the CentOS 7 build in the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8514
https://github.com/root-project/root/pull/8514:29,modifiability,paramet,parameter,29,[RF] Fix warning about sigma parameter shadowing RooCrystalBall member; This fixes warnings in the CentOS 7 build in the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8514
https://github.com/root-project/root/pull/8515:17,deployability,build,build,17,[RF] Fix nightly build warnings about member variable shadowing; This fixes warnings in the CentOS 7 build in the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8515
https://github.com/root-project/root/pull/8515:101,deployability,build,build,101,[RF] Fix nightly build warnings about member variable shadowing; This fixes warnings in the CentOS 7 build in the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8515
https://github.com/root-project/root/pull/8515:45,modifiability,variab,variable,45,[RF] Fix nightly build warnings about member variable shadowing; This fixes warnings in the CentOS 7 build in the nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8515
https://github.com/root-project/root/pull/8516:140,security,ident,identifiers,140,"[cling] Also fwd decl underlying type of using decls: [v6.24]; Before, only the using decl itself was forward declared, causing. undeclared identifiers in forward declaration code, as witnessed in. https://github.com/root-project/root/issues/8499. Given the similarity of using and typedef, merge both into a single. function, making sure both have the same featureset, and through that. fixing this issue as a side-effect. (cherry picked from commit d026b4918a696e6c8a5ef2c15985c8b9d98da2b2).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8516
https://github.com/root-project/root/issues/8517:724,availability,error,error,724,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:1093,integrability,pub,public,1093,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:244,modifiability,variab,variable-in-root-files,244,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:724,performance,error,error,724,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:1262,performance,time,time,1262,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:516,reliability,doe,doesn,516,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:724,safety,error,error,724,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:237,testability,simpl,simple-variable-in-root-files,237,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:12,usability,support,support,12,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:237,usability,simpl,simple-variable-in-root-files,237,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:463,usability,support,support,463,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:524,usability,support,support,524,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:648,usability,support,support,648,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:724,usability,error,error,724,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:831,usability,support,support,831,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8517:876,usability,shortcut,shortcut,876,"Add integer support to TVectorT; ### Is your feature request related to a problem? Please describe. I'd like to store a vector of integers in a TFile. Rene Brun suggested using [TVectorD for doubles](https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/2?u=ynikitenko), but I'd like to store integers (to store them in the vector of doubles is possible, but less convenient). [TVectorT](https://root.cern.ch/doc/master/classTVectorT.html) has support only for floats and doubles. [As of 2011, it doesn't support integers](https://root-forum.cern.ch/t/tvectort-int/12041/2?u=ynikitenko). But I think it would be nice to add that support. When I try to use TVectorT\<int\> in `ROOT 6.24/00`, `ld` gives an error:. > undefined reference to `TVectorT<int>::TVectorT(int)'. ### Describe the solution you'd like. Add support for TVectorT\<int\> and a `TVectorI` shortcut (would be easier to use that from Python). ### Describe alternatives you've considered. @pcanal [proposed](https://root-forum.cern.ch/t/tvectort-int/12041/4?u=ynikitenko) such a code,. struct VectorWrapper : public TObject {. std::vector<int> fContent;. ClassDef(VectorWrapper, 2);. };. and to generate, compile and link a dictionary for that. However, it would take much more time than to use a ready class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8517
https://github.com/root-project/root/issues/8518:1721,availability,recov,recover,1721,"ies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2319,availability,error,error,2319,"orted from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4595,availability,Error,Error,4595,Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/mini,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4707,availability,Error,Error,4707,�ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/mini,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5545,availability,Error,Error,5545,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5657,availability,Error,Error,5657,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5863,availability,Error,Error,5863,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5975,availability,Error,Error,5975,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:37,deployability,modul,module,37,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:178,deployability,modul,modules,178,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:406,deployability,modul,modules,406,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:477,deployability,updat,updated,477,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:502,deployability,modul,module,502,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:626,deployability,modul,module,626,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:683,deployability,instal,installing,683,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:704,deployability,version,versions,704,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:716,deployability,depend,dependencies,716,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:775,deployability,manag,managed,775,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:908,deployability,build,building,908,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:917,deployability,modul,module,917,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:990,deployability,build,build,990,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1053,deployability,build,building,1053," Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1062,deployability,modul,module,1062," feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1085,deployability,build,build,1085,"d to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1120,deployability,build,building,1120,"rently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1129,deployability,modul,module,1129,"t's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1222,deployability,build,build,1222,"displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1287,deployability,build,building,1287,"ee https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1296,deployability,modul,module,1296,"://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1373,deployability,modul,module-includes,1373,"'d like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1496,deployability,build,building,1496,"e module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1505,deployability,modul,module,1505," bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1610,deployability,build,build,1610," and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally afte",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1721,deployability,recov,recover,1721,"ies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1798,deployability,depend,dependency,1798,"b/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: buildi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1860,deployability,patch,patch,1860," ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1866,deployability,releas,release,1866,"h. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1915,deployability,fail,fails,1915,"odule 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1924,deployability,build,build,1924,"d' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line include",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1995,deployability,build,building,1995,"include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Modul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2004,deployability,modul,module,2004,"<new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2087,deployability,build,build,2087,"]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2101,deployability,build,building,2101,":1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2110,deployability,modul,module,2110,"emark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2153,deployability,modul,module-includes,2153,"/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2594,deployability,fail,fails,2594,"m' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2682,deployability,continu,continues,2682,"if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Mod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2703,deployability,modul,modules,2703,"to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��X",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2797,deployability,build,building,2797,"endency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Modul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2806,deployability,modul,module,2806,"issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2885,deployability,build,build,2885,"sue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not foun",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2951,deployability,build,building,2951," interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2960,deployability,modul,module,2960,"tive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2986,deployability,build,build,2986,"mark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2994,deployability,Modul,Module,2994,"ilding module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3065,deployability,Modul,Module,3065,"ore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Modul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3135,deployability,Modul,Module,3135,"included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3167,deployability,Modul,Module,3167,"3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Modu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3189,deployability,Modul,Module,3189,"rom /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3258,deployability,Modul,Module,3258,"/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3290,deployability,Modul,Module,3290,"ude/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3316,deployability,Modul,Module,3316,"error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3425,deployability,build,building,3425,"1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3434,deployability,modul,module,3434,"~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. M",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3515,deployability,build,build,3515,"lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 no",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3581,deployability,build,building,3581,"why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� n",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3590,deployability,modul,module,3590," fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3617,deployability,build,build,3617,"g this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3625,deployability,Modul,Module,3625,"t, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3654,deployability,Modul,Module,3654," -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/en",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3684,deployability,Modul,Module,3684,"nues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3744,deployability,Modul,Module,3744, <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /ho,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3775,deployability,Modul,Module,3775,luder >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3796,deployability,Modul,Module,3796,ilding module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3891,deployability,Modul,Module,3891,<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:3975,deployability,Modul,Module,3975,Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4063,deployability,Modul,Module,4063,odule test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finish,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4092,deployability,Modul,Module,4092,nt81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4148,deployability,Modul,Module,4148,.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to abov,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4166,deployability,Modul,Module,4166,dule lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4222,deployability,Modul,Module,4222,�:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4240,deployability,Modul,Module,4240,�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: build,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4275,deployability,Modul,Module,4275, not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4328,deployability,Modul,Module,4328,'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4349,deployability,Modul,Module,4349,��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4356,deployability,modul,module,4356,�(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4374,deployability,Modul,Module,4374,<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4418,deployability,Modul,Module,4418,rk: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4436,deployability,Modul,Module,4436,e 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module Fit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4454,deployability,Modul,Module,4454,ome/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4488,deployability,Modul,Module,4488,/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not fou,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4527,deployability,Modul,Module,4527,ng interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Mod,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4907,deployability,build,building,4907,. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4916,deployability,modul,module,4916,�2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/minicon,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5003,deployability,build,build,5003,s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROO,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5069,deployability,build,building,5069,w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm fi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5078,deployability,modul,module,5078,not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5108,deployability,build,build,5108,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5238,deployability,build,building,5238,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5247,deployability,modul,module,5247,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5322,deployability,build,build,5322,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5388,deployability,build,building,5388,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5397,deployability,modul,module,5397,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5421,deployability,build,build,5421,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5429,deployability,Modul,Module,5429,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5458,deployability,Modul,Module,5458,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5495,deployability,Modul,Module,5495,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5527,deployability,Modul,Module,5527,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:121,energy efficiency,Current,Currently,121,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:775,energy efficiency,manag,managed,775,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4613,energy efficiency,Load,LoadPCM,4613,build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/li,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:4725,energy efficiency,Load,LoadPCM,4725,\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module !p�w��:�2 not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/li,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5563,energy efficiency,Load,LoadPCM,5563,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5675,energy efficiency,Load,LoadPCM,5675,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5881,energy efficiency,Load,LoadPCM,5881,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:5993,energy efficiency,Load,LoadPCM,5993,��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found. Module not found. Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found. Module not found. Module GeneticMinimizer not found. Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found. Module �� not found. Module module not found. Module base_1621��7VP\�2Vl_khr_f not found. Module not found. Module not found. Module �'��&E'��'�Q|�~ not found. Module Q����2V�. ��2V����a3 not found. Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the third:. ```. <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]. (truncated but it's similar to above). ```. on the **fourteenth**:. ```. <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]. Module FitterBase not found. Module (�;cU! ��;cUpJ��� not found. Module TMVA.pcmoRTTI not found. Module not found. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```. on the **fifteenth** run it finally becomes stable with this output:. ```. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist. Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:704,integrability,version,versions,704,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:716,integrability,depend,dependencies,716,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1798,integrability,depend,dependency,1798,"b/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: buildi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:37,modifiability,modul,module,37,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:178,modifiability,modul,modules,178,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:406,modifiability,modul,modules,406,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:502,modifiability,modul,module,502,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:626,modifiability,modul,module,626,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:704,modifiability,version,versions,704,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:716,modifiability,depend,dependencies,716,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:917,modifiability,modul,module,917,"Improve diagnostic information about module rebuilds; ### Is your feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: build",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1062,modifiability,modul,module,1062," feature request related to a problem? Please describe. Currently it's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/Ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1129,modifiability,modul,module,1129,"t's hard to debug issues that happen when the modules are rebuilt as there is no information displayed about why ROOT decided to rebuild them. For an example see https://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1296,modifiability,modul,module,1296,"://github.com/conda-forge/root-feedstock/issues/136. ### Describe the solution you'd like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1373,modifiability,modul,module-includes,1373,"'d like. When rebuilding modules information will be displayed such as: `/usr/include/foo.h got updated, must regenerate module bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1505,modifiability,modul,module,1505," bar`. ### Describe alternatives you've considered. ### Additional context. I've tried a few thing to try and force a module rebuild, e.g. editing headers, touching files and installing different versions of dependencies but ROOT never seems to notice. The best I've managed is to delete all `lib/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:1798,modifiability,depend,dependency,1798,"b/*.pcm` files which obviously triggers them to be rebuilt:. ```bash. $ root. input_line_1:1:10: remark: building module 'std' as '/home/cburr/miniconda3/envs/test/lib/std.pcm' [-Rmodule-build]. #include <new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: buildi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2004,modifiability,modul,module,2004,"<new>. ^. input_line_1:1:10: remark: finished building module 'std' [-Rmodule-build]. input_line_2:1:10: remark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2110,modifiability,modul,module,2110,"emark: building module 'Cling_Runtime' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2153,modifiability,modul,module-includes,2153,"/cburr/miniconda3/envs/test/lib/Cling_Runtime.pcm' [-Rmodule-build]. #include ""cling/Interpreter/RuntimeUniverse.h"". ^. While building module 'Cling_Runtime' imported from input_line_2:1:. In file included from <module-includes>:3:. /home/cburr/miniconda3/envs/test/etc//cling/Interpreter/DynamicLookupRuntimeUniverse.h:16:10: remark: building module 'Cling_Runtime_Extra' as '/home/cburr/miniconda3/envs/test/lib/Cling_Runtime_Extra.pcm' [-Rmodule-build]. #include ""cling/Interpreter/DynamicExprInfo.h"". ^. ```. I don't know if ROOT is supposed to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2703,modifiability,modul,modules,2703,"to be able to recover from this but I run in to three issues, the first is the known `tbb` dependency issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��X",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2806,modifiability,modul,module,2806,"issue in 6.24.0 that is already fixed for the next patch release. The second issue is that `MathCore.pcm` fails to build with:. ```bash. <<< cling interactive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2960,modifiability,modul,module,2960,"tive line includer >>>: remark: building module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
https://github.com/root-project/root/issues/8518:2994,modifiability,Modul,Module,2994,"ilding module 'MathCore' as '/home/cburr/miniconda3/envs/test/lib/MathCore.pcm' [-Rmodule-build]. While building module 'MathCore':. In file included from <module-includes>:3:. In file included from /home/cburr/miniconda3/envs/test/include/Fit/Chi2FCN.h:19:. /home/cburr/miniconda3/envs/test/include/Fit/FitUtil.h:404:23: error: no matching constructor for initialization of 'std::vector<double>'. std::vector<double> ones{1, 1, 1, 1};. ^ ~~~~~~~~~~~~~~~~. ```. I can workaround this by using four `ones.push_back(1.0);` lines instead of initialising it as ones though it doesn't explain why this fails. Finally after fixing this it, running `root.exe -b -l -q -e '1+1' -x` repeatedly continues to rebuild modules, e.g. on the second iteration:. ```. <<< cling interactive line includer >>>: remark: building module 'Minuit' as '/home/cburr/miniconda3/envs/test/lib/Minuit.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Minuit' [-Rmodule-build]. Module a����2V`^��2V`X��2V�N��2VPP��2V��x�2V@!`�k�2V@�:�2V` not found. Module test__CLING__GNUC__ct_int81����2V���2V-in-extern-ce not found. Module includeit.pcm not found. Module lib not found. Module P�w�P�w� ���2V��'�2V0b(�2V��:�2V���2V����2V�:�2V not found. Module ���2V@)����2V not found. Module TFitter not found. Module. )��o�~�'��'�@5��(�L)�B5��(��)�J5��(�$ not found. <<< cling interactive line includer >>>: remark: building module 'Genetic' as '/home/cburr/miniconda3/envs/test/lib/Genetic.pcm' [-Rmodule-build]. <<< cling interactive line includer >>>: remark: finished building module 'Genetic' [-Rmodule-build]. Module ROOTGpadv7 not found. Module ���2V8���2V not found. Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found. Module Ц~�����2V D not found. Module mi not found. Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found. Module 9.0 not found. ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found. Module @�ĉ7VPh%�2V@h%�",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8518
